//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Generalate.Models.Edmx
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmailEntities : DbContext
    {
        public EmailEntities()
            : base("name=EmailEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ArchiveField> ArchiveFields { get; set; }
        public virtual DbSet<ArchiveFieldValue> ArchiveFieldValues { get; set; }
        public virtual DbSet<ArchiveUser> ArchiveUsers { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<DocumentContent> DocumentContents { get; set; }
        public virtual DbSet<DocumentField> DocumentFields { get; set; }
        public virtual DbSet<InboxEmail> InboxEmails { get; set; }
        public virtual DbSet<InboxEmailAttachment> InboxEmailAttachments { get; set; }
        public virtual DbSet<PArchiveField> PArchiveFields { get; set; }
        public virtual DbSet<PArchiveFieldValue> PArchiveFieldValues { get; set; }
        public virtual DbSet<PersonalDetail> PersonalDetails { get; set; }
        public virtual DbSet<PersonalDocumentContent> PersonalDocumentContents { get; set; }
        public virtual DbSet<tbl_DailySms> tbl_DailySms { get; set; }
        public virtual DbSet<tbl_EmailAttachement> tbl_EmailAttachement { get; set; }
        public virtual DbSet<tbl_Emaildata> tbl_Emaildata { get; set; }
        public virtual DbSet<tbl_SMSContent> tbl_SMSContent { get; set; }
    
        public virtual int addAttachment(string fileName, byte[] fileContent, string fileMIMEtype, string fileExtension, Nullable<System.Guid> emailUniqueId)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var fileContentParameter = fileContent != null ?
                new ObjectParameter("FileContent", fileContent) :
                new ObjectParameter("FileContent", typeof(byte[]));
    
            var fileMIMEtypeParameter = fileMIMEtype != null ?
                new ObjectParameter("FileMIMEtype", fileMIMEtype) :
                new ObjectParameter("FileMIMEtype", typeof(string));
    
            var fileExtensionParameter = fileExtension != null ?
                new ObjectParameter("FileExtension", fileExtension) :
                new ObjectParameter("FileExtension", typeof(string));
    
            var emailUniqueIdParameter = emailUniqueId.HasValue ?
                new ObjectParameter("EmailUniqueId", emailUniqueId) :
                new ObjectParameter("EmailUniqueId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addAttachment", fileNameParameter, fileContentParameter, fileMIMEtypeParameter, fileExtensionParameter, emailUniqueIdParameter);
        }
    
        public virtual int AddEmailData(Nullable<System.Guid> emailUniqueId, string emailSubject, string emailBody, string toAddress, string cCAddress, string bCCAddress, string admin, Nullable<bool> isImportant)
        {
            var emailUniqueIdParameter = emailUniqueId.HasValue ?
                new ObjectParameter("EmailUniqueId", emailUniqueId) :
                new ObjectParameter("EmailUniqueId", typeof(System.Guid));
    
            var emailSubjectParameter = emailSubject != null ?
                new ObjectParameter("EmailSubject", emailSubject) :
                new ObjectParameter("EmailSubject", typeof(string));
    
            var emailBodyParameter = emailBody != null ?
                new ObjectParameter("EmailBody", emailBody) :
                new ObjectParameter("EmailBody", typeof(string));
    
            var toAddressParameter = toAddress != null ?
                new ObjectParameter("ToAddress", toAddress) :
                new ObjectParameter("ToAddress", typeof(string));
    
            var cCAddressParameter = cCAddress != null ?
                new ObjectParameter("CCAddress", cCAddress) :
                new ObjectParameter("CCAddress", typeof(string));
    
            var bCCAddressParameter = bCCAddress != null ?
                new ObjectParameter("BCCAddress", bCCAddress) :
                new ObjectParameter("BCCAddress", typeof(string));
    
            var adminParameter = admin != null ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(string));
    
            var isImportantParameter = isImportant.HasValue ?
                new ObjectParameter("IsImportant", isImportant) :
                new ObjectParameter("IsImportant", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEmailData", emailUniqueIdParameter, emailSubjectParameter, emailBodyParameter, toAddressParameter, cCAddressParameter, bCCAddressParameter, adminParameter, isImportantParameter);
        }
    
        public virtual int addSMSContent(string feast, string content, string status, string spare)
        {
            var feastParameter = feast != null ?
                new ObjectParameter("Feast", feast) :
                new ObjectParameter("Feast", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var spareParameter = spare != null ?
                new ObjectParameter("Spare", spare) :
                new ObjectParameter("Spare", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addSMSContent", feastParameter, contentParameter, statusParameter, spareParameter);
        }
    
        public virtual int DeleteByEmailId(Nullable<System.Guid> emailUniqueId)
        {
            var emailUniqueIdParameter = emailUniqueId.HasValue ?
                new ObjectParameter("EmailUniqueId", emailUniqueId) :
                new ObjectParameter("EmailUniqueId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteByEmailId", emailUniqueIdParameter);
        }
    
        public virtual int deleteSMSContent(Nullable<int> contentId)
        {
            var contentIdParameter = contentId.HasValue ?
                new ObjectParameter("ContentId", contentId) :
                new ObjectParameter("ContentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteSMSContent", contentIdParameter);
        }
    
        public virtual ObjectResult<GetDataByMailId_Result> GetDataByMailId(Nullable<System.Guid> emailUniqueId)
        {
            var emailUniqueIdParameter = emailUniqueId.HasValue ?
                new ObjectParameter("EmailUniqueId", emailUniqueId) :
                new ObjectParameter("EmailUniqueId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataByMailId_Result>("GetDataByMailId", emailUniqueIdParameter);
        }
    
        public virtual ObjectResult<GetEmailWithFileCount_Result> GetEmailWithFileCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmailWithFileCount_Result>("GetEmailWithFileCount");
        }
    
        public virtual ObjectResult<GetFileDataByFileId_Result> GetFileDataByFileId(Nullable<System.Guid> fileUniqueId)
        {
            var fileUniqueIdParameter = fileUniqueId.HasValue ?
                new ObjectParameter("FileUniqueId", fileUniqueId) :
                new ObjectParameter("FileUniqueId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFileDataByFileId_Result>("GetFileDataByFileId", fileUniqueIdParameter);
        }
    
        public virtual ObjectResult<GetInboxByMailId_Result> GetInboxByMailId(Nullable<System.Guid> inboxEmailID)
        {
            var inboxEmailIDParameter = inboxEmailID.HasValue ?
                new ObjectParameter("InboxEmailID", inboxEmailID) :
                new ObjectParameter("InboxEmailID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetInboxByMailId_Result>("GetInboxByMailId", inboxEmailIDParameter);
        }
    
        public virtual int updateSMSContent(Nullable<int> contentId, string feast, string content, string status, string spare)
        {
            var contentIdParameter = contentId.HasValue ?
                new ObjectParameter("ContentId", contentId) :
                new ObjectParameter("ContentId", typeof(int));
    
            var feastParameter = feast != null ?
                new ObjectParameter("Feast", feast) :
                new ObjectParameter("Feast", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var spareParameter = spare != null ?
                new ObjectParameter("Spare", spare) :
                new ObjectParameter("Spare", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("updateSMSContent", contentIdParameter, feastParameter, contentParameter, statusParameter, spareParameter);
        }
    }
}
