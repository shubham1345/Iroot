using Generalate.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Data.Entity.Validation;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.IO;
using System.Web.Helpers;
using Generalate.Helpers;

namespace Generalate.Controllers
{
    [CustomAuthenticationFilter]
    public class Socity1Controller : Controller
    {

        GeneralDBContext dbcont = new GeneralDBContext();

        public ActionResult SocityAdministratiom()
        {
            return View();
        }

        public ActionResult SocityMain()
        {
            return View();
        }

        public ActionResult PopDetails()
        {
            return View();
        }

        public ActionResult Institution()
        {
            return View();
        }

        public ActionResult AddInstMember()
        {
            return View();
        }
        //public JsonResult Add(tbl_Bank_Details general)
        //{
        //    try
        //    {
        //        dbcont.tbl_Bank_Details.Add(general);
        //        dbcont.SaveChanges();
        //        return Json("Success");
        //    }
        //    catch (Exception ex)
        //    {
        //        Console.WriteLine(ex.Message);
        //        return Json("Failed");
        //    }
        //}
        public JsonResult GetAutoGeneratedMemberId()
        {
            var query = (from c in dbcont.tbl_Inst
                         select new { c.InstitutionId }).Count() + 1;

            string id = string.Format("{0:000}", query);

            return Json(id, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        public JsonResult Add(tbl_Soc_Addminstration general)
        {
            try
            {
                dbcont.tbl_Soc_Addminstration.Add(general);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }
        }





             [HttpPost]
        public JsonResult Addsoc(tbl_Socityadd general)
        {
            try
            {
                dbcont.tbl_Socityadd.Add(general);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }
          
        }

        [HttpPost]
        public JsonResult AddInst(tbl_institution123 general)
        {
            try
            {
                dbcont.tbl_institution123.Add(general);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }

        }

        [HttpPost]
        public JsonResult AddInstDetails(tbl_InstDetails general)
        {
            try
            {
                dbcont.tbl_InstDetails.Add(general);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }

        }


        [HttpPost]
        public JsonResult AddLandDetails(tbl_LandDetails general)
        {
            try
            {
                dbcont.tbl_LandDetails.Add(general);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }

        }

   



        [HttpPost]
        public JsonResult AddMember(tbl_InstitutionFinal general)
        {
            try
            {
                dbcont.tbl_InstitutionFinal.Add(general);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }

        }
    }
}
