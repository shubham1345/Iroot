using DocumentFormat.OpenXml.Wordprocessing;
using Generalate.Models;
using Generalate.Models.ViewModels;
using Generalate.ViewModel;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.Entity;
using System.Data.SqlClient;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;
using System.Web.Caching;
using System.Runtime.Caching;
using System.Collections;

namespace Generalate.Controllers
{
    // [CustomAuthenticationFilter]
    public class HomeController : Controller
    {
        private GeneralDBContext db = new GeneralDBContext();
        private GeneralDBContext dbcont = new GeneralDBContext();
        private GeneralDBContext dbcont1 = new GeneralDBContext();
        private GeneralDBContext dbcont2 = new GeneralDBContext();
        public GeneralDBContext dbcontext = new GeneralDBContext();
        public GeneralDBContext dbcontext1 = new GeneralDBContext();

        public ActionResult Index()
        {
            return View();
        }
        public ActionResult LayOut2()
        {
            return View();
        }

        public ActionResult Admin()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string loginuserid = Convert.ToString(Session["loginuserid"]);
            ViewBag.ActiveLanguages = dbcont.Tbl_Languagesetting.FirstOrDefault(x => x.Active == "1");
            string langCode;
            langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);

            GetDashboardViewmodel getDashboardViewmodel = new GetDashboardViewmodel();
            getDashboardViewmodel.AllSocieties = GetAllSocietyDict();
            getDashboardViewmodel.AllCongdata = GetAllCongDic();
            getDashboardViewmodel.AllCongdict = GetAllCongDict();
            getDashboardViewmodel.Allcommosdict = GetAllCommosDict();
            getDashboardViewmodel.AllDiosecDict = GetAllDissecDictionary();
            getDashboardViewmodel.GetAllProvinceDict = GetAllProvinceDictionary();

            var tblprovince = dbcont.tbl_Province.ToList();
            var tblparishinstitutiondetails = dbcont.Tbl_ParisInstitutionDetails.ToList();
            var tblsociety = dbcont.Societys.ToList();
            var tbldiocese = dbcont.tbl_Diocese.ToList();
            var tblretirement = dbcont.tbl_Retirement.ToList();
            var tblrenewal = dbcont.Tbl_RenewalVows.ToList();
            var tblcirculars = dbcont.Circulars.ToList();
            var tbnewsletter = dbcont.NewsLetter.ToList();

            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            if (currentUser == "")
            {
                return RedirectToAction("Login");
            }

            string birthdaydata = "";
            var currentday = System.DateTime.Now;
            string newsletter = "";
            string Circuardata = "";
            string jubilidata = "";

            if (Session["username"].ToString() == "admin")
            {
                int MemberInCandi = 0;
                int MemberInNovi = 0;
                int MemberInNovIst = 0;
                int MemberInNovIInd = 0;
                int firstvow = 0;
                int finalvow = 0;
                List<TempPersonelDataViewmodel> tempPersonels = new List<TempPersonelDataViewmodel>();
                List<PersonalDetailsViewModel> sepdata = new List<PersonalDetailsViewModel>();
                List<TempDeathviewmodel> Deathdatas = new List<TempDeathviewmodel>();
                var tblpersoneldatas = GetPersonelDetaisl();
                foreach (var item in tblpersoneldatas)
                {
                    tempPersonels = item.Personeldetails;
                    MemberInCandi = item.MemberInCandi.Count();
                    MemberInNovi = item.MemberInNovIst.Count();
                    MemberInNovIInd = item.MemberInNovIInd.Count();
                    firstvow = item.firstvow.Count();
                    finalvow = item.finalvow.Count();
                    sepdata = item.personalDetailsViewModels;
                    Deathdatas = item.Deathdata;
                }
                ViewBag.AllMembersCount = tempPersonels.Count();
                ViewBag.AllNovandPPCount = MemberInNovi;


                 Dictionary<int, string> personeldict = new Dictionary<int, string>();
               

                foreach (var personeltbl in tempPersonels)
                {
                    if (personeldict.Count == 0)
                    {
                        if (langCode == "EN")
                        {
                            personeldict.Add(0, "---Select Name ---");
                        }
                        else
                        {
                            personeldict.Add(0, "---Sélectionnez le nom ---");
                        }
                    }
                    else
                    {
                        string name = personeltbl.Name + " " + personeltbl.SirName;
                        if (!personeldict.ContainsKey(Convert.ToInt32(personeltbl.PersonalDetailsId))) {
                            personeldict.Add(Convert.ToInt32(personeltbl.PersonalDetailsId), name);

                        }
                    }
                }
                getDashboardViewmodel.personeltable = personeldict;

                //var count = AllMembersCount.Count();
                //All Community
                var getAllData = new List<CommunityViewModel>();
                var allCommViewDetails = db.Tbl_Cong.Where(x => x.Status == 1 || x.Status == 0).ToList();
                var provinceName = tblprovince.ToList();
                getAllData = (from m in allCommViewDetails
                              from n in provinceName
                              where m.ProvinceName == n.Id.ToString()
                              // from o in dataPrimary
                              //where m.MemberID == o.MemberId
                              select new CommunityViewModel
                              {
                                  CommunityCode = m.CommCode,
                                  CommunityName = m.CongregationName,
                                  Id = m.Id.ToString(),
                                  ProvinceName = n.ProvinceName,
                              }).ToList();
                ViewBag.AllCommunityCount = getAllData.Count();

                //Institution
                ViewBag.AllInstituteCount = tblparishinstitutiondetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count();

                //Society
                ViewBag.AllCongCount = tblsociety.Where(x => x.ActiveCkeck == "Active").Count();

                //All Parish
                ViewBag.allDio = tbldiocese.Where(x => x.ActiveCkeck == "Active").Count();
                ViewBag.AllParishCount = tblparishinstitutiondetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count();

                //AllRetirement
                ViewBag.AllRetirement = tblretirement.Count();


                //AllPerpectual Profession
                //firstvow
                ViewBag.AllPerpetualProfession = firstvow;
                //finalvow
                ViewBag.AllDiaconate = finalvow;

                //NoviIIndYear
                ViewBag.AllOrdinations = MemberInNovIInd;
                //NoviIstYear
                //Candidates
                ViewBag.AllEnterToNov = MemberInCandi;



                //PassedDetails
                DateTime currentdate = new DateTime();
                currentdate = DateTime.Now;
                //var Deathsepcount = "";
                //List<TempDeathviewmodel> tbl_Passed = new List<TempDeathviewmodel>();
                //List<tbl_SeperationFromTheCongregation> tbl_SeperationFromTheCongregation = new List<tbl_SeperationFromTheCongregation>();
                //if (Deathsepcount == "0")
                //{
                //    foreach (var obj in Deathdatas)
                //    {
                //        var passeddate = obj.Date.Split('/');

                //        if (passeddate[2].TrimStart('0') == currentdate.Year.ToString())
                //        {
                //            tbl_Passed.Add(obj);
                //        }
                //        //DateTime deathdate;
                //        //if (DateTime.TryParse(obj.Date,out deathdate) && deathdate == currentdate)
                //        //{
                //        //    tblpassed.Add(obj);
                //        //}
                //    }
                //    ViewBag.AllDeathRecordCount = tbl_Passed.Count();
                //    //foreach (var item in sepdata)
                //    //{
                //    //    var seprdate = item.Date.Split('/');
                //    //    if (seprdate[2].TrimStart('0') == currentdate.Year.ToString())
                //    //    {
                //    //        tbl_SeperationFromTheCongregation.Add(item);

                //    //    }
                //    //    //DateTime sepratindate;
                //    //    //if(DateTime.TryParse(item.SeperationAge,out sepratindate) && sepratindate == currentdate)
                //    //    //{
                //    //    //    tbl_SeperationFromTheCongregation.Add(item);
                //    //    //}
                //    //}
                //    //ViewBag.AllDepartCount = tbl_SeperationFromTheCongregation.Count();

                //}
                //else
                {
                    ViewBag.AllDeathRecordCount = Deathdatas.Count();
                    //Sepration
                    ViewBag.AllDepartCount = sepdata.Count();
                }

                //Circulars
                var allCirculars = tblcirculars.ToList();
                ViewBag.allCirculars = allCirculars;

                //birthdaydata

                foreach (var primarydata in tempPersonels)
                {
                    if (primarydata.DOB == null)
                        continue;
                    var birthdate = primarydata.DOB;
                    string[] date;
                    if (birthdate.Contains('-'))
                    {
                        date = birthdate.Split('-');
                    }
                    else
                    {
                        date = birthdate.Split('/');
                    }

                    if (!(date[0].TrimStart('0') == currentday.Day.ToString() && date[1].TrimStart('0') == currentday.Day.ToString()))
                        continue;


                    if (dbcont.tbl_Passed.Any(a => a.MemberID == primarydata.MemberID))
                        continue;

                    if (dbcont.tbl_SeperationFromTheCongregation.Any(a => a.MemberID == primarydata.MemberID))
                        continue;

                    var src = "";
                    if (primarydata.UploadPhoto == "" || primarydata.UploadPhoto == null)
                    {
                        src = "/Image/Logo/NoImage.jpg";
                    }
                    else
                    {
                        src = "/Image/Primarydetails/" + primarydata.UploadPhoto;

                    }
                    var row = "<div align='left'><img class='zoom' src='" + src + "' style='height:35px; width:35px;'>" + "<span style='margin-left:10px'>" + primarydata.Name + " " + primarydata.SirName + "</span>" + "</div>";
                    birthdaydata = birthdaydata + row;               

                }


                //eternaldata
                string eternaldata = "";
                
                foreach (var deathdata in Deathdatas)
                {
                    if (deathdata.Date == null)
                        continue;

                    DateTime deathDate;

                    DateTime.TryParse(deathdata.Date, out deathDate);


                    if (deathDate.Day != DateTime.Now.Day || deathDate.Month != DateTime.Now.Month)
                        continue;

                    var src = string.Empty;
                    if (string.IsNullOrWhiteSpace(deathdata.Spare1))
                        src = "/Image/Logo/NoImage.jpg";
                    else
                        src = "/Image/Primarydetails/" + deathdata.Spare1;


                    eternaldata = eternaldata + "<div align='left'><img class='zoom' src='" + src + "' style='height:35px; width:35px;'><span style='margin-left:10px'>" + deathdata.Name + " " + deathdata.SirName + "</span>" + "</div>";

                }

                //NewsLetter
                foreach (var news in tbnewsletter)
                {
                    if (news.Date != null && news.NewsType == "News")
                    {
                        var newsdate = news.Date.Split('/');
                        if (newsdate[0].TrimStart('0') == currentday.Day.ToString() && newsdate[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            newsletter += "<div class='col-sm-12'>";
                            newsletter += "<div class='col-sm-4'>";
                            newsletter += "<p class='NewsPopOpen' style='cursor: pointer;' data-val='" + news.Id + "'>" + news.Title + "</p>";
                            newsletter += "</div class='col-sm-4'>";

                            newsletter += "<div class='col-sm-4'>";
                            newsletter += "<p>" + news.Date + "</p>";
                            newsletter += "</div class='col-sm-4'>";
                            newsletter += "</div class='col-sm-12'>";
                        }
                    }
                }


                //Circulardata
                foreach (var circuar in tblcirculars)
                {
                    if (circuar.Date != null)
                    {
                        var date = circuar.Date.Split('/');
                        if (date[0].TrimStart('0') == currentday.Day.ToString() && date[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            Circuardata += "<div class='col-sm-12'>";
                            Circuardata += "<div class='col-sm-4'>";
                            Circuardata += "<p id='CircularPopup'>" + circuar.ProvinceName + "</p>";
                            Circuardata += "</div class='col-sm-4'>";

                            Circuardata += "<div class='col-sm-4'>";
                            Circuardata += "<p>" + circuar.Title + "</p>";
                            Circuardata += "</div class='col-sm-4'>";

                            Circuardata += "<div class='col-sm-4'>";
                            Circuardata += "<p>" + circuar.Date + "</p>";
                            Circuardata += "</div class='col-sm-4'>";
                            Circuardata += "</div class='col-sm-12'>";
                        }
                    }
                }

                //var test=from perfron in  dbcontext.tbl_PersonalDetails


                //jubilidata
                var jubliiiData = GetJubliiiDatas();

                foreach (var jubliii in jubliiiData)
                {
                    
                    var date = jubliii.Date.Split('/');
                    if (!(date[0].TrimStart('0') == currentday.Year.ToString() && date[1].TrimStart('0') == currentday.Year.ToString()))
                    {
                        var src = "";
                        if (string.IsNullOrEmpty(jubliii.UploadPhoto))
                            src = "/Image/Logo/NoImage.jpg";
                        else
                            src = "/Image/Primarydetails/" + jubliii.UploadPhoto;

                        jubilidata += "<div class='col-sm-12'>";
                        jubilidata += "<div class='col-sm-5'>";
                        jubilidata += "<img class='zoom' src='" + src + "' style='height:35px; width:35px;'>" + "<span  style='margin-left:10px'>" + jubliii.Name + "</span>";
                        jubilidata += "</div>";

                        jubilidata += "<div class='col-sm-4'>";
                        jubilidata += "<p>" + jubliii.SurName + "</p>";
                        jubilidata += "</div>";

                        jubilidata += "<div class='col-sm-3'>";
                        jubilidata += "<p> " + jubliii.JubliiType + "</p>";
                        jubilidata += "</div>";
                        jubilidata += "</div class='col-sm-12'>";
                    }
                }

                getDashboardViewmodel.Birthdaydata = birthdaydata;
                getDashboardViewmodel.JubiliData = jubilidata;
                getDashboardViewmodel.Eternaldata = eternaldata;
                getDashboardViewmodel.Newsletter = newsletter;
                getDashboardViewmodel.Circular = Circuardata;
            }
            else
            {


                int MemberInCandi = 0;
                int MemberInNovi = 0;
                int MemberInNovIst = 0;
                int MemberInNovIInd = 0;
                int firstvow = 0;
                int finalvow = 0;
                List<TempPersonelDataViewmodel> tempPersonels = new List<TempPersonelDataViewmodel>();
                List<PersonalDetailsViewModel> sepdata = new List<PersonalDetailsViewModel>();
                List<TempDeathviewmodel> Deathdatas = new List<TempDeathviewmodel>();

                var tblpersoneldatas = GetPersonelDetaisl();
                foreach (var item in tblpersoneldatas)
                {
                    tempPersonels = item.Personeldetails;
                    MemberInCandi = item.MemberInCandi.Count();
                    MemberInNovi = item.MemberInNovi.Count();
                    MemberInNovIInd = item.MemberInNovIInd.Count();
                    firstvow = item.firstvow.Count();
                    finalvow = item.finalvow.Count();
                    sepdata = item.personalDetailsViewModels;
                    Deathdatas = item.Deathdata;
                }

                ViewBag.AllMembersCount = tempPersonels.Where(x => x.Provincename == currentUser).Count();

                Dictionary<int, string> personeldict = new Dictionary<int, string>();
                foreach (var personeltbl in tempPersonels)
                {
                    if (personeldict.Count == 0)
                    {
                        if (langCode == "EN")
                        {
                            personeldict.Add(0, "---Select Name ---");
                        }
                        else
                        {
                            personeldict.Add(0, "---Sélectionnez le nom ---");
                        }
                    }
                    else
                    {
                        string name = personeltbl.Name + " " + personeltbl.SirName;
                        // personeldict.Add(Convert.ToInt32(personeltbl.PersonalDetailsId), name);
                        if (!personeldict.ContainsKey(Convert.ToInt32(personeltbl.PersonalDetailsId)))
                        {
                            personeldict.Add(Convert.ToInt32(personeltbl.PersonalDetailsId), name);

                        }
                    }
                }
                getDashboardViewmodel.personeltable = personeldict;


                var MemberInDead = dbcont.tbl_Passed.Select(x => x.MemberID).ToList();
                var MemberInSep = dbcont.tbl_SeperationFromTheCongregation.Select(x => x.MemberID).ToList();


                //All Retirement

                ViewBag.AllPerpetualProfession = firstvow;
                ViewBag.AllDiaconate = finalvow;
                ViewBag.AllEnterToNov = MemberInCandi;
                ViewBag.AllOrdinations = MemberInNovIInd;
                ViewBag.AllNovandPPCount = MemberInNovIst;

                //Allcommunity
                ViewBag.AllCommunityCount = db.Tbl_Cong.Where(x => (x.Status == 1 || x.Status == 0) && x.ProvinceName == currentUser).Count();

                //AllInstitution
                var ProvinceName = tblprovince.Where(x => x.Id.ToString() == currentUser).Select(x => x.ProvinceName).FirstOrDefault().ToString();
                ViewBag.AllInstituteCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && (x.ProvinceName == currentUser || x.ProvinceName == ProvinceName)).Count();





                //PassedDetails
                ViewBag.AllDeathRecordCount = dbcont.tbl_Passed.Where(x => x.ProvinceName == currentUser).Count();

                //Sepration
                ViewBag.AllDepartCount = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.ProvinceName == currentUser).Count();


                //Circulars
                var allCirculars = tblcirculars.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.allCirculars = allCirculars;

                //Birthday

                var allbirthdata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == loginuserid && x.DOB != null).ToList();

                foreach (var primarydata in allbirthdata)
                {
                    if (primarydata.DOB != null)
                    {
                        var birthdate = primarydata.DOB;
                        string[] date;
                        if (birthdate.Contains('-'))
                        {
                            date = birthdate.Split('-');
                        }
                        else
                        {
                            date = birthdate.Split('/');
                        }

                        if (date[0].TrimStart('0') == currentday.Day.ToString() && date[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            var personeldate = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == primarydata.MemberId);
                            if (personeldate != null)
                            {
                                var src = "";
                                if (primarydata.UploadPhoto == "" || primarydata.UploadPhoto == null)
                                {
                                    src = "/Image/Logo/NoImage.jpg";
                                }
                                else
                                {
                                    src = "/Image/Primarydetails/" + primarydata.UploadPhoto;

                                }
                                var row = "<div align='left'><img class='zoom' src='" + src + "' style='height:35px; width:35px;'>" + "<span style='margin-left:10px'>" + personeldate.Name + " " + personeldate.SirName + "</span>" + "</div>";
                                birthdaydata = birthdaydata + row;
                            }
                        }

                    }
                }

                //NewsLetter
                foreach (var news in tbnewsletter)
                {
                    if (news.Date != null && news.NewsType == "News")
                    {
                        var newsdate = news.Date.Split('/');
                        if (newsdate[0].TrimStart('0') == currentday.Day.ToString() && newsdate[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            newsletter += "<div class='col-sm-12'>";
                            newsletter += "<div class='col-sm-4'>";
                            newsletter += "<p class='NewsPopOpen' style='cursor: pointer;' data-val='" + news.Id + "'>" + news.Title + "</p>";
                            newsletter += "</div class='col-sm-4'>";

                            newsletter += "<div class='col-sm-4'>";
                            newsletter += "<p>" + news.Date + "</p>";
                            newsletter += "</div class='col-sm-4'>";
                            newsletter += "</div class='col-sm-12'>";
                        }
                    }
                }

                //Circulardata
                foreach (var circuar in tblcirculars)
                {
                    if (circuar.Date != null)
                    {
                        var date = circuar.Date.Split('/');
                        if (date[0].TrimStart('0') == currentday.Day.ToString() && date[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            Circuardata += "<div class='col-sm-12'>";
                            Circuardata += "<div class='col-sm-4'>";
                            Circuardata += "<p id='CircularPopup'>" + circuar.ProvinceName + "</p>";
                            Circuardata += "</div class='col-sm-4'>";

                            Circuardata += "<div class='col-sm-4'>";
                            Circuardata += "<p>" + circuar.Title + "</p>";
                            Circuardata += "</div class='col-sm-4'>";

                            Circuardata += "<div class='col-sm-4'>";
                            Circuardata += "<p>" + circuar.Date + "</p>";
                            Circuardata += "</div class='col-sm-4'>";
                            Circuardata += "</div class='col-sm-12'>";
                        }
                    }
                }

                //jubilidata
                //var jubliiiData = new List<JubliiiData>();
                //SqlConnection con1 = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                //con1.Open();
                //SqlCommand cmd1 = new SqlCommand("Sp_GetJubliData", con1);
                //cmd1.CommandType = CommandType.StoredProcedure;
                ////if (FilterType == "2" && FilterData != "")
                ////{
                ////    cmd.Parameters.AddWithValue("@province", FilterData);
                ////}

                //SqlDataAdapter da1 = new SqlDataAdapter();
                //da1.SelectCommand = cmd1;
                //DataTable dt1 = new DataTable();
                //da1.Fill(dt1);
                //con1.Close();
                //cmd1.Dispose();
                ////var data = dbcont.tbl_Primarydetails.Where(x => x.Ordination != "" && x.Ordination != null).ToList();


                //if (dt1 != null)
                //{
                //    for (int i = 0; i < dt1.Rows.Count; i++)
                //    {
                //        var jubilidate = Convert.ToString(dt1.Rows[i][2]).Split('/');
                //        if (jubilidate[0].TrimStart('0') == currentday.Day.ToString() && jubilidate[1].TrimStart('0') == currentday.Month.ToString())
                //        {

                //            var src = "";
                //            if (Convert.ToString(dt1.Rows[i][3]) == null || Convert.ToString(dt1.Rows[i][3]) == null)
                //            {
                //                src = "/Image/Logo/NoImage.jpg";

                //            }
                //            else
                //            {
                //                src = "/Image/Primarydetails/" + Convert.ToString(dt1.Rows[i][3]);

                //            }

                //            jubilidata += "<div class='col-sm-12'>";
                //            jubilidata += "<div class='col-sm-5'>";
                //            jubilidata += "<img class='zoom' src='" + src + "' style='height:35px; width:35px;'>" + "<span  style='margin-left:10px'>" + Convert.ToString(dt1.Rows[i][0]) + "</span>";
                //            jubilidata += "</div>";

                //            jubilidata += "<div class='col-sm-4'>";
                //            jubilidata += "<p>" + Convert.ToString(dt1.Rows[i][4]) + "</p>";
                //            jubilidata += "</div>";

                //            jubilidata += "<div class='col-sm-3'>";
                //            jubilidata += "<p>" + Convert.ToString(dt1.Rows[i][2]) + "</p>";
                //            jubilidata += "</div>";
                //            jubilidata += "</div class='col-sm-12'>";
                //        }

                //    }
                //}

                //getDashboardViewmodel.Birthdaydata = birthdaydata;
                //getDashboardViewmodel.JubiliData = jubilidata;
                //getDashboardViewmodel.Newsletter = newsletter;
                //getDashboardViewmodel.Circular = Circuardata;



                var jubliiiData = GetJubliiiDatas();

                foreach (var jubliii in jubliiiData)
                {

                    var date = jubliii.Date.Split('/');
                    if (!(date[0].TrimStart('0') == currentday.Year.ToString() && date[1].TrimStart('0') == currentday.Year.ToString()))
                    {
                        var src = "";
                        if (string.IsNullOrEmpty(jubliii.UploadPhoto))
                            src = "/Image/Logo/NoImage.jpg";
                        else
                            src = "/Image/Primarydetails/" + jubliii.UploadPhoto;

                        jubilidata += "<div class='col-sm-12'>";
                        jubilidata += "<div class='col-sm-5'>";
                        jubilidata += "<img class='zoom' src='" + src + "' style='height:35px; width:35px;'>" + "<span  style='margin-left:10px'>" + jubliii.Name + "</span>";
                        jubilidata += "</div>";

                        jubilidata += "<div class='col-sm-4'>";
                        jubilidata += "<p>" + jubliii.SurName + "</p>";
                        jubilidata += "</div>";

                        jubilidata += "<div class='col-sm-3'>";
                        jubilidata += "<p> " + jubliii.JubliiType + "</p>";
                        jubilidata += "</div>";
                        jubilidata += "</div class='col-sm-12'>";
                    }
                }

                getDashboardViewmodel.Birthdaydata = birthdaydata;
                getDashboardViewmodel.JubiliData = jubilidata;
                //getDashboardViewmodel.Eternaldata = eternaldata;
                getDashboardViewmodel.Newsletter = newsletter;
                getDashboardViewmodel.Circular = Circuardata;

            }
            var allNewsLetter = tbnewsletter.ToList();
            ViewBag.allNewsLetter = allNewsLetter;

            var allNews = tbnewsletter.Where(x => x.NewsType == "News").ToList();
            ViewBag.allNews = allNews;

            var allNewsL = tbnewsletter.Where(x => x.NewsType == "NewsLetter").ToList();
            ViewBag.allNewsL = allNewsL;

            return View(getDashboardViewmodel);
        }

        [HttpPost]
        public async Task<JsonResult> GetDashBoardbyProvince(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            var tblsociety = dbcont.Societys.ToList();


            List<tbl_Province> tblprovince = new List<tbl_Province>();
            Task t3 = Task.Run(() => tblprovince = dbcont1.tbl_Province.ToList());
            Task.WaitAll(t3);

            if (province == "0" || province == "null")
                province = null;
            try
            {
                if (!string.IsNullOrEmpty(province))
                {
                    List<PersonelDetailscachetbl> personelDetailscachetbls = new List<PersonelDetailscachetbl>();
                    personelDetailscachetbls = GetPersonelDetaisl();

                    List<TempPersonelDataViewmodel> tempPersonelDataViewmodels = new List<TempPersonelDataViewmodel>();
                    List<TempClass> MemberIncandidates = new List<TempClass>();
                    List<TempClass> MemberInnovitiates = new List<TempClass>();
                    List<TempClass> MemberIstNovitiate = new List<TempClass>();
                    List<TempClass> MemberInIIndNovitiate = new List<TempClass>();
                    List<TempClass> MemberInfirstvow = new List<TempClass>();
                    List<TempClass> MemberInFinalvow = new List<TempClass>();
                    List<TempPersonelDataViewmodel> tempPersonels = new List<TempPersonelDataViewmodel>();
                    List<PersonalDetailsViewModel> sepdata = new List<PersonalDetailsViewModel>();
                    List<TempDeathviewmodel> Deathdatas = new List<TempDeathviewmodel>();

                    foreach (var item in personelDetailscachetbls)
                    {
                        tempPersonelDataViewmodels = item.Personeldetails;
                        MemberIncandidates = item.MemberIncandidates;
                        MemberIstNovitiate = item.MemberIstNovitiate;
                        MemberInIIndNovitiate = item.MemberInIIndNovitiate;
                        MemberInfirstvow = item.MemberInfirstvow;
                        MemberInFinalvow = item.MemberInFinalvow;
                        sepdata = item.personalDetailsViewModels;
                        Deathdatas = item.Deathdata;
                    }

                    List<TempPersonelDataViewmodel> personeldata = new List<TempPersonelDataViewmodel>();

                    personeldata = tempPersonelDataViewmodels.Where(x => x.Provincename == province).ToList();
                    //personeldata = tblpersoneldetails.Where(x => x.IsDeleted == false && !(MemberInNovi.Contains(x.MemberID)) && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInNovIInd.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == province).Distinct().ToList();
                    ViewBag.AllMembersCount = personeldata.Count();
                    //Institution        

                    var ProvinceName = tblprovince.Where(x => x.Id.ToString() == province).Select(x => x.ProvinceName).FirstOrDefault().ToString();
                    ViewBag.AllInstituteCount = await db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && (x.ProvinceName == province || x.ProvinceName == ProvinceName)).CountAsync();


                    //AllCommunity
                    ViewBag.AllCommunityCount = await db.Tbl_Cong.Where(x => x.Status == 1 && x.ProvinceName == province).CountAsync();

                    //firstvow
                    ViewBag.AllPerpetualProfession = MemberInfirstvow.Where(x => x.Provincename == province).Count();
                    //finalvow
                    ViewBag.AllDiaconate = MemberInFinalvow.Where(x => x.Provincename == province).Count();

                    //noviIIndyear
                    ViewBag.AllOrdinations = MemberInIIndNovitiate.Where(x => x.Provincename == province).Count();

                    //Nov1styear
                    ViewBag.AllNovandPPCount = MemberIstNovitiate.Where(x => x.Provincename == province).Count();

                    //Candidates
                    ViewBag.AllEnterToNov = MemberIncandidates.Where(x => x.Provincename == province).Count();

                    //PassedDetails
                    ViewBag.AllDeathRecordCount = Deathdatas.Where(x => x.Provincename == province).Count();

                    //SeprationDepart
                    ViewBag.AllDepartCount = sepdata.Where(x => x.ProvinceName == province).Count();
                }



                else
                {
                    //AllMembers
                    //var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
                    var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
                    var MemberInCandi = tblformationdetails.Where(x => x.StageOfFormation == "11" && x.Status == "1").Select(x => x.MemberId).ToList();
                    var MemberInDead = db.tbl_Passed.Select(x => x.MemberID).ToList();
                    var MemberInSep = db.tbl_SeperationFromTheCongregation.Select(x => x.MemberID).ToList();
                    var AllMembersCount = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" /*&& x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12"*/).Select(x => new { x.Name, x.MemberID, x.ProvinceName, x.ProvinceCode }).Distinct();
                    ViewBag.AllMembersCount = await AllMembersCount.CountAsync();
                    //Institution        

                    ViewBag.AllInstituteCount = await db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").CountAsync();

                    //AllCommunity
                    var getAllData = new List<CommunityViewModel>();
                    var allCommViewDetails = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").ToList();
                    var provinceName = db.tbl_Province.ToList();
                    getAllData = (from m in allCommViewDetails
                                  from n in provinceName
                                  where m.ProvinceName == n.Id.ToString()
                                  // from o in dataPrimary
                                  //where m.MemberID == o.MemberId
                                  select new CommunityViewModel
                                  {
                                      CommunityCode = m.CommCode,
                                      CommunityName = m.CongregationName,
                                      Id = m.Id.ToString(),
                                      ProvinceName = n.ProvinceName,
                                  }).ToList();
                    ViewBag.AllCommunityCount = getAllData.Count();


                    ViewBag.AllCongCount = tblformationdetails.Where(x => x.StageOfFormation == "11" && x.Status == "1").Count();
                    //AllProvince           
                    ViewBag.AllProvinceCount = await db.tbl_Province.Where(x => x.ActiveCkeck == "Active").CountAsync();

                    //AllParish           
                    ViewBag.allDio = await dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").CountAsync();
                    ViewBag.AllParishCount = await db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").CountAsync();


                    //AllRetirement          

                    ViewBag.AllRetirement = await db.tbl_Retirement.CountAsync();


                    ViewBag.AllPerpetualProfession = tblformationdetails.Where(x => x.StageOfFormation == "3" && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Count();

                    //var AllDiaconate = memberDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17")
                    //    .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct();
                    //ViewBag.AllDiaconate = AllDiaconate.Count();
                    ViewBag.AllDiaconate = tblformationdetails.Where(x => x.StageOfFormation == "6" && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Count();


#pragma warning disable CS0219 // The variable 'AllOrdinations' is assigned but its value is never used
                    var AllOrdinations = "";
#pragma warning restore CS0219 // The variable 'AllOrdinations' is assigned but its value is never used


                    //var AllNovandPPCount = await memberDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "13" || x.StageOfFormation == "14"))
                    //.Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct().CountAsync();
                    //ViewBag.AllNovandPPCount = AllNovandPPCount;
                    ViewBag.AllNovandPPCount = tblformationdetails.Where(x => (x.StageOfFormation == "14" || x.StageOfFormation == "13") && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Count();





                    // var AllMembersCount = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CurrentStatus != null && (x.CurrentStatus == "11" || x.CurrentStatus == "12")).Select(x => new { x.Name, x.MemberID, x.ProvinceName, x.ProvinceCode }).Distinct();
                    ViewBag.AllEnterToNov = "";

                    var VowsRenewal = dbcont.Tbl_RenewalVows.Where(x => (x.CurrentStatus == "14" || x.CurrentStatus == "15") && x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null)
                    .ToList().Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct();
                    ViewBag.TotalVowsRenewal = VowsRenewal.Count();

                    var tbl_VowsRenewal = dbcont.Tbl_RenewalVows.Count();
                    ViewBag.tbl_Vows = tbl_VowsRenewal;


                    var Archive = dbcont.tbl_Archive.Count();
                    ViewBag.TotalArchive = Archive;


                    var tbl_Archive = await dbcont.tbl_Archive.CountAsync();
                    ViewBag.tbl_Archive = tbl_Archive;


                    var GenFileNo = await dbcont.GeneralateFileNo.CountAsync();
                    ViewBag.GenFileNoData = GenFileNo;

                    //PassedDetails

                    ViewBag.AllDeathRecordCount = await db.tbl_Passed.CountAsync();

                    //SeprationDepart

                    ViewBag.AllDepartCount = await db.tbl_SeperationFromTheCongregation.CountAsync();
                }
            }
            catch (Exception ex)
            {

                throw new Exception(ex.Message, ex);
            }

            return Json(new
            {
                AllMembersCount = ViewBag.AllMembersCount,
                AllInstituteCount = ViewBag.AllInstituteCount,
                AllCommunityCount = ViewBag.AllCommunityCount,
                AllCongCount = ViewBag.AllCongCount,
                AllProvinceCount = ViewBag.AllProvinceCount,
                allDio = ViewBag.allDio,
                AllParishCount = ViewBag.AllParishCount,
                AllRetirement = ViewBag.AllRetirement,
                AllPerpetualProfession = ViewBag.AllPerpetualProfession,
                AllDiaconate = ViewBag.AllDiaconate,
                AllOrdinations = ViewBag.AllOrdinations,
                AllNovandPPCount = ViewBag.AllNovandPPCount,
                AllNovOnlyCount = ViewBag.AllNovOnlyCount,
                AllOnlyPPCount = ViewBag.AllOnlyPPCount,
                AllEnterToNov = ViewBag.AllEnterToNov,
                TotalVowsRenewal = ViewBag.TotalVowsRenewal,
                tbl_Vows = ViewBag.tbl_Vows,
                TotalArchive = ViewBag.TotalArchive,
                GenFileNoData = ViewBag.GenFileNoData,
                AllDeathRecordCount = ViewBag.AllDeathRecordCount,
                AllDepartCount = ViewBag.AllDepartCount,
                LegalReg = ViewBag.LegalReg
            }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetArchiveDeathSeparationCount()
        {
            //PassedDetails
            //var Passeddaata = db.tbl_Passed.ToList();
            //var data = Passeddata.Where(x => x.MemberID == db.tbl_Archive.Select(y => y.MemberId).ToString()).ToList().Count();

            //var data = (from ad in db.tbl_Archive
            //            join pd in db.tbl_Passed on ad.MemberId equals pd.MemberID into ArchiveDeath
            //            join sd in db.tbl_SeperationFromTheCongregation on ad.MemberId equals sd.MemberID into ArchiveSepate
            //            select new
            //            {
            //                ArchiveDeathCount = ArchiveDeath.Count(),
            //                ArchiveSeparateCount = ArchiveSepate.Count()

            //            });
            var data = (from m in db.tbl_Archive
                        where db.tbl_Passed.Any(x => x.MemberID == m.MemberId)
                        select m.MemberId).Count();
            //Label progressMessageLabel = UpdateProgress1.FindControl("sAguarde") as Label;
            //if (progressMessageLabel != null)
            //{
            //item1.Text = "something";
            //}

            return Json(data, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetGeneralateFileNo(string province)
        {
            List<GeneralateFileNo> data = new List<GeneralateFileNo>();
            var loginid = Convert.ToInt32(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                data = dbcont.GeneralateFileNo.ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
            }
            else
            {
                var GenFileNo = dbcont.GeneralateFileNo.FirstOrDefault(x => x.CreatedBy == loginid.ToString());
                data.Add(GenFileNo);
            }

            return Json(data, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetCurrentNewses(string id)
        {
            var data = dbcont.NewsLetter.ToList().LastOrDefault(x => x.Id.ToString() == id);
            if (data != null)
            {
                ViewBag.Title = data.Title;
                ViewBag.Date = data.Date;
                ViewBag.Description = data.Description;
            }
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetGenfileNo(string id)
        {
            try
            {
                var renewal = dbcont.GeneralateFileNo.FirstOrDefault(e => e.Id.ToString() == id);
                if (renewal != null)
                {
                    return Json(renewal, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("NoRecord", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAll()
        {
            try
            {
                string month = DateTime.Now.ToString("MM");
                string year = DateTime.Now.ToString("yyyy");
                IQueryable<tbl_Jubilee> getJubilee = db.tbl_Jubilee.Where(c => c.FirstProfession.StartsWith(month) && c.FirstProfession.EndsWith(year));
                return Json(getJubilee, JsonRequestBehavior.AllowGet);
            }
            catch (Exception)
            {
                throw;
            }
        }

        [AllowAnonymous]
        public ActionResult Login(bool? logout)
        {

            var loginid = Convert.ToInt32(Session["loginuserid"]);
            if (logout == true)
            {
                Tracking("Logout", loginid);
            }
            Session.Clear();
            Response.Cookies.Clear();
            Session.RemoveAll();
            Session.Abandon();
            Session["Language"] = dbcont.Tbl_MultiLanguage.ToList();

            ViewBag.ActiveLanguage = dbcont.Tbl_Languagesetting.FirstOrDefault(x => x.Active == "1");

            return View();
        }

        [HttpPost]
        public JsonResult Login(Tbl_UserLogins userlogin)
        {
            var data = Request;
            if (Request.Files.Count > 0)
            {
                try
                {
                    //  Get all files from Request object  
                    HttpFileCollectionBase files = Request.Files;
                    for (int i = 0; i < files.Count; i++)
                    {
                        HttpPostedFileBase file = files[i];
                        if ((file != null) && (file.ContentLength != 0) && !string.IsNullOrEmpty(file.FileName))
                        {
                            string fileName = file.FileName;
                            string fileContentType = file.ContentType;
                            byte[] fileBytes = new byte[file.ContentLength];
                            //var data2 = file.InputStream.Read(fileBytes, 0, Convert.ToInt32(file.ContentLength));
                            BinaryReader b = new BinaryReader(file.InputStream);
                            byte[] binData = b.ReadBytes(file.ContentLength);

                            string encryptedData = System.Text.Encoding.UTF8.GetString(binData);

                            var user = db.Tbl_UserLogins.FirstOrDefault(x => x.LoginUserName == userlogin.UserName && x.UserPassword == userlogin.UserPassword && x.EncrptedInfo == encryptedData);
                            if (user != null)
                            {
                                if (user.UserName == "admin")
                                {
                                    Session["username"] = user.UserName;
                                    Session["userid"] = user.Id;
                                    Session["loginuserid"] = user.Id;
                                    Session["createdby"] = user.CreatedBy;

                                    var rolePermissionList = dbcont.RolePagePermissions.Where(x => x.RoleName == "admin" && x.provinceId == userlogin.UserName && x.HasPermission == true).ToList();
                                    Session["rolePermissionList"] = rolePermissionList;

                                    var TabPermissionList = dbcont.Tbl_TabPermissions.Where(x => x.RoleName == "admin" && x.provinceId == userlogin.UserName && x.IsPermission == "True").ToList();
                                    Session["tabPermissionList"] = TabPermissionList;
                                }
                                else
                                {
                                    //UserName  =  provinceID
                                    var province = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == user.UserName);
                                    if (province != null)
                                    {
                                        Session["provinceId"] = province.Id;
                                    }

                                    Session["username"] = user.UserName;
                                    Session["userid"] = user.Id;
                                    Session["loginuserid"] = user.Id;
                                    Session["MemberId"] = user.MemberId;

                                    //Get Rolepagepermissions
                                    var rolePermissionList = dbcont.RolePagePermissions.Where(x => x.RoleName == user.UserRole && x.provinceId == user.UserName && x.CreatedBy == user.CreatedBy && x.HasPermission == true).ToList();
                                    Session["rolePermissionList"] = rolePermissionList;

                                    var TabPermissionList = dbcont.Tbl_TabPermissions.Where(x => x.RoleName == user.UserRole && x.provinceId == user.UserName && x.CreatedBy == user.CreatedBy && x.IsPermission == "True").ToList();
                                    Session["tabPermissionList"] = TabPermissionList;
                                }
                                var ActiveLanguage = dbcont.Tbl_Languagesetting.FirstOrDefault(x => x.Active == "1");

                                Session["password"] = userlogin.UserPassword;

                                Session["UserRole"] = user.UserRole;
                                Session["CurrentLang"] = ActiveLanguage.LanguageCode;
                                //var activelang = dbcont.Tbl_Languagesetting.FirstOrDefault(x => x.Active == "1");
                                var userRoleName = user.UserRole;
                                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
                                Session["Language"] = dbcont.Tbl_MultiLanguage.ToList();
                                Session["DataItems"] = dbcont.DataListItems.ToList();
    //                            var topmenuheaderIds = dbcont.Tbl_TopMenuPermission
    //.Where(x => x.RoleId == userRoleId.ToString())
    //.Select(x => x.TopMenuHeader_Id)
    //.Distinct()
    //.ToList();

    //                            var topmenuheader = dbcont.Tbl_Topmenuheader
    //    .Where(tmh => topmenuheaderIds.Contains(tmh.Header_id))
    //    .ToList();
    //                            //var topmenuheader = dbcont.Tbl_Topmenuheader.ToList();

    //                            Session["TopMenuHeader"] = topmenuheader;

                                var topmenupermission = dbcont.Tbl_TopMenuPermission.ToList();

                               
                                if (user.UserRole == "admin")
                                {
                                    var topmenuheaderadmin = dbcont.Tbl_Topmenuheader.ToList();

                                    Session["TopMenuHeader"] = topmenuheaderadmin;
                                    var topmenulist = topmenupermission.Where(x => x.RoleId == "1").ToList();
                                    Session["TopmenuPermission"] = topmenulist;

                                    Session["ViewPagePermission"] = topmenulist;
                                }
                                else
                                {

                                    var topmenuheaderIds = dbcont.Tbl_TopMenuPermission
   .Where(x => x.RoleId == userRoleId.ToString())
   .Select(x => x.TopMenuHeader_Id)
   .Distinct()
   .ToList();

                                    var topmenuheader = dbcont.Tbl_Topmenuheader
            .Where(tmh => topmenuheaderIds.Contains(tmh.Header_id))
            .ToList();
                                    //var topmenuheader = dbcont.Tbl_Topmenuheader.ToList();

                                    Session["TopMenuHeader"] = topmenuheader;
                                    //var toppermission = topmenupermission.Where(x => x.MemberId == user.MemberId).ToList();
                                    var toppermission = topmenupermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                                    Session["TopmenuPermission"] = toppermission;

                                    Session["ViewPagePermission"] = toppermission;
                                }

                                var distinctSubmenuRecords = (
           from s in dbcont.Tbl_Submenuhead
           join t in dbcont.Tbl_TopMenuPermission
           on s.Submenu_Id equals t.ParentId
           where t.HasPermission == true
           where dbcont.Tbl_TopMenuPermission.Any(tp => tp.ParentId == s.Submenu_Id && tp.HasPermission == true && tp.RoleId==userRoleId.ToString())
           select new
           {
               s.Submenu_Id,
               s.Submenu_Name,
               s.Topmenu_Id,
               s.Topmenu_Name,
               s.CreatedBy,
               s.CreatedDate,
               s.UpdateBy,
               s.UpdateDate,
               s.Page_name,
               s.File_Name
           }
).Distinct().AsEnumerable() // Use AsEnumerable() to switch to LINQ to Objects
.Select(s => new Tbl_Submenuhead
{
    Submenu_Id = s.Submenu_Id,
    Submenu_Name = s.Submenu_Name,
    Topmenu_Id = s.Topmenu_Id,
    Topmenu_Name = s.Topmenu_Name,
    CreatedBy = s.CreatedBy,
    CreatedDate = s.CreatedDate,
    UpdateBy = s.UpdateBy,
    UpdateDate = s.UpdateDate,
    Page_name = s.Page_name,
    File_Name = s.File_Name
}).ToList();


                                // Now distinctSubmenuRecords is a List<Submenu> containing distinct submenu records


                                // Now you can use distinctSubmenuRecords as needed
                                var submenulist = dbcont.Tbl_Submenuhead.ToList();
                                if (user.UserRole == "admin")
                                {
                                    Session["SubMenuList"] = submenulist;
                                }
                                else
                                {
                                    Session["SubMenuList"] = distinctSubmenuRecords;

                                }
                                Tracking("Login", user.Id);

                                Session["GetCurrentUserRole"] = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == user.UserName.ToUpper()).Select(x=>x.UserRole).FirstOrDefault().ToString();

                                return Json("200");
                            }
                            else
                            {
                                return Json("201");
                            }
                        }
                    }
                }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
                catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
                {
                    return Json("201");
                }
            }
            else
            {
                return Json("201");
            }
            return Json("201");
        }

        [NonAction]
        public string readTxt(HttpPostedFileBase file)
        {
            string inputContent = string.Empty;
            using (StreamReader inputStreamReader = new StreamReader(file.InputStream))
            {
                inputContent = inputStreamReader.ReadToEnd();
            }

            return inputContent;
        }
        public ActionResult ChangePassword()

        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            return View();
        }
        [HttpPost]
        public ActionResult ChangePassword(Tbl_UserLogins userlogin)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            if (ModelState.IsValid)
            {
                var user = (from userlist in db.Tbl_UserLogins
                            where userlist.UserName == userlogin.UserName && userlist.UserPassword == userlogin.UserPassword
                            select new
                            {
                                userlist.Id,
                                userlist.UserName,
                                userlist.UserPassword
                            }).ToList();

                if (user.FirstOrDefault() != null)
                {
                    Tbl_UserLogins changelogin = db.Tbl_UserLogins.FirstOrDefault(u => u.UserName == userlogin.UserName && u.UserPassword == userlogin.UserPassword);
                    changelogin.UserName = userlogin.UserName;
                    changelogin.UserPassword = userlogin.Spare1;
                    db.SaveChanges();

                    //return Redirect("~/Home/Admin");

                    ModelState.AddModelError("", "Password Updated Successfully.");
                    return View("ChangePassword");
                }
                else
                {
                    ModelState.AddModelError("", "The old login credentials does not match.");
                }
            }
            return View(userlogin);
        }
        public JsonResult GetProvinceCommissionById(int id)
        {
            try
            {
                var data = dbcont.tbl_ProCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetGeneralCommissionById(int id)
        {
            try
            {
                var data = dbcont.tblGenCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetDistCommissionById(int id)
        {
            try
            {
                var data = dbcont.tbl_DistSecCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult DeleteProvinceCommission(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_ProCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.tbl_ProCommission.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteDistSecCommission(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_DistSecCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.tbl_DistSecCommission.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public ActionResult CommunityDelete(string id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_Congregation.FirstOrDefault(e => e.Id.ToString() == id);
                if (data != null)
                {
                    dbcont.tbl_Congregation.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }


        public JsonResult GetProvinceCouncilById(int id)
        {
            try
            {
                var data = dbcont.Tbl_ProvinceCouncil.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetDistCouncilById(int id)
        {
            try
            {
                var data = dbcont.tbl_DistSecCouncil.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult UpdateProCouncil(Tbl_ProvinceCouncil Tbl_ProvinceCouncil)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var data = dbcont.Tbl_ProvinceCouncil.FirstOrDefault(x => x.Id == Tbl_ProvinceCouncil.Id);
                if (data != null)
                {
                    Tbl_ProvinceCouncil.CreatedBy = data.CreatedBy;
                    dbcont.Entry(data).CurrentValues.SetValues(Tbl_ProvinceCouncil);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

    


        public ActionResult DeleteProvinceCouncil(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_ProvinceCouncil.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.Tbl_ProvinceCouncil.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }


        }
        public ActionResult DeleteDistSecCouncil(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_DistSecCouncil.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.tbl_DistSecCouncil.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }

        }

        [HttpPost]
        public JsonResult AddGeneralCouncil(List<GeneralCouncil> GeneralCouncil)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralCouncil)
            {
                if (item.Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.MeetingMinutes.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.MeetingMinutes.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        if (item.ProvinceId == null)
                        {
                            item.ProvinceId = existingobj.ProvinceId;
                        }
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        [HttpPost]
        public JsonResult AddGeneralMember(List<GeneralMember> GeneralMember)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralMember)
            {
                if (item.Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.GeneralMember.Add(item);
                    db.SaveChanges();
                    setcookies("200");
                }
                else
                {
                    var existingobj = db.GeneralMember.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                        setcookies("200");
                        return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                    }
                }

            }

            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        [HttpPost]
        public JsonResult AddGeneralTreasurer(List<GeneralTreasurer> GeneralTreasurer)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralTreasurer)
            {
                if (item.Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.GeneralTreasurer.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.GeneralTreasurer.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }

        [HttpPost]
        public JsonResult AddGeneralSecretary(List<GeneralSecretary> GeneralSecretary)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralSecretary)
            {
                if (item.Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.GeneralSecretary.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.GeneralSecretary.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }


        [HttpPost]
        public JsonResult AddProvinceCouncil(List<Tbl_ProvinceCouncil> ProvinceCouncil)
        {
            //ProvinceCouncil.CreatedBy = Convert.ToString(Session["loginuserid"]);
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            //string ProvinceId = HttpUtility.ParseQueryString(myUri.Query).Get("myId");
            //var prodata = db.tbl_Province.FirstOrDefault(x=> x.ActiveCkeck == "Active" && x.MyId == ProvinceId);

            foreach (var item in ProvinceCouncil)
            {
                if (item.Id == 0)
                {
                    item.CreatedBy = Convert.ToString(Session["loginuserid"]);
                    // item.ProvinceId = ProvinceId;
                    // item.ProvinceName = prodata.Id.ToString();
                    db.Tbl_ProvinceCouncil.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.Tbl_ProvinceCouncil.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        //existingobj.ProvinceId = item.ProvinceId;
                        //existingobj.ProvinceName = item.ProvinceName;
                        //existingobj.FromDate = item.FromDate;
                        //existingobj.ToDate = item.ToDate;
                        //existingobj.MemberName = item.MemberName;
                        //existingobj.DesignationName = item.DesignationName;
                        //existingobj.ResponsibilityName = item.ResponsibilityName;

                        db.Entry(existingobj).CurrentValues.SetValues(item);

                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        [HttpPost]
        public JsonResult AddProvinceCommission(List<tbl_ProCommission> tbl_ProCommission)
        {
            //ProvinceCouncil.CreatedBy = Convert.ToString(Session["loginuserid"]);
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            //string ProvinceId = HttpUtility.ParseQueryString(myUri.Query).Get("myId");
            //var prodata = db.tbl_Province.FirstOrDefault(x => x.ActiveCkeck == "Active" && x.MyId == ProvinceId);

            foreach (var item in tbl_ProCommission)
            {
                if (item.Id == 0)
                {
                    item.CreatedBy = Convert.ToString(Session["loginuserid"]);
                    // item.ProId = ProvinceId;
                    // item.ProvinceName = prodata.Id.ToString();
                    db.tbl_ProCommission.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.tbl_ProCommission.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }

            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        [HttpPost]
        public JsonResult AddGeneralateCommission(List<tblGenCommission> tblGenCommission)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string ProvinceId = HttpUtility.ParseQueryString(myUri.Query).Get("id");
            //string ProvinceId = (tblGenCommission[0].GenId);
            var prodata = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == ProvinceId);

            foreach (var item in tblGenCommission)
            {
                if (item.Id == 0)
                {
                    item.CreatedBy = Convert.ToString(Session["loginuserid"]);
                    //item.GenId = ProvinceId;
                    db.tblGenCommission.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.tblGenCommission.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        [HttpPost]
        public JsonResult AddDistSecCommission(List<tbl_DistSecCommission> tbl_DistSecCommission)
        {
            //ProvinceCouncil.CreatedBy = Convert.ToString(Session["loginuserid"]);
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string id = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in tbl_DistSecCommission)
            {
                if (item.Id == 0)
                {
                    item.CreatedBy = Convert.ToString(Session["loginuserid"]);
                    item.DistSecId = id;
                    db.tbl_DistSecCommission.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.tbl_DistSecCommission.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        dbcont.SaveChanges();
                    }
                }

            }

            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        [HttpPost]
        public JsonResult AddDistSecCouncil(List<tbl_DistSecCouncil> tbl_DistSecCouncil)
        {
            //ProvinceCouncil.CreatedBy = Convert.ToString(Session["loginuserid"]);
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string ProvinceId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in tbl_DistSecCouncil)
            {
                if (item.Id == 0)
                {
                    item.CreatedBy = Convert.ToString(Session["loginuserid"]);
                    item.DistSecId = ProvinceId;
                    db.tbl_DistSecCouncil.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.tbl_DistSecCouncil.FirstOrDefault(e => e.Id == item.Id);
                    if (existingobj != null)
                    {
                        // tbl_DistSecCouncil.CreatedBy = existingobj.CreatedBy;
                        dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        dbcont.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }
        public JsonResult GetGeneralCouncilById(int id)
        {
            try
            {
                var data = dbcont.MeetingMinutes.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetGeneralMemberById(int id)
        {
            try
            {
                var data = dbcont.GeneralMember.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetGeneralTreasurerById(int id)
        {
            try
            {
                var data = dbcont.GeneralTreasurer.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetGeneralComissionById(int id)
        {
            try
            {
                var data = dbcont.tblGenCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult DeleteGeneralCommission(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tblGenCommission.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.tblGenCommission.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateGeneralCouncil(GeneralCouncil GeneralCouncil)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var data = dbcont.MeetingMinutes.FirstOrDefault(x => x.Id == GeneralCouncil.Id);
                if (data != null)
                {
                    GeneralCouncil.CreatedBy = data.CreatedBy;
                    dbcont.Entry(data).CurrentValues.SetValues(GeneralCouncil);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteGeneralCouncil(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.MeetingMinutes.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.MeetingMinutes.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteGeneralMember(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.GeneralMember.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.GeneralMember.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteGeneralTreasurer(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.GeneralTreasurer.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.GeneralTreasurer.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteGeneralSecretary(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.GeneralSecretary.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.GeneralSecretary.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetPerProfesssion(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_formationsDetails.Where(x => x.StageOfFormation == "17" && x.ProvinceName == province).Select(x => new { x.Name, x.MemberId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.Tbl_formationsDetails.Where(x => x.ProvinceName == currentUser && x.StageOfFormation == "17").Select(x => new { x.Name, x.MemberId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetRenewalsvowses(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_RenewalVows.Where(x => (x.CurrentStatus == "14" || x.CurrentStatus == "15") && x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null)
                                  .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().ToList();
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.Distinct().ToList();
                }
                else
                {
                    allRecords = allRecords.Distinct().ToList();
                }
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.Tbl_RenewalVows.Where(x => (x.CurrentStatus == "14" || x.CurrentStatus == "15") && x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null && x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberId }).Distinct().ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetArchive(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.tbl_Archive.Select(x => new { x.Name, x.MemberId, x.Surname, x.ArchiveNo, x.ProvinceName }).Distinct();
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.Distinct();
                }
                else
                {
                    allRecords = allRecords.Distinct();
                }
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Archive.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberId, x.Surname, x.ArchiveNo }).Distinct();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

        }

        public JsonResult GetArchiveNo1(string id)
        {
            try
            {
                var archive = dbcont.tbl_Archive.FirstOrDefault(e => e.Id.ToString() == id);
                if (archive != null)
                {
                    return Json(archive, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("NoRecord", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
        public ActionResult UpdateArchiveFileNo(tbl_Archive ArchiveFileNo)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var existingobj = dbcont.tbl_Archive.FirstOrDefault(e => e.Id == ArchiveFileNo.Id);
                if (existingobj != null)
                {
                    ArchiveFileNo.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(ArchiveFileNo);
                    dbcont.SaveChanges();
                }
                string[] names = ArchiveFileNo.Name.Split(' ');
                string name = names[0];
                var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.Name.Contains(name));
                if (dataUpdate != null)
                {
                    // dataUpdate.FileNo = ArchiveFileNo.FileNo;
                    dataUpdate.Archivecheck = ArchiveFileNo.Archivecheck;
                    dbcont.SaveChanges();
                }

                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetAllNovandPP1(string province, string NovitiateId)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            List<Formationmembers> allRecordsResponse = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

            if (Session["username"].ToString() == "admin")
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                        .ToList();
                    if (NovitiateId == "1")
                        check = check.Where(x => x.StageOfFormation == "13").ToList();
                    else if (NovitiateId == "2")
                        check = check.Where(x => x.StageOfFormation == "14").ToList();

                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                        .ToList();

                        if (NovitiateId == "1")
                            check2 = allTbl_formationsDetails.Where(x => x.MemberId == memberid.MemberId)
                         .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                         .ToList();
                        else if (NovitiateId == "2")
                            check2 = allTbl_formationsDetails.Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                        .ToList();


                        if (check2.Count() == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            allRecords.Add(data1);
                        }

                    }
                }
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var item in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(item);
                }

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                        .ToList();
                        if (check2.Count() == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            allRecords.Add(data1);
                        }
                    }
                }
                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                var allPro = db.tbl_Province;
                foreach (var item in allRecords1)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(item);
                }

                //var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecordsResponse, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllNovandPP(string province, string NovitiateId)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            List<Formationmembers> allRecordsResponse = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

            //var memberIds = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();

            //if (Session["username"].ToString() == "admin")
            //{
            //    var data1 = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
            //    var data = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
            //    .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();


            if (Session["username"].ToString() == "admin")
            {
                if (NovitiateId == "1")
                {
                    var memberIds = allTbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "13" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    allRecords.AddRange(data21);
                }
                else if (NovitiateId == "2")
                {
                    var Ids = allTbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && x.StageOfFormation == "14" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }

                else
                {
                    var Ids = allTbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "13" || x.StageOfFormation == "14") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }


                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var item in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(item);
                }

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                        .ToList();
                        if (check2.Count() == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            allRecords.Add(data1);
                        }
                    }
                }
                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                var allPro = db.tbl_Province;
                foreach (var item in allRecords1)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(item);
                }

                //var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecordsResponse, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllNoviceByProvince(JqueryDatatableParam param, string province, string NovitiateId)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            var allRecordsResponse = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();
            var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();
            //AllMembers
            List<string> CandidateForId = new List<string>();
            List<string> NovForId = new List<string>();
            List<string> PreNovForId = new List<string>();

            if (configData != null)
            {
                var condiForId = configData.Where(x => x.strConfigKey == "Novitiate 1st Year").Select(x => x.strConfigValue).ToList();
                if (condiForId != null)
                {
                    string[] tempList = condiForId[0].Split(',');
                    for (int i = 0; i < tempList.Count(); i++)
                    {
                        NovForId.Add(tempList[i]);
                    }
                }
            }

            if (Session["username"].ToString() == "admin")
            {

                if (NovitiateId == "10")
                {
                    var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => x.Status == "1" && x.StageOfFormation == "13" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    allRecords.AddRange(data21);
                }
                else if (NovitiateId == "20")
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => x.Status == "1" && x.StageOfFormation == "14" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }

                else
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => x.Status == "1" && NovForId.Contains(x.StageOfFormation) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }


                if (province != "")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var item in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(item);
                }
            }
            else
            {
                #region Old Code
                //foreach (var memberid in data)
                //{
                //    var check = allTbl_formationsDetails
                //        .Where(x => x.MemberId == memberid.MemberId)
                //        .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                //        .ToList();
                //    if (check.Count() > 0)
                //    {
                //        var check2 = allTbl_formationsDetails
                //        .Where(x => x.MemberId == memberid.MemberId)
                //        .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                //        .ToList();
                //        if (check2.Count() == 0)
                //        {
                //            var data1 = allTbl_formationsDetails
                //           .Where(x => x.MemberId == memberid.MemberId)
                //           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                //           .FirstOrDefault();
                //            allRecords.Add(data1);
                //        }
                //    }
                //}
                //var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                //var allPro = db.tbl_Province;
                //foreach (var item in allRecords1)
                //{
                //    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                //    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                //    allRecordsResponse.Add(item);
                //}
                #endregion
                if (NovitiateId == "10")
                {
                    var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => x.Status == "1" && x.StageOfFormation == "13" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    allRecords.AddRange(data21);
                }
                else if (NovitiateId == "20")
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => x.Status == "1" && x.StageOfFormation == "14" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }

                else
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => x.Status == "1" && NovForId.Contains(x.StageOfFormation) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }

                province = currentUser;
                if (province != "")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var item in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(item);
                }

            }
            if (!string.IsNullOrEmpty(param.sSearch))
            {
                allRecordsResponse = allRecordsResponse.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                                        || !string.IsNullOrEmpty(x.Name) && x.Name.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())).ToList();
            }
            var responseData = allRecordsResponse.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            var totalRecords = allRecordsResponse.Count();
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }

        public async Task<ActionResult> GetNovice(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
        //public JsonResult GetAllEnterToNov(string province, string typeId)
        public async Task<ActionResult> candidates(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<JsonResult> GetCandidateList(JqueryDatatableParam param, string province, string typeId)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            try
            {
                string currentUser = Convert.ToString(Session["username"]);
                string currentuserid = Convert.ToString(Session["loginuserid"]);
                List<Formationmembers> allRecords = new List<Formationmembers>();
                List<Formationmembers> allRecordsResponse = new List<Formationmembers>();
                var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();
                //AllMembers
                List<string> CandidateForId = new List<string>();
                List<string> NovForId = new List<string>();
                List<string> PreNovForId = new List<string>();
                if (configData != null)
                {
                    var condiForId = configData.Where(x => x.strConfigKey == "CandidateFormationId").Select(x => x.strConfigValue).ToList();
                    if (condiForId != null)
                    {
                        string[] tempList = condiForId[0].Split(',');
                        for (int i = 0; i < tempList.Count(); i++)
                        {
                            CandidateForId.Add(tempList[i]);
                        }
                    }
                }
                if (Session["username"].ToString() == "admin")
                {
                    var data21 = dbcont.Tbl_formationsDetails.Join(dbcont.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => CandidateForId.Contains(x.te.StageOfFormation) && x.te.Status == "1")
                   .Select(x => new Formationmembers { Name = x.te.Name, MemberId = x.te.MemberId, ProvinceName = x.te.ProvinceName, Surname = x.pr.SirName, VowsStatus = x.te.Status == "1" ? "Active" : "Completed", VowsDate = x.te.VowsDate }).Distinct();
                    allRecords.AddRange(data21);
                }
                else
                {
                    var data21 = dbcont.Tbl_formationsDetails.Join(dbcont.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => CandidateForId.Contains(x.te.StageOfFormation) && x.te.Status == "1" && x.te.ProvinceName == currentUser)
                  .Select(x => new Formationmembers { Name = x.te.Name, MemberId = x.te.MemberId, ProvinceName = x.te.ProvinceName, Surname = x.pr.SirName, VowsStatus = x.te.Status == "1" ? "Active" : "Completed", VowsDate = x.te.VowsDate }).Distinct();
                    allRecords.AddRange(data21);
                }
                if (province != "" && province != "undefined")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "")
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var pro in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
                    pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;

                    allRecordsResponse.Add(pro);
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allRecordsResponse = allRecordsResponse.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var totalRecords = allRecordsResponse.Count();
                var response = allRecordsResponse.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = response
                }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                throw ex;
            }
            #region Old Code

            // var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            // List<Formationmembers> allRecords = new List<Formationmembers>();
            // List<Formationmembers> allRecordsResponse = new List<Formationmembers>();
            // var data = await dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
            //.Select(x => new { x.MemberId }).Distinct().ToListAsync();

            // if (Session["username"].ToString() == "admin")
            // {
            //     if (typeId == "1")
            //     {
            //         var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "12" || x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
            //         var data21 = dbcont.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "11" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
            //         .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

            //         allRecords.AddRange(data21);
            //     }
            //     else if (typeId == "2")
            //     {
            //         var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
            //         var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && x.StageOfFormation == "12" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
            //         .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
            //         allRecords.AddRange(data21);

            //     }
            //     else
            //     {
            //         var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
            //         var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
            //         .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
            //         allRecords.AddRange(data21);

            //     }
            //     if (province != "")
            //     {
            //         allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
            //     }
            //     else if (province == "")
            //     {
            //         allRecords = allRecords.ToList();
            //     }

            //     var allPro = db.tbl_Province;
            //     foreach (var pro in allRecords)
            //     {
            //         var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
            //         pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
            //         allRecordsResponse.Add(pro);
            //     }

            // }
            // else
            // {
            //     foreach (var memberid in data)
            //     {
            //         var check = allTbl_formationsDetails
            //             .Where(x => x.MemberId == memberid.MemberId)
            //             .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
            //             .ToList();
            //         if (check.Count() > 0)
            //         {
            //             var check2 = allTbl_formationsDetails
            //            .Where(x => x.MemberId == memberid.MemberId)
            //            .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
            //            .ToList();
            //             if (check2.Count == 0)
            //             {
            //                 var data1 = allTbl_formationsDetails
            //                .Where(x => x.MemberId == memberid.MemberId)
            //                .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
            //                .FirstOrDefault();
            //                 allRecords.Add(data1);
            //             }

            //         }
            //     }

            //     allRecordsResponse.AddRange(allRecords.Where(x => x.ProvinceName == currentUser).ToList());

            // }
            // if (!string.IsNullOrEmpty(param.sSearch))
            // {
            //     allRecordsResponse = allRecordsResponse.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
            //                                 || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())).ToList();
            // }
            // var totalRecords = allRecordsResponse.Count();
            // var response = allRecordsResponse.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            // //return Json(data, JsonRequestBehavior.AllowGet);
            // return Json(new
            // {
            //     param.sEcho,
            //     iTotalRecords = totalRecords,
            //     iTotalDisplayRecords = totalRecords,
            //     aaData = response
            // }, JsonRequestBehavior.AllowGet);
            #endregion


        }

        public JsonResult GetAllEnterToNov(string province, string typeId)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);

            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            List<Formationmembers> allRecordsResponse = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

            if (Session["username"].ToString() == "admin")
            {
                if (typeId == "1")
                {
                    var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "12" || x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "11" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    allRecords.AddRange(data21);
                }
                else if (typeId == "2")
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && x.StageOfFormation == "12" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }
                else
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();
                    allRecords.AddRange(data21);

                }
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var pro in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
                    pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(pro);
                }
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            allRecords.Add(data1);
                        }

                    }
                }

                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecords1, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllEnterToNov1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);


            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            List<Formationmembers> allRecordsResponse = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

            if (Session["username"].ToString() == "admin")
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            allRecords.Add(data1);
                        }
                    }
                }
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var pro in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
                    pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(pro);
                }
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            allRecords.Add(data1);
                        }

                    }
                }

                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecords1, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllPersions2()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
            var tblpassed = dbcont.tbl_Passed.ToList();
            var tblseprationfromcongregation = dbcont.tbl_SeperationFromTheCongregation.ToList();
            var tblpersoneldetails = dbcont.tbl_PersonalDetails.ToList();
            if (currentUser != null)
            {
                //SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                //con.Open();
                //SqlCommand cmd = new SqlCommand("sp_GetPersoneldetails", con);
                //cmd.CommandType = CommandType.StoredProcedure;
                //cmd.Parameters.AddWithValue("@currentuser", currentUser);
                //SqlDataAdapter da = new SqlDataAdapter();
                //da.SelectCommand = cmd;
                //DataTable dt = new DataTable();
                //da.Fill(dt);
                //con.Close();
                //cmd.Dispose();

                //var getalldata = (from DataRow dr in dt.Rows
                //                  select new GetAllPrileView
                //                  {
                //                      PersonalDetailsId = Convert.ToInt32(dr["PersonalDetailsId"]),
                //                      Name = Convert.ToString(dr["Name"]),
                //                      Sirname = Convert.ToString(dr["SirName"]),
                //                      ProvinceCode = Convert.ToString(dr["ProvinceCode"])
                //                  }).ToList();

                //return Json(getalldata, JsonRequestBehavior.AllowGet);

                if (Session["username"].ToString() == "admin")
                {
                    var configData = GetConfingSettings();



                    //var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();
                    //AllMembers
                    List<string> CandidateForId = new List<string>();
                    List<string> NovForId = new List<string>();
                    List<string> PreNovForId = new List<string>();
                    List<string> NovIstYear = new List<string>();
                    List<string> NovIIndYear = new List<string>();

                    foreach (var item in configData)
                    {
                        if (item.strConfigKey == "CandidateFormationId")
                            CandidateForId.Add(item.strConfigValue);
                        if (item.strConfigKey == "Novitiate")
                            NovForId.Add(item.strConfigValue);
                        if (item.strConfigKey == "PrenovitiateFormationId")
                            PreNovForId.Add(item.strConfigValue);
                        if (item.strConfigKey == "Novitiate 1st Year")
                            NovIstYear.Add(item.strConfigValue);
                        if (item.strConfigKey == "Novitiate 2nd Year")
                            NovIIndYear.Add(item.strConfigValue);
                    }


                    List<string> MemberInCandi = new List<string>();
                    List<string> MemberInNovi = new List<string>();
                    List<string> MemberInNovIst = new List<string>();
                    List<string> MemberInNovIInd = new List<string>();
                    foreach (var item in tblformationdetails)
                    {
                        if (CandidateForId.Contains(item.StageOfFormation) && item.Status == "1")
                        {
                            MemberInCandi.Add(item.MemberId);
                        }
                        if (NovForId.Contains(item.StageOfFormation) && item.Status == "1" && item.Diedcheck == null && item.Sapcheck == null && item.Archivecheck == null)
                        {
                            MemberInNovi.Add(item.MemberId);
                        }
                        if (NovIstYear.Contains(item.StageOfFormation) && item.Status == "1")
                        {
                            MemberInCandi.Add(item.MemberId);
                        }
                        if (NovIIndYear.Contains(item.StageOfFormation) && item.Status == "1")
                        {
                            MemberInCandi.Add(item.MemberId);
                        }

                    }
                    //var MemberInCandi = tblformationdetails.Where(x => CandidateForId.Contains(x.StageOfFormation)/*x.StageOfFormation == "11"*/ && x.Status == "1").Select(x => x.MemberId).ToList();
                    //var MemberInNovi = tblformationdetails.Where(x => x.Status == "1" && (NovForId.Contains(x.StageOfFormation)/*x.StageOfFormation == "13" || x.StageOfFormation == "14"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Select(x => x.MemberId).ToList();
                    //var MemberInNovIst = tblformationdetails.Where(x => NovIstYear.Contains(x.StageOfFormation) && x.Status == "1").Select(x => x.MemberId).ToList();
                    //var MemberInNovIInd = tblformationdetails.Where(x => NovIIndYear.Contains(x.StageOfFormation) && x.Status == "1").Select(x => x.MemberId).ToList();
                    var MemberInDead = tblpassed.Select(x => x.MemberID).ToList();
                    var MemberInSep = tblseprationfromcongregation.Select(x => x.MemberID).ToList();

                    //foreach(var obj in tblpersoneldetails)
                    //{
                    //    if((MemberInNovi.Where(x => x.MemberId == obj.MemberID)))
                    //}

                    var AllMembersCount = tblpersoneldetails.
                        Where(x => x.IsDeleted == false && !(MemberInNovIst.Contains(x.MemberID)) && !(MemberInNovIInd.Contains(x.MemberID)) && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes").Select(x => new { x.Name, x.MemberID, x.ProvinceName, x.ProvinceCode, x.PersonalDetailsId, x.SirName }).Distinct();

                    var data = AllMembersCount.Count();
                    //var allRecords = dbcont.tbl_PersonalDetails
                    //                 .Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck != "yes")
                    //                 .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode })
                    //                 .ToList();
                    return Json(AllMembersCount, JsonRequestBehavior.AllowGet);
                }
                else
                {

                    var MemberInCandi = tblformationdetails.Where(x => x.StageOfFormation == "11" && x.Status == "1").Select(x => x.MemberId).ToList();
                    var MemberInNovi = tblformationdetails.Where(x => x.Status == "1" && (x.StageOfFormation == "13" || x.StageOfFormation == "14") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Select(x => x.MemberId).ToList();

                    var MemberInDead = tblpassed.Select(x => x.MemberID).ToList();
                    var MemberInSep = tblseprationfromcongregation.Select(x => x.MemberID).ToList();
                    var AllMembersCount = tblpersoneldetails.Where(x => x.IsDeleted == false && !(MemberInNovi.Contains(x.MemberID)) && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberID, x.ProvinceName, x.ProvinceCode, x.SirName, x.PersonalDetailsId }).Distinct();
                    //ViewBag.AllMembersCount = AllMembersCount.Count();

                    //var allRecords = dbcont.tbl_PersonalDetails
                    //         .Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null && x.ProvinceName == currentUser)
                    //         .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode })
                    //         .ToList();
                    return Json(AllMembersCount, JsonRequestBehavior.AllowGet);
                }
            }

            else
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }


        }
        public JsonResult GetAllPersions(string province, bool isPresentProvinceSelected = false)
        {
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            //var tblpersoneldetails = dbcont.tbl_PersonalDetails.ToList();
            if (province == "undefined")
            {
                return null;
            }
            if (Session["username"].ToString() == "admin" && province != "")
            {
                var pro = province.Split('|')[0];
                var personDetails = dbcont.tbl_PersonalDetails
                                 .Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.ProvinceName == pro)
                                 .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode, x.MemberID }).ToList();

                var communityDetails = new List<string>();
                communityDetails = dbcont.Tbl_Cong.Select(x => x.CongregationName).ToList();
                if (isPresentProvinceSelected || true)//forcefully true for combined table data
                {
                    var provinceCommunityDetails = new List<string>();
                    foreach (var i in province?.Split('|'))
                    {
                        var communityDetail = dbcont.Tbl_Cong.Where(x => x.ProvinceName == i).Select(x => x.CongregationName).ToList();
                        provinceCommunityDetails.AddRange(communityDetail);
                    }
                    communityDetails = provinceCommunityDetails;
                    var extraCommunities = dbcont.tblAddExtraCommunity.Select(x => x.Name).ToList();
                    communityDetails.AddRange(extraCommunities);
                }
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                if (province != "" && province != "0")
                {
                    //var prop = proId.Split('|')[1];--old code
                    var prop = province.Split('|')[0];
                    var prop2 = "";
                    if (province.Contains("|"))
                    {
                        prop2 = province.Split('|')[1];
                    }
                    var provinceId = isPresentProvinceSelected ? prop : dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.Id).FirstOrDefault().ToString();
                    var provinceName = dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.ProvinceName).FirstOrDefault() == null ? "" : dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.ProvinceName).FirstOrDefault().ToString();
                    if (!string.IsNullOrEmpty(provinceId))
                        allInstitution = allInstitution.Where(x => x.ProvinceName == provinceId || x.ProvinceName == provinceName).OrderBy(x => x.Name).ToList();
                }


                var allRecords = new
                {
                    PersonDetails = personDetails,
                    allInstitution = allInstitution,
                    CommunityDetails = communityDetails
                };

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else if (province == "")
            {
                var personDetails = dbcont.tbl_PersonalDetails
                         .Where(x => x.IsDeleted == false && x.IsTransfer != "yes")
                         .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode, x.MemberID }).ToList();
                //var communityDetails = new List<string>();
                //var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                //province = currentUser;
                //if (province != "" && province != "0")
                //{
                //    //var prop = proId.Split('|')[1];--old code
                //    var prop = province.Split('|')[0];
                //    var prop2 = "";
                //    if (province.Contains("|"))
                //    {
                //        prop2 = province.Split('|')[1];
                //    }
                //    var provinceId = isPresentProvinceSelected ? prop : dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.Id).FirstOrDefault().ToString();
                //    var provinceName = isPresentProvinceSelected ? prop : dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.ProvinceName).FirstOrDefault().ToString();
                //    if (!string.IsNullOrEmpty(provinceId))
                //        allInstitution = allInstitution.Where(x => x.ProvinceName == provinceId || x.ProvinceName == prop2).OrderBy(x => x.Name).ToList();
                //}
                var allRecords = new
                {
                    PersonDetails = personDetails,
                    //allInstitution = allInstitution,
                    //CommunityDetails = communityDetails
                };

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var pro = province.Split('|')[0];
                var pro2 = "";
                if (province.Contains("|"))
                {
                    pro2 = province.Split('|')[1];
                }
                var personDetails = dbcont.tbl_PersonalDetails
                         .Where(x => x.IsDeleted == false && x.ProvinceName == currentUser && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == pro && x.Diedcheck == null && x.Sapcheck == null)
                         .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode, x.MemberID }).ToList();
                var communityDetails = new List<string>();
                var tbl_Province = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == currentUser);
                //var ProvanceName = dbcont.tbl_Province
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => (x.ProvinceName == tbl_Province.ProvinceName || x.ProvinceName == currentUser /*|| x.ProvinceName == "admin"*/)).ToList();
                communityDetails = dbcont.Tbl_Cong.Where(x => (x.ProvinceName == tbl_Province.ProvinceName || x.ProvinceName == currentUser /*|| x.ProvinceName == "admin"*/)).Select(x => x.CongregationName).ToList();
                province = currentUser;
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                if (province != "" && province != "0")
                {
                    //var prop = proId.Split('|')[1];--old code
                    var prop = province.Split('|')[0];
                    var prop2 = "";
                    if (province.Contains("|"))
                    {
                        prop2 = province.Split('|')[1];
                    }
                    var provinceId = isPresentProvinceSelected ? prop : dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.Id).FirstOrDefault().ToString();
                    var provinceName = pro2 != "" ? pro2 : dbcont.tbl_Province.Where(p => p.Id.ToString() == prop).Select(p => p.ProvinceName).FirstOrDefault().ToString();
                    if (!string.IsNullOrEmpty(provinceId))
                        allInstitution = allInstitution.Where(x => x.ProvinceName == provinceId || x.ProvinceName == provinceName).OrderBy(x => x.Name).ToList();
                }
                var allRecords = new
                {
                    PersonDetails = personDetails,
                    allInstitution = allInstitution,
                    CommunityDetails = communityDetails
                };

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllPersionsHV()
        {
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails
                        .Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null)
                        .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode, x.MemberID }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = dbcont.tbl_PersonalDetails
                         .Where(x => x.IsDeleted == false && x.ProvinceName == currentUser && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null)
                         .Select(x => new { x.Name, x.PersonalDetailsId, x.SirName, x.ProvinceName, x.ProvinceCode }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetPersionDetailbyId(int id)
        {
            var allRecords = db.tbl_PersonalDetails
                               .Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.PersonalDetailsId == id && x.IsTransfer != "yes" && x.Archivecheck != "yes")
                               .Select(x => new { x.SirName, x.MemberID }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetParisInstitutionById(int id)
        {
            var allRecords = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active")
                               .Select(x => new { x.Name, x.RegistrationNo })
                               .FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }

        public Dictionary<int, string> GetAllSocietyDict()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string langCode;

            langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);

            Dictionary<int, string> AllSociety = new Dictionary<int, string>();
            if (currentUser != null || currentUser != "")
            {
                if (Session["username"].ToString() == "admin")
                {
                    var allRecords = dbcont.Societys.Where(x => x.ActiveCkeck == "Active")
                                  .ToList();
                    if (AllSociety.Count == 0)
                    {
                        if (langCode == "EN")
                        {

                            AllSociety.Add(0, "-- Select Name --");
                        }
                        else
                        {
                            AllSociety.Add(0, "-- Sélectionnez le nom --");
                        }
                    }

                    foreach (var item in allRecords)
                    {
                        AllSociety.Add(item.Id, item.NameOfTheSocity);
                    }

                    return AllSociety;
                }

                else
                {
                    var allRecords = db.Societys
                             .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                            .Select(x => new { x.NameOfTheSocity, x.Id, x.FCRANumber }).ToList();
                    foreach (var item in allRecords)
                    {
                        AllSociety.Add(item.Id, item.NameOfTheSocity);
                    }

                    return AllSociety;
                }
            }
            else
            {
                return AllSociety;
            }

        }

        public JsonResult GetAllSociety()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);

            if (currentUser != null || currentUser != "")
            {
                if (Session["username"].ToString() == "admin")
                {

                    var allRecords = dbcont.Societys.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.NameOfTheSocity, x.Id, x.FCRANumber }).ToList();
                    return Json(allRecords, JsonRequestBehavior.AllowGet);
                }

                else
                {
                    var allRecords = db.Societys
                             .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                            .Select(x => new { x.NameOfTheSocity, x.Id, x.FCRANumber }).ToList();
                    return Json(allRecords, JsonRequestBehavior.AllowGet);
                }
                //SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                //con.Open();
                //SqlCommand cmd = new SqlCommand("sp_Getsociety", con);
                //cmd.CommandType = CommandType.StoredProcedure;
                //cmd.Parameters.AddWithValue("@currentuser", currentUser);
                //SqlDataAdapter da = new SqlDataAdapter();
                //da.SelectCommand = cmd;
                //DataTable dt = new DataTable();
                //da.Fill(dt);
                //con.Close();
                //cmd.Dispose();

                //var getalldata = (from DataRow dr in dt.Rows
                //                  select new GetAllPrileView
                //                  {
                //                      NameOfTheSocity = Convert.ToString(dr["NameOfTheSocity"]),
                //                      Id = Convert.ToInt32(dr["Id"]),
                //                      FCRANumber = Convert.ToString(dr["FCRANumber"])
                //                  }).ToList();

                //return Json(getalldata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }


        }
        public JsonResult GetAllSociety1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province)
                              .Select(x => new { x.NameOfTheSocity, x.Id, x.FCRANumber }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.Societys.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                        .Select(x => new { x.NameOfTheSocity, x.Id, x.FCRANumber }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public Dictionary<string, string> GetAllCongDic()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string langCode;
            langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);

            Dictionary<string, string> Allcongdata = new Dictionary<string, string>();
            if (langCode == "EN")
            {
                Allcongdata.Add("0", "-- Select Name --");
            }
            else
            {
                Allcongdata.Add("0", "-- Sélectionnez le nom --");
            }
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.CongregationName, x.Id, x.Place }).ToList();


                foreach (var item in allRecords)
                {
                    Allcongdata.Add(item.Id.ToString(), item.CongregationName);
                }
                return Allcongdata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new { x.CongregationName, x.Id, x.Place }).ToList();

                foreach (var item in allRecords)
                {

                    Allcongdata.Add(item.Id.ToString(), item.CongregationName);
                }
                return Allcongdata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllCongrations()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.CongregationName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new { x.CongregationName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public Dictionary<int, string> GetAllCommosDict()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string langCode;
            langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);

            Dictionary<int, string> alldata = new Dictionary<int, string>();
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.ComOutSide.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.ProvinceName, x.Id, x.CommunityName, x.MyId }).ToList();
                if (alldata.Count == 0)
                {
                    if (langCode == "EN")
                    {
                        alldata.Add(0, "-- Select Name --");
                    }
                    else
                    {
                        alldata.Add(0, "-- Sélectionnez le nom --");
                    }
                }
                foreach (var item in allRecords)
                {
                    alldata.Add(item.Id, item.CommunityName);
                }
                return alldata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.ComOutSide.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.CommunityName, x.MyId }).ToList();
                foreach (var item in allRecords)
                {
                    alldata.Add(item.Id, item.CommunityName);
                }
                return alldata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllComOutSide()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.ComOutSide.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.ProvinceName, x.Id, x.CommunityName, x.MyId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.ComOutSide.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.CommunityName, x.MyId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllComHouse()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.ComHouse.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.ProvinceName, x.Id, x.CommunityName, x.MyId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.ComHouse.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active")
                    .Select(x => new { x.ProvinceName, x.Id, x.CommunityName, x.MyId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public Dictionary<int, string> GetAllDioceseDict()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            Dictionary<int, string> alldata = new Dictionary<int, string>();
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.DioceseName, x.Id, x.DioId }).ToList();

                foreach (var item in allRecords)
                {
                    alldata.Add(item.Id, item.DioceseName);
                }
                return alldata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new { x.DioceseName, x.Id, x.DioId }).ToList();

                foreach (var item in allRecords)
                {
                    alldata.Add(item.Id, item.DioceseName);
                }
                return alldata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllDiocese()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.DioceseName, x.Id, x.DioId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new { x.DioceseName, x.Id, x.DioId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public Dictionary<string, string> GetAllDissecDictionary()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            string langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);
            Dictionary<string, string> alldata = new Dictionary<string, string>();

            if (alldata.Count == 0)
            {
                alldata.Add("0", "-- Select Name --");
            }
            else
            {
                alldata.Add("0", "-- Sélectionnez le nom --");
            }
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.DistSecName, x.Id, x.MyId }).ToList();

                foreach (var item in allRecords)
                {
                    alldata.Add(item.Id.ToString(), item.DistSecName);
                }

                return alldata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new { x.DistSecName, x.Id, x.MyId }).ToList();

                foreach (var item in allRecords)
                {
                    alldata.Add(item.Id.ToString(), item.DistSecName);
                }

                return alldata;
                //return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllDisSec()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.DistSecName, x.Id, x.MyId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new { x.DistSecName, x.Id, x.MyId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllCongrations1(string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province)
                                 .Select(x => new { x.CongregationName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.Tbl_Cong
                                 .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentloginid)
                                 .Select(x => new { x.CongregationName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public Dictionary<string, string> GetAllCongDict()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            string langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);

            var allRecords = dbcont.tbl_Congregation.Select(x => new { x.CongregationName, x.Id }).ToList();
            Dictionary<string, string> alldata = new Dictionary<string, string>();

            if (langCode == "EN")
            {
                alldata.Add("0", "-- Select Name --");
            }
            else
            {
                alldata.Add("0", "-- Sélectionnez le nom --");
            }

            foreach (var item in allRecords)
            {
                alldata.Add(item.Id.ToString(), item.CongregationName);
            }
            return alldata;
            //return Json(allRecords, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllCongs()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            var allRecords = dbcont.tbl_Congregation.Select(x => new { x.CongregationName, x.Id }).ToList();
            return Json(allRecords, JsonRequestBehavior.AllowGet);

        }
        public JsonResult GetAllCongs1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Congregation.Where(x => x.ProvinceName == province)
                                 .Select(x => new { x.CongregationName, x.Id }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Congregation.Where(x => x.ProvinceName == currentUser)
                         .Select(x => new { x.CongregationName, x.Id }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceSoc()
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                         .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceTrust()
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceTrans()
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province
                                 .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllCommunityOS()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.ComOutSide.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.CommunityName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = dbcont.ComOutSide.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                                 .Select(x => new { x.CommunityName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllDioceseData()
        {
            var allRecords = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active")
            .Select(x => new { x.DioceseName, x.Id, x.Place }).ToList();
            return Json(allRecords, JsonRequestBehavior.AllowGet);

        }
        public JsonResult GetAllProvinceNew()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                         .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceRene()
        {
            Uri myUri = new Uri(this.Request.UrlReferrer.AbsoluteUri);
            string param1 = HttpUtility.ParseQueryString(myUri.Query).Get("myId"); // current provinceid

            var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.MyId == param1)
            .Select(x => new { x.ProvinceName, x.MyId, x.Id }).ToList();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        } 
        public JsonResult GetAllProvinceRenewal()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            ViewBag.DeathArchiveCount = (from m in db.tbl_Archive
                                         where db.tbl_Passed.Any(x => x.MemberID == m.MemberId)
                                         select m.MemberId).Count();
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceGenFile()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public Dictionary<string, string> GetAllProvinceDictionary()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            Dictionary<string, string> alldata = new Dictionary<string, string>();
            string langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);


            try
            {

                List<tbl_Province> province = Getprovincelist();

                if (Session["username"].ToString() == "admin")
                {
                    var allRecords = province.Where(x => x.ActiveCkeck == "Active")
                                      .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();

                    if (alldata.Count == 0)
                    {
                        if (langCode == "EN")
                        {
                            alldata.Add("0", "----- All Province -----");
                        }
                        else
                        {
                            alldata.Add("0", "---Toutes les provinces ---");
                        }
                    }

                    foreach (var item in allRecords)
                    {
                        alldata.Add(item.Id.ToString(), item.ProvinceName + " " + item.Place);
                    }
                    return alldata;
                    //return Json(allRecords, JsonRequestBehavior.AllowGet);
                }

                else
                {
                    var allRecords = province
                             .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                              .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();

                    foreach (var item in allRecords)
                    {
                        alldata.Add(item.Id.ToString(), item.ProvinceName + " " + item.Place);
                    }
                    return alldata;

                    //return Json(allRecords, JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }


        }

        public JsonResult GetAllProvince()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);

            if (currentUser != null)
            {

                List<tbl_Province> province = Getprovincelist();

                if (Session["username"].ToString() == "admin")
                {
                    var allRecords = province.Where(x => x.ActiveCkeck == "Active")
                                      .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();



                    return Json(allRecords, JsonRequestBehavior.AllowGet);
                }

                else
                {
                    var allRecords = province
                             .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                              .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                    return Json(allRecords, JsonRequestBehavior.AllowGet);
                }
            }
            else
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllProvince1234()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { Name = x.ProvinceName, Id = x.Id, Place = x.Place }).ToList();

                var tbl_Congregations = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes")
                                  .Select(x => new { Name = x.CongregationName, Id = x.Id, Place = "" }).ToList();


                foreach (var item in tbl_Congregations)
                {

                    allRecords.Add(item);
                }

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                                  .Select(x => new { Name = x.ProvinceName, Id = x.Id, Place = x.Place }).ToList();

                var tbl_Congregations = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes")
                                  .Select(x => new { Name = x.CongregationName, Id = x.Id, Place = "" }).ToList();


                foreach (var item in tbl_Congregations)
                {

                    allRecords.Add(item);
                }

                return Json(allRecords, JsonRequestBehavior.AllowGet);

            }
        }
        public JsonResult GetAllStates()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.DataListItems.Where(x => x.DataListName == "State")
                                  .Select(x => new { x.Name, x.Id }).OrderBy(x => x.Name).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = dbcont.DataListItems.Where(x => x.DataListName == "State" /*&& x.CreatedBy == currentuserid*/)
                                 .Select(x => new { x.Name, x.Id }).OrderBy(x => x.Name).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllStates1()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.DataListItems.Where(x => x.DataListName == "State")
                                  .Select(x => new { x.Name, x.Id }).OrderBy(x => x.Name).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = dbcont.DataListItems.Where(x => x.DataListName == "State" && x.CreatedBy == currentuserid)
                                 .Select(x => new { x.Name, x.Id }).OrderBy(x => x.Name).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvince1()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvince11(string province)
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == province)
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetSocietyById(string id)
        {
            var allRecords = db.Societys
                               .Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.NameOfTheSocity, x.Id })
                               .FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetSocietyInfoById(string id)
        {
            var allRecords = db.SocietyData.FirstOrDefault(e => e.id == new Guid(id));
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public ActionResult SociertDetails(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            List<Tbl_Institution> summaryData = new List<Tbl_Institution>();
            var data = db.Societys.FirstOrDefault(x => x.Id.ToString() == id);
            ViewBag.id = id;
            ViewBag.SocietyName = data.NameOfTheSocity;
            ViewBag.ProvinceName = data.ProvinceName;
            var allCociety = db.SocietyData.Where(x => x.SocId == id.ToString()).ToList();
            ViewBag.allCociety = allCociety;

            var alldata = dbcont.Tbl_Governer.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.AllGovData = alldata;

            return View();
        }
        [HttpPost]
        public ActionResult AddSociety(SocietyData societys, HttpPostedFileBase file1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (file1 != null)
                {
                    if (file1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(file1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sociert"), fileName);
                        file1.SaveAs(path);
                        societys.File1 = fileName;
                    }
                }
                societys.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.SocietyData.Add(societys);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateSociert(SocietyData societys, HttpPostedFileBase file1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var existingobj = db.SocietyData.FirstOrDefault(e => e.id == societys.id);
                if (file1 != null)
                {
                    if (file1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(file1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sociert"), fileName);
                        file1.SaveAs(path);
                        societys.File1 = fileName;
                    }
                }
                else
                {
                    societys.File1 = existingobj.File1;
                }
                if (existingobj != null)
                {
                    societys.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(societys);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult DeleteSociertDataById(string id)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var sociertRecord = db.SocietyData.FirstOrDefault(e => e.id == new Guid(id));
                if (sociertRecord != null)
                {
                    db.SocietyData.Remove(sociertRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }

        }
        [HttpPost]
        [AllowAnonymous]
        public ActionResult AddGoverner(Tbl_Governer Tbl_Governer, HttpPostedFileBase PanDoc)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (PanDoc != null)
                {
                    if (PanDoc.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(PanDoc.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sociert"), fileName);
                        PanDoc.SaveAs(path);
                        Tbl_Governer.PanDoc = fileName;
                    }
                }
                Tbl_Governer.CreatedBy = Convert.ToString(Session["loginuserid"]);
                dbcont.Tbl_Governer.Add(Tbl_Governer);
                dbcont.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetGoverner(int id)
        {
            try
            {
                var genFormation = dbcont.Tbl_Governer.FirstOrDefault(e => e.Id == id);
                if (genFormation != null)
                {
                    return Json(genFormation, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("NoRecord", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult UpdateGoverner(Tbl_Governer Tbl_Governer, HttpPostedFileBase PanDoc)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var existingobj = dbcont.Tbl_Governer.FirstOrDefault(e => e.Id == Tbl_Governer.Id);
                if (PanDoc != null)
                {
                    if (PanDoc.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(PanDoc.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sociert"), fileName);
                        PanDoc.SaveAs(path);
                        Tbl_Governer.PanDoc = fileName;
                    }
                }
                else
                {
                    Tbl_Governer.PanDoc = existingobj.PanDoc == null ? "" : existingobj.PanDoc;
                }

                if (existingobj != null)
                {
                    Tbl_Governer.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(Tbl_Governer);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteGoverner(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var data = dbcont.Tbl_Governer.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.Tbl_Governer.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public JsonResult GetCongById(string id)
        {
            var allRecords = db.Tbl_Cong
                               .Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.CongregationName, x.Id })
                               .FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetComOSById(string id)
        {
            var allRecords = db.ComOutSide.Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.CommunityName, x.Id, x.MyId }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetComHouseMyID(string id)
        {
            var allRecords = db.ComHouse.Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.CommunityName, x.Id, x.MyId }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetDisSecID(string id)
        {
            var allRecords = db.tbl_DistSector.Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.DistSecName, x.Id, x.MyId }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetDioceseMyID(string id)
        {
            var allRecords = db.tbl_Diocese.Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.DioceseName, x.Id, x.DioId }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetCongsById(string id)
        {
            var allRecords = db.tbl_Congregation
                               .Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.CongregationName, x.Id, x.CongreId })
                               .FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetProvById(string id)
        {
            var allRecords = db.tbl_Province.Where(x => x.Id.ToString() == id)
                   .Select(x => new { x.ProvinceName, x.Id, x.MyId }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetDiocesesById(string id)
        {
            var allRecords = db.tbl_Diocese.Where(x => x.Id.ToString() == id)
                   .Select(x => new { x.DioceseName, x.Id, x.DioId }).FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }

        public ActionResult CongDetail2(string id)
        {
            var CongData = db.CongData.ToList();
            ViewBag.CongData123 = CongData;
            return View();
        }

        //COMMUNITY//
        public JsonResult GetAllCommunityMeetingDetails(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllCommunityMeetingDetailsData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllCommunityMeetingDetailsDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllCommunityMeetingDetailsData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllCommunityMeetingDetailsData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllCommunityMeetingDetailsData = AllCommunityMeetingDetailsData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllCommunityMeetingDetailsData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllCommunityMeetingDetailsDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllCommunityMeetingDetailsDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllCommunityMeetingDetailsDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        public ActionResult CongDetail(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            var congId = Guid.Parse(id);
            var data = db.Tbl_Cong.FirstOrDefault(x => x.Id.ToString() == id);

            ViewBag.id = id;
            ViewBag.SocietyName = data.CongregationName;
            var CongData = db.CongData.Where(x => x.CongId == id.ToString()).ToList();
            ViewBag.CongData = CongData;
            return View();
        }
        [HttpPost]
        public ActionResult AddCongData(CongData congData, HttpPostedFileBase file1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (file1 != null)
                {
                    if (file1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(file1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Congation"), fileName);
                        file1.SaveAs(path);
                        congData.File1 = fileName;
                    }
                }
                congData.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.CongData.Add(congData);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateCong(CongData congData, HttpPostedFileBase file1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.CongData.FirstOrDefault(e => e.id == congData.id);
                if (file1 != null)
                {
                    if (file1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(file1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Congation"), fileName);
                        file1.SaveAs(path);
                        congData.File1 = fileName;
                    }
                }
                else
                {
                    congData.File1 = existingobj.File1;
                }
                if (existingobj != null)
                {
                    congData.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(congData);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }

        }
        public JsonResult GetCongInfoById(string id)
        {
            var allRecords = db.CongData.FirstOrDefault(e => e.id == new Guid(id));
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetCongInfoById1(string id)
        {
            var allRecords = db.CongData.FirstOrDefault(e => e.id == new Guid(id));
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult DeleteCongDataById(string id)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var congRecord = db.CongData.FirstOrDefault(e => e.id == new Guid(id));
                if (congRecord != null)
                {
                    db.CongData.Remove(congRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult ComOutSideList(string id)
        {
            var data = db.ComOutSide.FirstOrDefault(x => x.MyId.ToString() == id);
            ViewBag.ComOutSideId = data.MyId;
            ViewBag.ComOutSideName = data.CommunityName;
            ViewBag.ProvinceName = data.ProvinceName;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var ComOutSideData = db.ComOutSideDetails.Where(x => x.ComId == id.ToString()).ToList();
            ViewBag.ComOutSideData = ComOutSideData;

            var ComOSContact = dbcont.tbl_ComOSContact.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.ComOSContact = ComOSContact;

            var allCommOutsideInst = dbcont.tbl_ComOSInstitute.Where(x => x.ComOsId == id.ToString()).ToList();
            ViewBag.allCommOutsideInst = allCommOutsideInst;

            var allCommOutsideProv = dbcont.ComOSProvince.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.allCommOutsideProv = allCommOutsideProv;

            var allCOSProCont = dbcont.ComOSProContact.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.allCOSProCont = allCOSProCont;

            var tbl_ComOSCommunity = dbcont.tbl_ComOSCommunity.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.allComOSCommunity = tbl_ComOSCommunity;

            return View();
        }
        public ActionResult DisSecList(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var data = db.tbl_DistSector.FirstOrDefault(x => x.Id.ToString() == id);
            ViewBag.DisSecMyId = data.MyId;
            ViewBag.DisSecId = data.Id;
            ViewBag.DisSecName = data.DistSecName;

            var tbl_DistSectorData = db.tbl_DistSectorData.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.DistSectorData = tbl_DistSectorData;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").OrderBy(x => x.Name).ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            // Council
            if (Session["username"].ToString() == "admin")
            {
                var AllDistSecCouncil = dbcont.tbl_DistSecCouncil.Where(x => x.DistSecId.ToString() == id).ToList();
                ViewBag.AllDistSecCouncil = AllDistSecCouncil;
            }
            else
            {
                var AllDistSecCouncil = dbcont.tbl_DistSecCouncil.Where(x => x.CreatedBy == currentuserid && x.DistSecId.ToString() == id).ToList();
                ViewBag.AllDistSecCouncil = AllDistSecCouncil;
            }

            // Commission
            if (Session["username"].ToString() == "admin")
            {
                var AllDistSecCommission = dbcont.tbl_DistSecCommission.Where(x => x.DistSecId.ToString() == id).ToList();
                ViewBag.AllDistSecCommission = AllDistSecCommission;
            }
            else
            {
                var AllDistSecCommission = dbcont.tbl_DistSecCommission.Where(x => x.CreatedBy == currentuserid && x.DistSecId.ToString() == id).ToList();
                ViewBag.AllDistSecCommission = AllDistSecCommission;
            }

            return View();
        }
        [HttpPost]
        public ActionResult AddComOSData(ComOutSideDetails ComOutSideDetails, HttpPostedFileBase File1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (File1 != null)
                {
                    if (File1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Images/ComOs"), fileName);
                        File1.SaveAs(path);
                        ComOutSideDetails.File1 = fileName;
                    }
                }
                ComOutSideDetails.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.ComOutSideDetails.Add(ComOutSideDetails);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateComOS(ComOutSideDetails ComOutSideDetails, HttpPostedFileBase File1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.ComOutSideDetails.FirstOrDefault(e => e.id == ComOutSideDetails.id);

                if (File1 != null)
                {
                    if (File1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Congation"), fileName);
                        File1.SaveAs(path);
                        ComOutSideDetails.File1 = fileName;
                    }
                }
                else
                {
                    ComOutSideDetails.File1 = existingobj.File1 == null ? "" : existingobj.File1;
                }
                if (existingobj != null)
                {
                    ComOutSideDetails.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(ComOutSideDetails);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteComOSData(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var congRecord = db.ComOutSideDetails.FirstOrDefault(e => e.id.ToString() == id);
                if (congRecord != null)
                {
                    db.ComOutSideDetails.Remove(congRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetComOSDataById(string id)
        {
            var allRecords = db.ComOutSideDetails.FirstOrDefault(e => e.id.ToString() == id);
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public ActionResult ComHouseList(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            var data = db.ComHouse.FirstOrDefault(x => x.MyId.ToString() == id);
            ViewBag.ComHouseId = data.MyId;
            ViewBag.ComHouseName = data.CommunityName;
            ViewBag.ProvinceName = data.ProvinceName;

            var ComHouseData = db.ComHouseDetails.Where(x => x.ComId == id.ToString()).ToList();
            ViewBag.ComHouseData = ComHouseData;
            return View();
        }
        [HttpPost]
        public ActionResult AddComHouseData(ComHouseDetails ComHouseDetails, HttpPostedFileBase File1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (File1 != null)
                {
                    if (File1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Images/ComHouse"), fileName);
                        File1.SaveAs(path);
                        ComHouseDetails.File1 = fileName;
                    }
                }
                ComHouseDetails.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.ComHouseDetails.Add(ComHouseDetails);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateComHouse(ComHouseDetails ComHouseDetails, HttpPostedFileBase File1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.ComHouseDetails.FirstOrDefault(e => e.id == ComHouseDetails.id);
                if (File1 != null)
                {
                    if (File1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Images/ComHouse"), fileName);
                        File1.SaveAs(path);
                        ComHouseDetails.File1 = fileName;
                    }
                }
                else
                {
                    ComHouseDetails.File1 = existingobj.File1 == null ? "" : existingobj.File1;
                }
                if (existingobj != null)
                {
                    ComHouseDetails.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(ComHouseDetails);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteComHouseData(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var congRecord = db.ComHouseDetails.FirstOrDefault(e => e.id.ToString() == id);
                if (congRecord != null)
                {
                    db.ComHouseDetails.Remove(congRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetComHouseByID(string id)
        {
            var allRecords = db.ComHouseDetails.FirstOrDefault(e => e.id.ToString() == id);
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public ActionResult AddDisSecData(tbl_DistSectorData tbl_DistSectorData, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/DistSec"), fileName);
                        File.SaveAs(path);
                        tbl_DistSectorData.File = fileName;
                    }
                }
                tbl_DistSectorData.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.tbl_DistSectorData.Add(tbl_DistSectorData);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateDisSec(tbl_DistSectorData tbl_DistSectorData, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.tbl_DistSectorData.FirstOrDefault(e => e.id == tbl_DistSectorData.id);
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/DistSec"), fileName);
                        File.SaveAs(path);
                        tbl_DistSectorData.File = fileName;
                    }
                }
                else
                {
                    tbl_DistSectorData.File = existingobj.File == null ? "" : existingobj.File;
                }
                if (existingobj != null)
                {
                    tbl_DistSectorData.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(tbl_DistSectorData);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteDisSecData(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var congRecord = db.tbl_DistSectorData.FirstOrDefault(e => e.id.ToString() == id);
                if (congRecord != null)
                {
                    db.tbl_DistSectorData.Remove(congRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetDisSecID1(string id)
        {
            var allRecords = db.tbl_DistSectorData.FirstOrDefault(e => e.id.ToString() == id);
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public ActionResult InsDetail(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            List<Tbl_Institution> summaryData = new List<Tbl_Institution>();
            var data = db.tbl_Institution.FirstOrDefault(x => x.MyId == id);

            var InsData = db.tbl_Institution.Where(x => x.MyId == id.ToString()).ToList();
            ViewBag.InstitutionData = InsData;
            return View();
        }
        [HttpPost]
        public ActionResult AddInsData(Tbl_Institution tbl_Institution)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                tbl_Institution.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.tbl_Institution.Add(tbl_Institution);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetAllParish1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province && x.Type.ToLower() == "Paris".ToLower())
                                   .Select(x => new { x.MyId, x.Name }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.Tbl_ParisInstitutionDetails
                         .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser && x.Type.ToLower() == "Paris".ToLower())
                         .Select(x => new { x.MyId, x.Name }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllParish12()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Paris".ToLower())
                                   .Select(x => new { x.MyId, x.Name }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.Tbl_ParisInstitutionDetails
                         .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser && x.Type.ToLower() == "Paris".ToLower())
                         .Select(x => new { x.MyId, x.Name }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllInstitution1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province)
                                   //&& x.Type.ToLower() == "Paris".ToLower()
                                   .Select(x => new { x.MyId, x.Name })
                                   .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.Tbl_ParisInstitutionDetails
                         .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser)
                         //&& x.Type.ToLower() == "Paris".ToLower()
                         .Select(x => new { x.MyId, x.Name })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllInstitution12()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);

            if (Session["username"].ToString() == "admin")
            {
                var allRecords = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Institution".ToLower())
                                   .Select(x => new { x.MyId, x.Name })
                                   .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = db.Tbl_ParisInstitutionDetails
                         .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser && x.Type.ToLower() == "Institution".ToLower())
                         .Select(x => new { x.MyId, x.Name })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

        }
        #region ||| Member |||

#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetMember()
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            return View();
        }

        public JsonResult GetAllPrileViewData(JqueryDatatableParam param, string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var configData = GetConfingSettings();

            //var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();
            //AllMembers
            List<string> CandidateForId = new List<string>();
            List<string> NovForId = new List<string>();
            List<string> PreNovForId = new List<string>();
            List<string> IstNoviId = new List<string>();
            List<string> IIndNOviID = new List<string>();


            foreach (var item in configData)
            {
                if (item.strConfigKey == "CandidateFormationId")
                    CandidateForId.Add(item.strConfigValue);
                if (item.strConfigKey == "Novitiate")
                    NovForId.Add(item.strConfigValue);
                if (item.strConfigKey == "PrenovitiateFormationId")
                    PreNovForId.Add(item.strConfigValue);
                if (item.strConfigKey == "Novitiate 1st Year")
                    IstNoviId.Add(item.strConfigValue);
                if (item.strConfigKey == "Novitiate 2nd Year")
                    IIndNOviID.Add(item.strConfigValue);
            }
            List<Tbl_formationsDetails> tblformationdetails = new List<Tbl_formationsDetails>();
            Task t1 = Task.Run(() => tblformationdetails = dbcont.Tbl_formationsDetails.ToList());

            List<tbl_Passed> tblpassed = new List<tbl_Passed>();
            Task t2 = Task.Run(() => tblpassed = db.tbl_Passed.ToList());

            List<tbl_SeperationFromTheCongregation> tblseperatin = new List<tbl_SeperationFromTheCongregation>();
            Task t3 = Task.Run(() => tblseperatin = dbcont1.tbl_SeperationFromTheCongregation.ToList());

            List<tbl_PersonalDetails> tbl_PersonalDetails = new List<tbl_PersonalDetails>();
            Task t4 = Task.Run(() => tbl_PersonalDetails = dbcont2.tbl_PersonalDetails.ToList());

            List<tbl_Province> tbl_Province = new List<tbl_Province>();
            Task t5 = Task.Run(() => tbl_Province = dbcontext.tbl_Province.ToList());

            Task.WaitAll(t1, t2, t3, t4, t5);

            //var tblformationdetails = db.Tbl_formationsDetails.ToList();


            if (Session["username"].ToString() == "admin")
            {
                List<string> MemberInCandi = new List<string>();
                List<string> MemberInNovi = new List<string>();
                //List<string> MemberInDead = new List<string>();
                //List<string> MemberInSep = new List<string>();
                List<string> MemberInNovIst = new List<string>();
                List<string> MemberInIInovi = new List<string>();

                foreach (Tbl_formationsDetails formation in tblformationdetails)
                {
                    if (CandidateForId.Contains(formation.StageOfFormation) && formation.Status == "1")
                    {

                        MemberInCandi.Add(formation.MemberId);
                    }
                    if (NovForId.Contains(formation.StageOfFormation) && formation.Status == "1" && formation.Diedcheck == null && formation.Sapcheck == null && formation.Archivecheck == null)
                    {

                        MemberInNovi.Add(formation.MemberId);
                    }
                    if (IstNoviId.Contains(formation.StageOfFormation) && formation.Status == "1")
                    {
                        MemberInNovIst.Add(formation.MemberId);
                    }
                    if (IIndNOviID.Contains(formation.StageOfFormation) && formation.Status == "1")
                    {
                        MemberInIInovi.Add(formation.MemberId);
                    }

                }


          var MemberInDead = tblpassed.Select(x => x.MemberID).ToList();
                var MemberInSep = tblseperatin.Select(x => x.MemberID).ToList();
                var allPersionalDetails = tbl_PersonalDetails.Where(x => x.IsDeleted == false && !(MemberInNovIst.Contains(x.MemberID)) && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInIInovi.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" /*&& x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12"*/).ToList();
                if (province != "")
                {
                    allPersionalDetails = allPersionalDetails.Where(x => x.ProvinceName == province && x.IsDeleted == false).ToList();
                }
                else if (province == "")
                {
                    allPersionalDetails = allPersionalDetails.ToList();
                }
                else
                {
                    allPersionalDetails = allPersionalDetails.ToList();
                }
                //var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();

                //var dataPrimary = db.tbl_Primarydetails.ToList();
                //var provinceName = db.tbl_Province.ToList();
                var getAllData = (from m in allPersionalDetails
                                  from n in tbl_Province
                                  where m.ProvinceName == n.Id.ToString()
                                  // from o in dataPrimary
                                  //where m.MemberID == o.MemberId
                                  select new GetAllPrileView
                                  {
                                      ProvinceName = n.ProvinceName,
                                      Name = m.Name,
                                      FileNo = m.FileNo,
                                      MemberId = (m.MemberID != null) ? m.MemberID : null,
                                      Sirname = m.SirName
                                  });
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    getAllData = getAllData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var data = getAllData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = getAllData.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var MemberInCandi = db.Tbl_formationsDetails.Where(x => CandidateForId.Contains(x.StageOfFormation) && x.Status == "1").Select(x => x.MemberId).ToList();
                var MemberInNovi = db.Tbl_formationsDetails.Where(x => x.Status == "1" && (NovForId.Contains(x.StageOfFormation)) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Select(x => x.MemberId).ToList();

                var MemberInDead = db.tbl_Passed.Select(x => x.MemberID).ToList();
                var MemberInSep = db.tbl_SeperationFromTheCongregation.Select(x => x.MemberID).ToList();
                var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && !(MemberInNovi.Contains(x.MemberID)) && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser /*&& x.CurrentStatus != null*/ && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();

                #region Old code
                //var viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();
                //var data = new List<GetAllPrileView>();
                //foreach (var item in allPersionalDetails)
                //{
                //    var name = item.Name + " " + item.SirName;
                //    var fileno = item.FileNo;
                //    var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                //    data.Add(new GetAllPrileView()
                //    {
                //        Name = name,
                //        FileNo = fileno,
                //        MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                //    });
                //}
                //if (!string.IsNullOrEmpty(param.sSearch))
                //{
                //    data = data.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                //                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                //                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(param.sSearch.ToLower())).ToList();
                //}
                //var response = data.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                ////return Json(data, JsonRequestBehavior.AllowGet);
                //var totalRecords = data.Count();
                //return Json(new
                //{
                //    param.sEcho,
                //    iTotalRecords = totalRecords,
                //    iTotalDisplayRecords = totalRecords,
                //    aaData = response
                //}, JsonRequestBehavior.AllowGet);
                #endregion
                province = currentUser;
                if (province != "")
                {
                    allPersionalDetails = allPersionalDetails.Where(x => x.ProvinceName == province && x.IsDeleted == false).ToList();
                }
                else if (province == "")
                {
                    allPersionalDetails = allPersionalDetails.ToList();
                }
                else
                {
                    allPersionalDetails = allPersionalDetails.ToList();
                }
                var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();

                var dataPrimary = viewAllPrimaryDetails.ToList();
                var provinceName = db.tbl_Province.ToList();
                var getAllData = (from m in allPersionalDetails
                                  from n in provinceName
                                  where m.ProvinceName == n.Id.ToString()
                                  // from o in dataPrimary
                                  //where m.MemberID == o.MemberId
                                  select new GetAllPrileView
                                  {
                                      ProvinceName = n.ProvinceName,
                                      Name = m.Name,
                                      FileNo = m.FileNo,
                                      MemberId = (m.MemberID != null) ? m.MemberID : null
                                  });
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    getAllData = getAllData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var data = getAllData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = getAllData.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);

            }
        }
        public JsonResult GetAllPersonCir()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var allPersionalDetails = db.tbl_PersonalDetails.ToList();
                allPersionalDetails = allPersionalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
                var data = new List<GetAllPrileView>();
                foreach (var item in allPersionalDetails)
                {
                    var name = item.Name + " " + item.SirName;
                    var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    data.Add(new GetAllPrileView()
                    {
                        Name = name,
                        MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                    });
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                var viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();
                var data = new List<GetAllPrileView>();
                foreach (var item in allPersionalDetails)
                {
                    var name = item.Name + " " + item.SirName;
                    var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    data.Add(new GetAllPrileView()
                    {
                        Name = name,
                        MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                    });
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }
        public class GetAllPrileView
        {
            public string ProvinceName { get; set; }
            public string ProvinceId { get; set; }
            public string Name { get; set; }
            public int InstId { get; set; }
            public string FileNo { get; set; }
            public string Place { get; set; }
            public string MemberId { get; set; }
            public string Sirname { get; set; }
            public string NameBaptismial { get; set; }
            public string DOB { get; set; }
            public string Country { get; set; }
            public string PlaceOfBirth { get; set; }
            public string Nationality { get; set; }
            public string MobileNo { get; set; }
            public string EmailId { get; set; }
            public string MotherTounge { get; set; }
            public string AppiontmentType { get; set; }
            public long PersonalDetailsId { get; set; }
            public string ProvinceCode { get; set; }
            public string NameOfTheSocity { get; set; }
            public int Id { get; set; }
            public string FCRANumber { get; set; }





        }
        #endregion

        //INSTITUTION//
        public async Task<ActionResult> GetCommunities(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
        public JsonResult GetAllInsViewData(JqueryDatatableParam param, string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Institution".ToLower()).ToList();
                // var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                if (province != "")
                {
                    var ProvinceName = dbcont.tbl_Province.Where(x => x.Id.ToString() == province).Select(x => x.ProvinceName).FirstOrDefault().ToString();
                    allInstDetails = allInstDetails.Where(x => x.ProvinceName == province || x.ProvinceName == ProvinceName).ToList();
                }
                else if (province == "")
                {
                    allInstDetails = allInstDetails.ToList();
                }
                else
                {
                    allInstDetails = allInstDetails.ToList();
                }
                var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
                var dataPrimary = viewAllPrimaryDetails.ToList();
                var provinceName = db.tbl_Province.ToList();
                List<Tbl_ParisInstitutionDetails> alldata = new List<Tbl_ParisInstitutionDetails>();
                //var getAllData = (from m in allInstDetails
                //                  from n in provinceName
                //                  where m.ProvinceName == n.Id.ToString()
                //                  // from o in dataPrimary
                //                  //where m.MemberID == o.MemberId
                //                  select new GetAllPrileView
                //                  {
                //                      InstId = m.Id,
                //                      ProvinceName = n.ProvinceName,
                //                      Name = m.Name,
                //                      Place = m.Place,
                //                  });
                foreach (var item in allInstDetails)
                {
                    var provDetails = provinceName.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName || x.ProvinceName.ToString() == item.ProvinceName);

                    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    alldata.Add(item);
                }
                var getAllData = alldata;
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    getAllData = getAllData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Place) && x.Place.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var data = getAllData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = getAllData.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                #region Old code
                //var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Institution".ToLower()).ToList();
                ////  var allPersionalDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CreatedBy == currentloginid && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                //var viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();
                //var data = new List<GetAllPrileView>();
                //foreach (var item in allInstDetails)

                //{
                //    var name = item.Name + " " + item.Place;
                //    //  var fileno = item.FileNo;
                //    // var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MembeId == item.MemberID);
                //    data.Add(new GetAllPrileView()
                //    {
                //        Name = name,
                //        // Place = Place,
                //        // MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                //    });
                //}
                //return Json(data, JsonRequestBehavior.AllowGet);
                #endregion
                var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Institution".ToLower()).ToList();
                // var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                province = currentUser;
                var ProvinceName = dbcont.tbl_Province.Where(x => x.Id.ToString() == currentUser).Select(x => x.ProvinceName).FirstOrDefault().ToString();
                if (province != "")
                {
                    allInstDetails = allInstDetails.Where(x => (x.ProvinceName == province || x.ProvinceName == ProvinceName)).ToList();
                }
                else if (province == "")
                {
                    allInstDetails = allInstDetails.ToList();
                }
                else
                {
                    allInstDetails = allInstDetails.ToList();
                }
                var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
                var dataPrimary = viewAllPrimaryDetails.ToList();
                var provinceName = db.tbl_Province.ToList();
                var ProvinceName2 = dbcont.tbl_Province.Where(x => x.Id.ToString() == currentUser).Select(x => x.ProvinceName).FirstOrDefault().ToString();
                //var getAllData = (from m in allInstDetails
                //                  from n in provinceName
                //                  where ( m.ProvinceName == n.Id.ToString())
                //                  // from o in dataPrimary
                //                  //where m.MemberID == o.MemberId
                //                  select new GetAllPrileView
                //                  {
                //                      InstId = m.Id,
                //                      ProvinceName = n.ProvinceName,
                //                      Name = m.Name,
                //                      Place = m.Place,
                //                  });

                List<Tbl_ParisInstitutionDetails> alldata = new List<Tbl_ParisInstitutionDetails>();
                foreach (var item in allInstDetails)
                {
                    var provDetails = provinceName.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName || x.ProvinceName.ToString() == item.ProvinceName);

                    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    alldata.Add(item);
                }
                var getAllData = alldata;
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    getAllData = getAllData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Place) && x.Place.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var data = getAllData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = getAllData.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);

            }


            //  List<Tbl_ParisInstitutionDetails> allInstitutions = new List<Tbl_ParisInstitutionDetails>();
            //if (Session["username"].ToString() == "admin")
            //{
            //    var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Institution".ToLower()).ToList();
            //    if (province != "0")
            //    {
            //        allInstDetails = allInstDetails.Where(x => x.ProvinceName == province).ToList();
            //    }
            //    else if (province == "0")
            //    {
            //        allInstDetails = allInstDetails.ToList();
            //    }
            //    else
            //    {
            //        allInstDetails = allInstDetails.ToList();
            //    }
            //    foreach (var item in allInstDetails)
            //    {
            //        allInstitutions.Add(new Tbl_ParisInstitutionDetails()
            //        {
            //            Name = item.Name,
            //            Id = item.Id,
            //            ProvinceName = db.tbl_Province.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName.ToString()) != null ? db.tbl_Province.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName.ToString()).ProvinceName : "",//  item.EnterbyName,
            //            Place = item.Place,
            //        });
            //    }
            //    return Json(allInstitutions, JsonRequestBehavior.AllowGet);
            //}
            //else
            //{
            //    var data = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser && x.Type.ToLower() == "Institution")
            //                .Select(x => new { x.Id, x.Name, x.EnterbyName, x.Place, x.ProvinceName }).ToList();
            //    foreach (var item in data)
            //    {
            //        allInstitutions.Add(new Tbl_ParisInstitutionDetails()
            //        {
            //            Name = item.Name,
            //            //  ProvinceName = item.EnterbyName,
            //            ProvinceName = db.tbl_Province.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName.ToString()) != null ? db.tbl_Province.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName.ToString()).ProvinceName : "",//  item.EnterbyName,

            //            Place = item.Place,
            //        });
            //    }
            //    return Json(allInstitutions, JsonRequestBehavior.AllowGet);
            //}
        }
        public JsonResult GetAllParishViewData1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            List<Tbl_ParisInstitutionDetails> allInstitutions = new List<Tbl_ParisInstitutionDetails>();
            if (Session["username"].ToString() == "admin")
            {
                var allInstDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Paris")
                                  .Select(x => new { x.Id, x.EnterbyName, x.Name, x.Place, x.ProvinceName }).ToList();
                if (province != "0")
                {
                    allInstDetails = allInstDetails.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    allInstDetails = allInstDetails.ToList();
                }
                else
                {
                    allInstDetails = allInstDetails.ToList();
                }
                foreach (var item in allInstDetails)
                {
                    allInstitutions.Add(new Tbl_ParisInstitutionDetails()
                    {
                        Name = item.Name,
                        ProvinceName = item.EnterbyName,
                        Place = item.Place,
                    });
                }
                return Json(allInstitutions, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser && x.Type.ToLower() == "Paris")
                            .Select(x => new { x.Id, x.Name, x.EnterbyName, x.Place, x.ProvinceName }).ToList();
                foreach (var item in data)
                {
                    allInstitutions.Add(new Tbl_ParisInstitutionDetails()
                    {
                        Name = item.Name,
                        ProvinceName = item.EnterbyName,
                        Place = item.Place,
                    });
                }
                return Json(allInstitutions, JsonRequestBehavior.AllowGet);
            }
        }

        public async Task<ActionResult> GetDioceseList(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
        public async Task<JsonResult> GetAllParishViewData(JqueryDatatableParam param, string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            IQueryable<DioceseViewModel> dioceseList;
            if (Session["username"].ToString() == "admin")
            {
                if (province != "")
                {
                    dioceseList = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province).Select(x => new DioceseViewModel()
                    {
                        Id = x.DioId,
                        Country = x.Country,
                        DioceseName = x.DioceseName,
                        Email = x.EmailId,
                        ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? dbcont.tbl_Province.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty
                    }).AsQueryable();
                }
                else
                {
                    dioceseList = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").Select(x => new DioceseViewModel()
                    {
                        Id = x.DioId,
                        Country = x.Country,
                        DioceseName = x.DioceseName,
                        Email = x.EmailId,
                        ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? dbcont.tbl_Province.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty

                    }).AsQueryable();
                }
            }
            else
            {
                dioceseList = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).Select(x => new DioceseViewModel()
                {
                    Id = x.DioId,
                    Country = x.Country,
                    DioceseName = x.DioceseName,
                    Email = x.EmailId,
                    ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? dbcont.tbl_Province.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty
                }).AsQueryable();
            }
            var query = await dioceseList.ToListAsync();
            if (!string.IsNullOrEmpty(param.sSearch))
            {
                query = query.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.Country) && x.Country.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.Email) && x.Email.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.DioceseName) && x.DioceseName.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var data = query.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            var totalRecords = query.Count();
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = data
            }, JsonRequestBehavior.AllowGet);
        }
        //COMMUNITY//
        public JsonResult GetAllCommViewData(JqueryDatatableParam param, string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var getAllData = new List<CommunityViewModel>();
            if (Session["username"].ToString() == "admin")
            {
                var allCommViewDetails = db.Tbl_Cong.Where(x => x.Status == 1).Select(x => new { x.ProvinceName, x.CongregationName, x.EnterbyName, x.CommCode, x.Id }).ToList();
                if (province != "")
                {
                    allCommViewDetails = allCommViewDetails.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "")
                {
                    allCommViewDetails = allCommViewDetails.ToList();
                }

                var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
                var provinceName = db.tbl_Province.ToList();
                getAllData = (from m in allCommViewDetails
                              from n in provinceName
                              where m.ProvinceName == n.Id.ToString()
                              // from o in dataPrimary
                              //where m.MemberID == o.MemberId
                              select new CommunityViewModel
                              {
                                  CommunityCode = m.CommCode,
                                  CommunityName = m.CongregationName,
                                  Id = m.Id.ToString(),
                                  ProvinceName = n.ProvinceName,
                              }).ToList();


            }
            else
            {
                var allCommViewDetails = db.Tbl_Cong.Where(x => x.Status == 1 || x.Status == 0).Select(x => new { x.ProvinceName, x.CongregationName, x.EnterbyName, x.CommCode, x.Id }).ToList(); if (province != "0")
                    // var allCommViewDetails = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Community".ToLower()).ToList();
                    //  var allPersionalDetails = db.Tbl_ParisInstitutionDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CreatedBy == currentloginid && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                    getAllData = allCommViewDetails.Where(x => x.ProvinceName == province).Select(x => new CommunityViewModel()
                    {
                        ProvinceName = x.ProvinceName,
                        CommunityCode = x.CommCode,
                        CommunityName = x.CongregationName,
                        Id = x.Id.ToString()
                    }).ToList();

                //foreach (var item in allCommViewDetails)
                //{
                //    var CongregationName = item.CongregationName;
                //    communityData.Add(new GetAllPrileView()
                //    {
                //        ProvinceName = item.EnterbyName,
                //    });
                //}
            }

            if (!string.IsNullOrEmpty(param.sSearch))
            {
                getAllData = getAllData.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.CommunityCode) && x.CommunityCode.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.CommunityName) && x.CommunityName.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var data = getAllData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            var totalRecords = getAllData.Count();
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = data
            }, JsonRequestBehavior.AllowGet);

        }
        public JsonResult GetAllCongViewData(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Congregation.Select(x => new { x.ProvinceName, x.CongregationName, x.Id }).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Congregation.Where(x => x.ProvinceName == currentUser).Select(x => new { x.CongregationName, x.Id }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllSocietyViewData(string province)
        {
            List<Societys> allSocietys = new List<Societys>();
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.Societys.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.ProvinceName, x.NameOfTheSocity, x.EnterbyName, x.RegistrationNumber, x.Id }).ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                else
                {
                    data = data.ToList();
                }
                foreach (var item in data)
                {
                    allSocietys.Add(new Societys()
                    {
                        NameOfTheSocity = item.NameOfTheSocity,
                        ProvinceName = item.EnterbyName,
                        Id = item.Id,
                        RegistrationNumber = item.RegistrationNumber,
                    });
                }
                return Json(allSocietys, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.Societys.Where(x => x.ProvinceName == currentUser).Select(x => new { x.NameOfTheSocity, x.EnterbyName, x.RegistrationNumber }).ToList();
                foreach (var item in data)
                {
                    allSocietys.Add(new Societys()
                    {
                        NameOfTheSocity = item.NameOfTheSocity,
                        ProvinceName = item.EnterbyName,
                        RegistrationNumber = item.RegistrationNumber,
                    });
                }
                return Json(allSocietys, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllEternalViewData(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Passed.Select(x => new { x.ProvinceName, x.Name, x.MemberID, }).ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Passed.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }
        public async Task<ActionResult> Separted(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<JsonResult> GetSepartedList(JqueryDatatableParam param, string province, bool isBefore = false, bool isAfter = false)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var query = new List<PassedViewModel>();
            DateTime currentdate = new DateTime();
            var tblseprationfromcongregation = dbcont.tbl_SeperationFromTheCongregation.ToList();
            var tblprovince = dbcont.tbl_Province.ToList();
            currentdate = DateTime.Now;
            List<tbl_SeperationFromTheCongregation> tbl_SeperationFromTheCongregation = new List<tbl_SeperationFromTheCongregation>();
            var configdata = GetConfingSettings();
            string deathseprkey = "";
            foreach (var item in configdata)
            {
                if (item.strConfigKey == "IsDeathandSep")
                    deathseprkey = item.strConfigValue;
            }
            if (Session["username"].ToString() == "admin")
            {

                //if(deathseprkey == "0")
                //{
                //    foreach (var item in tblseprationfromcongregation)
                //    {
                //        var seprdate = item.SeperationDate.Split('/');
                //        if (seprdate[2].TrimStart('0') == currentdate.Year.ToString())
                //        {
                //            tbl_SeperationFromTheCongregation.Add(item);

                //        }
                //        //DateTime sepratindate;
                //        //if(DateTime.TryParse(item.SeperationAge,out sepratindate) && sepratindate == currentdate)
                //        //{
                //        //    tbl_SeperationFromTheCongregation.Add(item);
                //        //}
                //    }
                //}
                //else
                //{
                //    tbl_SeperationFromTheCongregation = tblseprationfromcongregation;
                //}

                query = tblseprationfromcongregation.Select(x => new PassedViewModel() { ProvinceId = x.ProvinceName, ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? tblprovince.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty, CurrentStatusFor = x.StageOFFormation, Name = x.Name, MemberID = x.MemberID, }).ToList();
                if (province != "")
                {
                    query = query.Where(x => x.ProvinceId == province).ToList();
                }
                else if (province == "")
                {
                    query = query.ToList();
                }
            }
            else
            {
                //if (deathseprkey == "0")
                //{
                //    foreach (var item in tblseprationfromcongregation)
                //    {
                //        var seprdate = item.SeperationDate.Split('/');
                //        if (seprdate[2].TrimStart('0') == currentdate.Year.ToString())
                //        {
                //            tbl_SeperationFromTheCongregation.Add(item);

                //        }
                //        //DateTime sepratindate;
                //        //if(DateTime.TryParse(item.SeperationAge,out sepratindate) && sepratindate == currentdate)
                //        //{
                //        //    tbl_SeperationFromTheCongregation.Add(item);
                //        //}
                //    }
                //}
                //else
                //{
                //    tbl_SeperationFromTheCongregation = tblseprationfromcongregation;
                //}


                query = tblseprationfromcongregation.Where(x => x.ProvinceName == currentUser).Select(x => new PassedViewModel()
                { ProvinceId = x.ProvinceName, ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? tblprovince.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty, Name = x.Name, MemberID = x.MemberID, CurrentStatusFor = x.StageOFFormation }).ToList();
            }
            if (isBefore)
            {
                query = query.Where(x => x.CurrentStatusFor == "11" || x.CurrentStatusFor == "12" || x.CurrentStatusFor == "13" || x.CurrentStatusFor == "14").ToList();
            }
            if (isAfter)
            {
                query = query.Where(x => x.CurrentStatusFor == "15" || x.CurrentStatusFor == "16" || x.CurrentStatusFor == "17" || x.CurrentStatusFor == "18" || x.CurrentStatusFor == "19").ToList();

            }
            if (!string.IsNullOrEmpty(param.sSearch))
            {
                query = query.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var totalRecords = query.Count();
            var responseData = query.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllSaprationViewData1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_SeperationFromTheCongregation.Select(x => new { x.ProvinceName, x.Name, x.MemberID, }).ToList();
                if (province != "0" && province == "null")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                else
                {
                    data = data.ToList();
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_SeperationFromTheCongregation.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllSaprationViewData2()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_SeperationFromTheCongregation.Select(x => new { x.ProvinceName, x.Name, x.MemberID, }).ToList();
                data = data.ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_SeperationFromTheCongregation.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }

        }
        public async Task<ActionResult> Departed(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<JsonResult> GetDepartedList(JqueryDatatableParam param, string province, bool isBefore = false, bool isAfter = false)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var configdata = GetConfingSettings();
            string deathseprkey = "";
            foreach (var item in configdata)
            {
                if (item.strConfigKey == "IsDeathandSep")
                    deathseprkey = item.strConfigValue;
            }
            var query = new List<PassedViewModel>();
            DateTime currentdate = new DateTime();
            currentdate = DateTime.Now;
            List<tbl_Passed> tbl_Passed = new List<tbl_Passed>();
            var tblpassed = dbcont.tbl_Passed.ToList();
            var tblprovince = dbcont.tbl_Province.ToList();
            if (Session["username"].ToString() == "admin")
            {

                //if(deathseprkey == "0")
                //{
                //    foreach (var obj in tblpassed)
                //    {
                //        var passeddate = obj.Date.Split('/');
                //        if (passeddate[2].TrimStart('0') == currentdate.Year.ToString())
                //        {
                //            tbl_Passed.Add(obj);

                //        }
                //        //DateTime deathdate;
                //        //if (DateTime.TryParse(obj.Date,out deathdate) && deathdate == currentdate)
                //        //{
                //        //    tblpassed.Add(obj);
                //        //}
                //    }
                //}
                //else
                //{
                //    tbl_Passed = tblpassed;
                //}

                query = tblpassed.Select(x => new PassedViewModel() { ProvinceId = x.ProvinceName, ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? tblprovince.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty, Name = x.Name, SirName = x.SirName, CurrentStatusFor = x.CurrentStatusFor, MemberID = x.MemberID, }).ToList();
                if (province != "")
                {
                    query = query.Where(x => x.ProvinceId == province).ToList();
                }
                else if (province == "")
                {
                    query = query.ToList();
                }
            }
            else
            {
                //if (deathseprkey == "0")
                //{

                //    foreach (var obj in tblpassed)
                //    {
                //        var passeddate = obj.Date.Split('/');
                //        if (passeddate[2].TrimStart('0') == currentdate.Year.ToString())
                //        {
                //            tbl_Passed.Add(obj);

                //        }

                //    }
                //}
                query = tblpassed.Where(x => x.ProvinceName == currentUser).Select(x => new PassedViewModel()
                { ProvinceId = x.ProvinceName, ProvinceName = !string.IsNullOrEmpty(x.ProvinceName) ? tblprovince.Where(y => y.Id.ToString() == x.ProvinceName).Select(y => y.ProvinceName).FirstOrDefault() : string.Empty, Name = x.Name, SirName = x.SirName, CurrentStatusFor = x.CurrentStatusFor, MemberID = x.MemberID }).ToList();
            }
            if (isBefore)
            {
                query = query.Where(x => x.CurrentStatusFor == "11" || x.CurrentStatusFor == "12" || x.CurrentStatusFor == "13" || x.CurrentStatusFor == "14").ToList();
            }
            if (isAfter)
            {
                query = query.Where(x => x.CurrentStatusFor == "15" || x.CurrentStatusFor == "16" || x.CurrentStatusFor == "17" || x.CurrentStatusFor == "18" || x.CurrentStatusFor == "19").ToList();

            }
            if (!string.IsNullOrEmpty(param.sSearch))
            {
                query = query.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.CurrentStatusFor) && x.CurrentStatusFor.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var totalRecords = query.Count();
            var responseData = query.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllEternalViewData1(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Passed.Select(x => new { x.ProvinceName, x.Name, x.SirName, x.CurrentStatusFor, x.MemberID, }).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                else
                {
                    data = data.ToList();
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Passed.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.SirName, x.CurrentStatusFor, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllRetireViewData(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Retirement.Select(x => new { x.ProvinceName, x.Name, x.Age, x.Reason, x.MemberID, }).ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Retirement.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceViewData()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Province.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.Place, x.ProvinceName, x.Id }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).Select(x => new { x.Place, x.ProvinceName, x.Id }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }


        public JsonResult GetAllProvinceView()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Province.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }
        public async Task<ActionResult> GetOrdinal(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
        public async Task<JsonResult> GetAllOrdination(JqueryDatatableParam param, string provinceid)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            // var allData = new List<Tbl_formationsDetails>();
            var allData = new List<TemporaryVowsViewModel>();
            var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();
            //AllMembers
            List<string> CandidateForId = new List<string>();
            List<string> NovForId = new List<string>();
            List<string> PreNovForId = new List<string>();

            if (configData != null)
            {
                var condiForId = configData.Where(x => x.strConfigKey == "Novitiate 2nd Year").Select(x => x.strConfigValue).ToList();
                if (condiForId != null && condiForId.Count > 0)
                {
                    string[] tempList = condiForId[0].Split(',');
                    for (int i = 0; i < tempList.Count(); i++)
                    {
                        PreNovForId.Add(tempList[i]);
                    }
                }
            }
            var memberIds = await db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null && (x.te.StageOfFormation == "17" || x.te.StageOfFormation == "18" || x.te.StageOfFormation == "19")).Select(x => x.te.MemberId).ToListAsync();
            if (Session["username"].ToString() == "admin")
            {
                var data1 = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => !memberIds.Contains(x.te.MemberId) && (x.te.StageOfFormation == "15" || x.te.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/) && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null).ToList();
                var data = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Status == "1" && PreNovForId.Contains(x.te.StageOfFormation) && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null)
                .Select(x => new { x.te.ProvinceName, x.te.ToDate, x.te.Name, x.te.MemberId, x.te.FromDate, x.te.VowsDate, x.te.Status, x.pr.SirName });
                // .Select(x => new { x.ProvinceName, x.FromDate, x.ToDate, x.Name, x.MemberId, }).Distinct();
                if (provinceid != "")
                {
                    data = data.Where(x => x.ProvinceName == provinceid).Distinct();
                }
                else if (provinceid == "")
                {
                    //data = data.Distinct();
                }

                var Prodata = db.tbl_Province.ToList();


                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    //  Tbl_formationsDetails cls = new Tbl_formationsDetails();
                    TemporaryVowsViewModel cls = new TemporaryVowsViewModel();
                    cls.ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName;
                    cls.FromDate = item.FromDate == null ? "" : item.FromDate;
                    //cls.FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate;
                    cls.ToDate = item.ToDate == null ? "" : item.ToDate;
                    cls.Name = item.Name;

                    cls.SirName = item.SirName;
                    cls.VowsDate = item.VowsDate == null ? "" : item.VowsDate;
                    cls.Status = item.Status == "1" ? "Active" : "Completed";
                    cls.MemberId = item.MemberId;
                    allData.Add(cls);
                    //allData.Add(new Tbl_formationsDetails
                    //{
                    //    ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                    //    // FromDate = item.FromDate == null ? "" : item.FromDate,
                    //    FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                    //    ToDate = item.ToDate == null ? "" : item.ToDate,
                    //    Name = item.Name,
                    //    MemberId = item.MemberId
                    //});
                }
            }
            else
            {
                var data1 = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => !memberIds.Contains(x.te.MemberId) && (x.te.StageOfFormation == "15" || x.te.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/) && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null).ToList();

                var data = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Status == "1" && PreNovForId.Contains(x.te.StageOfFormation) && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null)
                .Select(x => new { x.te.ProvinceName, x.te.ToDate, x.te.Name, x.te.MemberId, x.te.FromDate, x.te.VowsDate, x.te.Status, x.pr.SirName });
                // .Select(x => new { x.ProvinceName, x.FromDate, x.ToDate, x.Name, x.MemberId, }).Distinct();
                provinceid = currentUser;
                if (provinceid != "")
                {
                    data = data.Where(x => x.ProvinceName == provinceid).Distinct();
                }
                else if (provinceid == "")
                {
                    //data = data.Distinct();
                }

                var Prodata = db.tbl_Province.ToList();


                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    TemporaryVowsViewModel cls = new TemporaryVowsViewModel();
                    cls.ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName;
                    cls.FromDate = item.FromDate == null ? "" : item.FromDate;
                    //cls.FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate;
                    cls.ToDate = item.ToDate == null ? "" : item.ToDate;
                    cls.Name = item.Name;

                    cls.SirName = item.SirName;
                    cls.VowsDate = item.VowsDate == null ? "" : item.VowsDate;
                    cls.Status = item.Status == "1" ? "Active" : "Completed";
                    cls.MemberId = item.MemberId;
                    allData.Add(cls);

                    //allData.Add(new Tbl_formationsDetails
                    //{
                    //    ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                    //    FromDate = item.FromDate == null ? "" : item.FromDate,
                    //    //FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                    //    ToDate = item.ToDate == null ? "" : item.ToDate,
                    //    Name = item.Name,

                    //    MemberId = item.MemberId
                    //});
                }
            }

            if (!string.IsNullOrEmpty(param.sSearch))
            {
                allData = allData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || x.FromDate.ToLower().Contains(param.sSearch.ToLower())
                                              || x.ToDate.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var totalRecords = allData.Count();
            var responseData = allData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }

        public async Task<ActionResult> GetTemporaryVows(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }

        public async Task<JsonResult> TemporaryVowsList(JqueryDatatableParam param, string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var allData = new List<TemporaryVowsViewModel>();
            var memberIds = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null && (x.te.StageOfFormation == "17" || x.te.StageOfFormation == "18" || x.te.StageOfFormation == "19")).Select(x => x.te.MemberId).ToList();
            var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();

            List<string> DyKey1 = new List<string>();

            if (configData != null)
            {
                var data1 = configData.Where(x => x.strConfigKey == "TemporaryVows").Select(x => x.strConfigValue).ToList();
                if (data1 != null)
                {
                    string[] tempList = data1[0].Split(',');
                    for (int i = 0; i < tempList.Count(); i++)
                    {
                        DyKey1.Add(tempList[i]);
                    }
                }

            }
            if (Session["username"].ToString() == "admin")
            {
                //var data1 = await db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToListAsync();
                var data = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Status == "1" && (DyKey1.Contains(x.te.StageOfFormation) /*x.StageOfFormation == "3" *//*|| x.StageOfFormation == "16" *//*|| x.StageOfFormation == "17"*/) && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null)
                .Select(x => new { x.te.ProvinceName, x.te.ToDate, x.te.Name, x.pr.SirName, x.te.MemberId, x.te.FromDate, x.te.VowsDate, x.te.Status }).Distinct();
                if (province != "")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "")
                {
                    data = data.Distinct();
                }

                var Prodata = await db.tbl_Province.ToListAsync();

                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new TemporaryVowsViewModel
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        //FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        FromDate = item.FromDate == null ? "" : item.FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = item.Name,
                        SirName = item.SirName,
                        VowsDate = item.VowsDate == null ? "" : item.VowsDate,
                        Status = item.Status == "1" ? "Active" : "Completed",
                        MemberId = item.MemberId
                    });
                }
            }
            else
            {
                //allData = await db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/ && x.Diedcheck == null && x.Sapcheck == null && x.ProvinceName == currentUser)
                //    .Select(x => new TemporaryVowsViewModel { Name = x.Name, FromDate = x.FromDate, ToDate = x.ToDate, MemberId = x.MemberId, }).Distinct().ToListAsync();
                var data = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Status == "1" && (DyKey1.Contains(x.te.StageOfFormation) /*x.StageOfFormation == "3"*/ /*|| x.StageOfFormation == "16" *//*|| x.StageOfFormation == "17"*/) && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null)
                .Select(x => new { x.te.ProvinceName, x.te.ToDate, x.te.Name, x.pr.SirName, x.te.VowsDate, x.te.MemberId, x.te.FromDate, x.te.Status }).Distinct();
                province = currentUser;
                if (province != "")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "")
                {
                    data = data.Distinct();
                }

                var Prodata = await db.tbl_Province.ToListAsync();

                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new TemporaryVowsViewModel
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        //FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        FromDate = item.FromDate == null ? "" : item.FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = item.Name,
                        SirName = item.SirName,
                        VowsDate = item.VowsDate == null ? "" : item.VowsDate,
                        Status = item.Status == "1" ? "Active" : "Completed",
                        //Status = item.Status =="1"? "Completed" : "Active",
                        MemberId = item.MemberId
                    });
                }
            }

            if (!string.IsNullOrEmpty(param.sSearch))
            {
                allData = allData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || x.FromDate.ToLower().Contains(param.sSearch.ToLower())
                                              || x.ToDate.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var totalRecords = allData.Count();
            var responseData = allData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }


        public async Task<ActionResult> GetPerpetualVows(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }

        public async Task<JsonResult> GetPerpetualVowsList(JqueryDatatableParam param, string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var allData = new List<TemporaryVowsViewModel>();
            var memberIds = await db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null && (x.te.StageOfFormation == "19")).Select(x => x.te.MemberId).ToListAsync();
            var configData = db.tblConfigSetting.Where(x => x.strPurpose == "DashboardCount").Select(x => new { x.strConfigKey, x.strConfigValue }).ToList();

            List<string> DyKey1 = new List<string>();

            if (configData != null)
            {
                var data1 = configData.Where(x => x.strConfigKey == "PerpetualVows").Select(x => x.strConfigValue).ToList();
                if (data1 != null)
                {
                    string[] tempList = data1[0].Split(',');
                    for (int i = 0; i < tempList.Count(); i++)
                    {
                        DyKey1.Add(tempList[i]);
                    }
                }

            }
            if (Session["username"].ToString() == "admin")
            {
                var data1 = await db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => !memberIds.Contains(x.te.MemberId) && x.te.StageOfFormation == "17" && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null).ToListAsync();

                var data = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Status == "1" && DyKey1.Contains(x.te.StageOfFormation)/* x.StageOfFormation == "6"*/ && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.Archivecheck == null && x.pr.IsTransfer != "yes")
                .Select(x => new { x.te.ProvinceName, x.te.ToDate, x.te.Name, x.te.MemberId, x.te.FromDate, x.te.VowsDate, x.te.Status, x.pr.SirName }).Distinct();
                // .Select(x => new { x.ProvinceName, x.FromDate, x.ToDate, x.Name, x.MemberId, }).Distinct();
                if (province != "")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "")
                {
                    data = data.Distinct();
                }
                else
                {
                    data = data.Distinct();
                }
                var Prodata = db.tbl_Province.ToList();

                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new TemporaryVowsViewModel
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        FromDate = item.FromDate == null ? "" : item.FromDate,
                        //FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = item.Name,
                        SirName = item.SirName,
                        VowsDate = item.VowsDate == null ? "" : item.VowsDate,
                        Status = item.Status == "1" ? "Active" : "Completed",
                        MemberId = item.MemberId
                    });
                }
            }
            else
            {
                allData = db.Tbl_formationsDetails.Join(db.tbl_PersonalDetails, te => te.MemberId, pr => pr.MemberID, (te, pr) => new { te, pr }).Where(x => x.te.Status == "1" && DyKey1.Contains(x.te.StageOfFormation) /*x.StageOfFormation == "6"*/ && x.te.Diedcheck == null && x.te.Sapcheck == null && x.te.ProvinceName == currentUser)
                    .Select(x => new TemporaryVowsViewModel { Name = x.te.Name, FromDate = x.te.FromDate, ToDate = x.te.ToDate, MemberId = x.te.MemberId, SirName = x.pr.SirName, VowsDate = x.te.VowsDate, Status = x.te.Status }).Distinct().ToList();
            }

            if (!string.IsNullOrEmpty(param.sSearch))
            {
                allData = allData.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                              || x.FromDate.ToLower().Contains(param.sSearch.ToLower())
                                              || x.ToDate.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var totalRecords = allData.Count();
            var responseData = allData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllOrdinViewData(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var memberIds = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();
            if (Session["username"].ToString() == "admin")
            {
                var data1 = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                var data = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();
                // .Select(x => new { x.ProvinceName, x.FromDate, x.ToDate, x.Name, x.MemberId, }).Distinct();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "")
                {
                    data = data.Distinct();
                }
                else
                {
                    data = data.Distinct();
                }
                var Prodata = db.tbl_Province.ToList();

                var allData = new List<Tbl_formationsDetails>();
                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new Tbl_formationsDetails
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        // FromDate = item.FromDate == null ? "" : item.FromDate,
                        FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = item.Name,
                        MemberId = item.MemberId
                    });
                }
                return Json(allData, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/ && x.Diedcheck == null && x.Sapcheck == null && x.ProvinceName == currentUser)
                    .Select(x => new { x.Name, x.FromDate, x.ToDate, x.MemberId, }).Distinct().ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllDiaconateViewData(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var memberIds = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();
            var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
            if (Session["username"].ToString() == "admin")
            {
                var data1 = tblformationdetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                var data = tblformationdetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();
                // .Select(x => new { x.ProvinceName, x.FromDate, x.ToDate, x.Name, x.MemberId, }).Distinct();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "0")
                {
                    data = data.Distinct();
                }
                else
                {
                    data = data.Distinct();
                }
                var Prodata = db.tbl_Province.ToList();

                var allData = new List<Tbl_formationsDetails>();
                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new Tbl_formationsDetails
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        // FromDate = item.FromDate == null ? "" : item.FromDate,
                        FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = item.Name,
                        MemberId = item.MemberId
                    });
                }
                return Json(allData, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = tblformationdetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.ProvinceName == currentUser)
                    .Select(x => new { x.Name, x.FromDate, x.ToDate, x.MemberId, }).Distinct().ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllOrdinationsViewData(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
            if (Session["username"].ToString() == "admin")
            {
                var data1 = tblformationdetails.Where(x => x.StageOfFormation == "19" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                var data = tblformationdetails.Where(x => x.StageOfFormation == "19" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "0")
                {
                    data = data.Distinct();
                }
                else
                {
                    data = data.Distinct();
                }
                var Prodata = db.tbl_Province.ToList();

                var allData = new List<Tbl_formationsDetails>();
                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new Tbl_formationsDetails
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        // FromDate = item.FromDate == null ? "" : item.FromDate,
                        FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = item.Name,
                        MemberId = item.MemberId
                    });
                }
                return Json(allData, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.Tbl_formationsDetails.Where(x => x.StageOfFormation == "19" && x.Diedcheck == null && x.Sapcheck == null && x.ProvinceName == currentUser)
                    .Select(x => new { x.Name, x.FromDate, x.ToDate, x.MemberId, }).Distinct().ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }


        public JsonResult GetSociertById(string id)
        {
            var allRecords = db.Societys
                               .Where(x => x.Id.ToString() == id)
                               .Select(x => new { x.NameOfTheSocity, x.Id })
                               .FirstOrDefault();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetSociertById1(string id)
        {
            try
            {
                var genFormation = dbcont.SocietyData.FirstOrDefault(e => e.id.ToString() == id);
                if (genFormation != null)
                {
                    return Json(genFormation, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("NoRecord", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetCongreInfoById(string id)
        {
            var allRecords = db.SocietyData.FirstOrDefault(e => e.id == new Guid(id));
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public ActionResult CongretDetails(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            List<Tbl_Institution> summaryData = new List<Tbl_Institution>();
            var data = db.Societys.FirstOrDefault(x => x.Id == id);
            ViewBag.id = id;
            ViewBag.SocietyName = data.NameOfTheSocity;
            var allCociety = db.SocietyData.Where(x => x.SocId == id.ToString()).ToList();
            ViewBag.allCociety = allCociety;
            return View();
        }
        [HttpPost]
        public ActionResult AddCongreData(SocietyData societys, HttpPostedFileBase file1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (file1 != null)
                {
                    if (file1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(file1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sociert"), fileName);
                        file1.SaveAs(path);
                        societys.File1 = fileName;
                    }
                }
                societys.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.SocietyData.Add(societys);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdateCongre(SocietyData societys, HttpPostedFileBase file1)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.SocietyData.FirstOrDefault(e => e.id == societys.id);
                if (file1 != null)
                {
                    if (file1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(file1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sociert"), fileName);
                        file1.SaveAs(path);
                        societys.File1 = fileName;
                    }
                }
                else
                {
                    societys.File1 = existingobj.File1 == null ? "" : existingobj.File1;
                }

                if (existingobj != null)
                {
                    societys.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(societys);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult DeleteCongreById(string id)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var sociertRecord = db.SocietyData.FirstOrDefault(e => e.id == new Guid(id));
                if (sociertRecord != null)
                {
                    db.SocietyData.Remove(sociertRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult CongrationList(string id)
        {

            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            Session["ConRegId"] = id;
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            if (data != null)
            {
                ViewBag.id = data.Id;
                ViewBag.CongId = data.CongreId;
                ViewBag.Congretion = data.CongregationName;
            }

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").OrderBy(x => x.Name).ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == id).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == id).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DistSecName).ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }
        private void BindViewBag()
        {
            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.Country = countryList;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var provincelist = dbcont.tbl_Province.ToList();
            ViewBag.ProvinceList = provincelist;
        }
        public ActionResult CongrationList2()
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongrationList2Old()
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").OrderBy(x => x.Name).ToList();
            ViewBag.AllResponsibility = AllResponsibility;


            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                ViewBag.Tbl_CongraDatas = Tbl_CongraDatas;
            }
            else
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CreatedBy == currentuserid && x.CongrationId == data.Id.ToString()).ToList();
                ViewBag.Tbl_CongraDatas = Tbl_CongraDatas;
            }

            //
            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentuserid && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.CreatedBy == currentuserid && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentuserid && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.CreatedBy == currentuserid && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentuserid && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.CreatedBy == currentuserid && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;

            return View();
        }

        //CONGREGRATIONS//
        //MeetingsANDMinutes//
        public JsonResult GetAllCongregationDetails(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllCongregationDetailssData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllCongregationDetailssDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllCongregationDetailssData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllCongregationDetailssData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllCongregationDetailssData = AllCongregationDetailssData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllCongregationDetailssData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllCongregationDetailssDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllCongregationDetailssDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllCongregationDetailssDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }
        //ADC //
        public JsonResult GetAllGeneralCouncil(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllMemberData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllMemberDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllMemberData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllMemberData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllMemberData = AllMemberData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllMemberData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllMemberDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllMemberDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllMemberDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Dossiers//
        public JsonResult GetAllCommission(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllCommissionData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllCommissionDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllCommissionData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllCommissionData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllCommissionData = AllCommissionData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllCommissionData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllCommissionDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllCommissionDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllCommissionDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Community//
        public JsonResult GetAllAddCommunity(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllAddCommunityData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllAddCommunityDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllAddCommunityData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllAddCommunityData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllAddCommunityData = AllAddCommunityData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                 || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllAddCommunityData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllAddCommunityDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllAddCommunityDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllAddCommunityDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Institute//
        public JsonResult GetAllAddInstitutes(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllAddInstitutesData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllAddInstitutesDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllAddInstitutesData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllAddInstitutesData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllAddInstitutesData = AllAddInstitutesData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                 || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllAddInstitutesData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllAddInstitutesDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllAddInstitutesDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllAddInstitutesDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Legal Registration//
        public JsonResult GetAllLegalStatus(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllLegalStatusData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllLegalStatusDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllLegalStatusData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllLegalStatusData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllLegalStatusData = AllLegalStatusData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                 || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllLegalStatusData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllLegalStatusDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllLegalStatusDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllLegalStatusDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Staff//
        public JsonResult GetAllStaffDetails(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllStaffDetailsData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllStaffDetailsDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllStaffDetailsData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllStaffDetailsData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllStaffDetailsData = AllStaffDetailsData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                 || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllStaffDetailsData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllStaffDetailsDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllStaffDetailsDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllStaffDetailsDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Calendar And Events//
        public JsonResult GetAllCalendarEvents(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllCalendarEventsData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllCalendarEventsDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllCalendarEventsData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllCalendarEventsData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllCalendarEventsData = AllCalendarEventsData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                 || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllCalendarEventsData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllCalendarEventsDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllCalendarEventsDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllCalendarEventsDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //GeneralAdministration//
        public JsonResult GetAllCouncilMembers(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllCouncilMembersData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllCouncilMembersDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllCouncilMembersData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllCouncilMembersData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllCouncilMembersData = AllCouncilMembersData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                 || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllCouncilMembersData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllCouncilMembersDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllCouncilMembersDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllCouncilMembersDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        [HttpPost]
        public ActionResult AddCalender(Tbl_Calender Tbl_Calender)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath + "?id=" + Tbl_Calender.GenId;
            try
            {
                Tbl_Calender.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.Tbl_Calender.Add(Tbl_Calender);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetCalenderById(int id)
        {
            try
            {
                var data = dbcont.Tbl_Calender.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult CalenderUpdate(Tbl_Calender Tbl_Calender)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = dbcont.Tbl_Calender.FirstOrDefault(e => e.Id == Tbl_Calender.Id);
                if (existingobj != null)
                {
                    Tbl_Calender.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(Tbl_Calender);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult CalenderDelete(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_Calender.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.Tbl_Calender.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult AddCongrationData(Models.Tbl_CongrationsData tbl_CongrationsData, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Congation"), fileName);
                        File.SaveAs(path);
                        tbl_CongrationsData.File = fileName;
                    }
                }

                tbl_CongrationsData.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.Tbl_CongrationsDatas.Add(tbl_CongrationsData);
                db.SaveChanges();
                TempData["OperationData"] = "200";
                setcookies("200");
                return RedirectToAction("ViewCongrationList2_MeetingMin", "Home");
                //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                TempData["OperationData"] = "204";
                return RedirectToAction("ViewCongrationList2_MeetingMin", "Home");
                //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteCongData12(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            var Tbl_CongrationsDa = db.Tbl_CongrationsDatas.FirstOrDefault(e => e.id.ToString() == id);

            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                if (Tbl_CongrationsDa != null)
                {
                    db.Tbl_CongrationsDatas.Remove(Tbl_CongrationsDa);
                    db.SaveChanges();
                    TempData["OperationData"] = "202";
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                }
                else
                {
                    setcookies("204");
                    TempData["OperationData"] = "204";
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                TempData["OperationData"] = "204";
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }

        }
        public JsonResult GetCongrationDataById(string id)
        {
            var allRecords = db.Tbl_CongrationsDatas.FirstOrDefault(e => e.id.ToString() == id);
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public ActionResult UpdateCongrationData(Models.Tbl_CongrationsData tbl_CongrationsData, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.Tbl_CongrationsDatas.FirstOrDefault(e => e.id == tbl_CongrationsData.id);
                if (existingobj != null)
                {
                    if (File != null)
                    {
                        if (File.ContentLength > 0)
                        {
                            var fileName = Path.GetFileName(File.FileName);
                            var path = Path.Combine(Server.MapPath("~/Image/Congation"), fileName);
                            File.SaveAs(path);
                            tbl_CongrationsData.File = fileName;
                        }
                    }
                    else
                    {
                        tbl_CongrationsData.File = existingobj.File;

                    }
                    if (existingobj != null)
                    {
                        tbl_CongrationsData.CreatedBy = existingobj.CreatedBy;
                        db.Entry(existingobj).CurrentValues.SetValues(tbl_CongrationsData);
                        db.SaveChanges();
                    }
                }

                setcookies("201");
                TempData["OperationData"] = "201";
                return RedirectToAction("ViewCongrationList2_MeetingMin", "Home");
                //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                TempData["OperationData"] = "204";
                return RedirectToAction("ViewCongrationList2_MeetingMin", "Home");
                //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

                throw;
            }
        }
        public ActionResult brotherbyProv(string provinceid)
        {
            var brotherbyProv = new List<tbl_PersonalDetails>();
            if (provinceid == "0")
            {
                brotherbyProv = dbcont.tbl_PersonalDetails.ToList();
            }
            else
            {
                brotherbyProv = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == provinceid).ToList();
            }
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            if (brotherbyProv != null)
            {
                if (Session["username"].ToString() == "admin")
                {
                    var brotherbyProv1 = brotherbyProv
                    .Where(x => x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck != "Active" && x.Sapcheck != "Active").ToList()
                    .Select(x => new tbl_PersonalDetails { MemberID = x.MemberID, Name = x.Name, SirName = x.SirName })
                    .ToList();
                    var jsonResult = Json(brotherbyProv1, JsonRequestBehavior.AllowGet);
                    jsonResult.MaxJsonLength = int.MaxValue;
                    return jsonResult;
                    //ViewBag.brotherbyProv = brotherbyProv1;

                }
                else
                {
                    var brotherbyProv1 = brotherbyProv
                    .Where(x => x.CreatedBy == currentloginuserid && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck != "Active" && x.Sapcheck != "Active").ToList()
                    .Select(x => new tbl_PersonalDetails { MemberID = x.MemberID, Name = x.Name, SirName = x.SirName })
                    .ToList();
                    return Json(brotherbyProv1, JsonRequestBehavior.AllowGet);
                    //ViewBag.brotherbyProv = brotherbyProv1;
                }
            }
            return Json(null, JsonRequestBehavior.AllowGet);
        }

        public ActionResult ProvinceList(string myId)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            Session["ConRegId"] = myId;
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var data = db.tbl_Province.FirstOrDefault(x => x.MyId == myId);
            if (data != null && !string.IsNullOrEmpty(data.MyId))
            {
                ViewBag.Provincename = data.ProvinceName;
                ViewBag.MyId = data.MyId;
                ViewBag.Id = data.Id;

                //  var brotherbyProv = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == data.Id.ToString()).ToList();
                var brotherbyProv = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == data.Id.ToString()).ToList();
                if (brotherbyProv != null)
                {
                    if (Session["username"].ToString() == "admin")
                    {

                        var brotherbyProv1 = brotherbyProv
                        .Where(x => x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck != "Active" && x.Sapcheck != "Active").ToList()
                        .Select(x => new tbl_PersonalDetails { MemberID = x.MemberID, Name = x.Name, SirName = x.SirName })
                        .ToList();
                        ViewBag.brotherbyProv = brotherbyProv1;

                    }
                    else
                    {
                        var brotherbyProv1 = brotherbyProv
                        .Where(x => x.ProvinceName == data.Id.ToString() && x.CreatedBy == currentloginuserid && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck != "Active" && x.Sapcheck != "Active").ToList()
                        .Select(x => new tbl_PersonalDetails { MemberID = x.MemberID, Name = x.Name, SirName = x.SirName })
                        .ToList();

                        ViewBag.brotherbyProv = brotherbyProv1;
                    }


                    ViewBag.currentPro = data.ProvinceName;
                    ViewBag.currentProMyId = data.MyId;

                }

            }


            //if (this.Request.UrlReferrer.AbsoluteUri != null)
            {
                //Uri myUri = new Uri(this.Request.UrlReferrer.AbsoluteUri);
                //string topid = HttpUtility.ParseQueryString(myUri.Query).Get("myId"); // current provinceid
                //ViewBag.MyurlId = topid;
            }


            //Province Council
            if (Session["username"].ToString() == "admin")
            {
                //var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.Where(x => x.ProvinceId.ToString() == myId).ToList();
                var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.ToList();
                ViewBag.AllProvinceCouncil = AllProvinceCouncil;
            }
            else
            {
                //var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.Where(x => x.CreatedBy == currentloginuserid && x.ProvinceId.ToString() == myId).ToList();
                var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.ToList();
                ViewBag.AllProvinceCouncil = AllProvinceCouncil;
            }
            var AllDocumentType = dbcont.tbl_DocumentType.ToList();
            ViewBag.AllDocumentType = AllDocumentType;
            //Province Commission
            if (Session["username"].ToString() == "admin")
            {
                //var AllProvinceCommission = dbcont.tbl_ProCommission.Where(x => x.ProId.ToString() == myId).ToList();
                var AllProvinceCommission = dbcont.tbl_ProCommission.ToList();
                ViewBag.AllProvinceCommission = AllProvinceCommission;
            }
            else
            {
                //var AllProvinceCommission = dbcont.tbl_ProCommission.Where(x => x.CreatedBy == currentloginuserid && x.ProId.ToString() == myId).ToList();
                var AllProvinceCommission = dbcont.tbl_ProCommission.ToList();
                ViewBag.AllProvinceCommission = AllProvinceCommission;
            }

            //HomeVisitData

            if (Session["username"].ToString() == "admin")
            {
                var AllData = dbcont.tbl_HomeVisit.Where(x => x.ProvinceId.ToString() == myId).ToList();
                ViewBag.AllDataHomeVisit = AllData;
            }
            else
            {
                var AllData = dbcont.tbl_HomeVisit.Where(x => x.CreatedBy == currentloginuserid && x.ProvinceId.ToString() == myId).ToList();
                ViewBag.AllDataHomeVisit = AllData;
            }
            if (Session["username"].ToString() == "admin")
            {
                var AllData = dbcont.tbl_ParishByProvince.Where(x => x.ProvinceName.ToString() == data.Id.ToString()).ToList();
                ViewBag.ParishByProvince = AllData;
            }
            else
            {
                var AllData = dbcont.tbl_ParishByProvince.Where(x => x.ProvinceName.ToString() == data.Id.ToString()).ToList();
                ViewBag.ParishByProvince = AllData;
            }
            if (Session["username"].ToString() == "admin")
            {
                var AllLandData = dbcont.tbl_LandDetailsByProvince.Where(x => x.ProvinceName.ToString() == data.Id.ToString()).ToList();
                var AllParishData = dbcont.tbl_ParishByProvince.Where(x => x.ProvinceName.ToString() == data.Id.ToString()).ToList();
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == data.Id.ToString()).ToList();
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.ProvinceName == data.Id.ToString()).OrderBy(x => x.Name).ToList();
                var AllDocumentTypeChild = dbcont.tbl_DocumentType.ToList();
                var allCombinedData = new List<tbl_LandDetailsByProvince>();
                foreach (var item in AllLandData)
                {
                    tbl_LandDetailsByProvince obj = new tbl_LandDetailsByProvince();
                    obj.LandType = item.LandType == "1" ? HomeController.GetControlTextByControlId("Parish") : item.LandType == "2" ? HomeController.GetControlTextByControlId("Community") : item.LandType == "3" ? HomeController.GetControlTextByControlId("Institution") : "";
                    obj.PCIId = (item.LandType == "1" ? AllParishData.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.ParishName).FirstOrDefault().ToString() : item.LandType == "2" ? allComm.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.CongregationName).FirstOrDefault().ToString() : item.LandType == "3" ? allins.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.Name).FirstOrDefault().ToString() : "") == null ? "" : item.LandType == "1" ? AllParishData.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.ParishName).FirstOrDefault().ToString() : item.LandType == "2" ? allComm.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.CongregationName).FirstOrDefault().ToString() : item.LandType == "3" ? allins.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.Name).FirstOrDefault().ToString() : "";
                    obj.DocumentType = item.DocumentType != null && item.DocumentType != "0" ? AllDocumentTypeChild.Where(x => x.Id.ToString() == item.DocumentType).Select(x => x.Name).FirstOrDefault().ToString() : "";
                    obj.Date = item.Date != null ? item.Date : "";
                    obj.Title = item.Title != null ? item.Title : "";
                    obj.File = item.File != null ? item.File : "";
                    obj.Id = item.Id;
                    allCombinedData.Add(obj);
                    //allCombinedData.Add(new tbl_LandDetailsByProvince
                    //{
                    //    LandType = item.LandType == "1" ? HomeController.GetControlTextByControlId("Parish") : item.LandType == "2" ? HomeController.GetControlTextByControlId("Community") : item.LandType == "3" ? HomeController.GetControlTextByControlId("Institution") : "",
                    //    PCIId = item.LandType == "1" ? AllParishData.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x=> x.ParishName).FirstOrDefault().ToString() : item.LandType == "2" ? allComm.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.ProvinceName).FirstOrDefault().ToString() : item.LandType == "3" ? allins.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.Name).FirstOrDefault().ToString() : "",
                    //    DocumentType = item.DocumentType != null && item.DocumentType != "0" ? AllDocumentTypeChild.Where(x=>x.Id.ToString() == item.DocumentType).Select(x=>x.Name).FirstOrDefault().ToString() : "",
                    //    Date = item.Date != null ? item.Date : "",
                    //    Title = item.Title != null ? item.Title : "",
                    //    File = item.File != null ? item.File : "",
                    //    Id = item.Id
                    //});
                }
                ViewBag.AllLandData = allCombinedData;
            }
            else
            {
                var AllLandData = dbcont.tbl_LandDetailsByProvince.Where(x => x.ProvinceName.ToString() == data.Id.ToString()).ToList();
                var AllParishData = dbcont.tbl_ParishByProvince.Where(x => x.ProvinceName.ToString() == data.Id.ToString()).ToList();
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == data.Id.ToString()).ToList();
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.ProvinceName == data.Id.ToString()).OrderBy(x => x.Name).ToList();
                var AllDocumentTypeChild = dbcont.tbl_DocumentType.ToList();
                var allCombinedData = new List<tbl_LandDetailsByProvince>();
                foreach (var item in AllLandData)
                {
                    tbl_LandDetailsByProvince obj = new tbl_LandDetailsByProvince();
                    obj.LandType = item.LandType == "1" ? HomeController.GetControlTextByControlId("Parish") : item.LandType == "2" ? HomeController.GetControlTextByControlId("Community") : item.LandType == "3" ? HomeController.GetControlTextByControlId("Institution") : "";
                    obj.PCIId = (item.LandType == "1" ? AllParishData.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.ParishName).FirstOrDefault().ToString() : item.LandType == "2" ? allComm.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.CongregationName).FirstOrDefault().ToString() : item.LandType == "3" ? allins.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.Name).FirstOrDefault().ToString() : "") == null ? "" : item.LandType == "1" ? AllParishData.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.ParishName).FirstOrDefault().ToString() : item.LandType == "2" ? allComm.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.CongregationName).FirstOrDefault().ToString() : item.LandType == "3" ? allins.Where(x => x.Id.ToString() == item.PCIId.ToString()).Select(x => x.Name).FirstOrDefault().ToString() : "";
                    obj.DocumentType = item.DocumentType != null && item.DocumentType != "0" ? AllDocumentTypeChild.Where(x => x.Id.ToString() == item.DocumentType).Select(x => x.Name).FirstOrDefault().ToString() : "";
                    obj.Date = item.Date != null ? item.Date : "";
                    obj.Title = item.Title != null ? item.Title : "";
                    obj.File = item.File != null ? item.File : "";
                    obj.Id = item.Id;
                    allCombinedData.Add(obj);
                }
                ViewBag.AllLandData = allCombinedData;
            }
            //Provinedata
            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            //RenewalData
            if (Session["username"].ToString() == "admin")
            {
                var AllRenewalVows = dbcont.Tbl_RenewalVows.ToList();
                ViewBag.AllRenewalVows = AllRenewalVows;
            }
            else
            {
                var AllRenewalVows = dbcont.Tbl_RenewalVows.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllRenewalVows = AllRenewalVows;
            }

            //CongData
            if (Session["username"].ToString() == "admin")
            {
                var CongData = db.CongData.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<CongData> allSubData = new List<CongData>();

                foreach (var item in CongData)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new CongData
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,

                        other1 = item.other1,
                        Date = item.Date,

                    });

                }
                ViewBag.CongData123 = allSubData;
            }
            else
            {
                var Allsabatical = dbcont.CongData;
                var allProvince = dbcont.tbl_Province.ToList();
                List<CongData> allSubData = new List<CongData>();
                var CongData = db.CongData.ToList();

                foreach (var item in CongData)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new CongData
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        other1 = item.other1,
                        Date = item.Date,

                    });
                }

                ViewBag.CongData123 = allSubData;
            }

            // Provincedetails
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_provinceDatas = db.Tbl_provinceDatas.Where(x => x.ProvinceId == myId.ToString()).ToList();
                ViewBag.Tbl_provinceDatas = Tbl_provinceDatas;
            }
            else
            {
                var Tbl_provinceDatas = db.Tbl_provinceDatas.Where(x => x.CreatedBy == currentloginuserid && x.ProvinceId == myId.ToString()).ToList();
                ViewBag.Tbl_provinceDatas = Tbl_provinceDatas;
            }

            var pertionalInfo = dbcont.tbl_Province.FirstOrDefault(x => x.MyId.ToString() == myId);
            if (pertionalInfo != null)
            {
                ViewBag.ProvinceId = pertionalInfo.MyId;
            }

            //MemberName
            if (Session["username"].ToString() == "admin")
            {
                var membersDetail = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null).ToList();
                ViewBag.AllMemberName = membersDetail;
            }
            else
            {
                var membersDetail = dbcont.tbl_PersonalDetails.Where(x => x.CreatedBy == currentloginuserid && x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null).ToList();
                ViewBag.AllMemberName = membersDetail;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            //MemberName
            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null).Count();
                ViewBag.MemberId123 = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null && x.CreatedBy == currentloginuserid).Count();
                ViewBag.MemberId123 = AllProvince;
            }

            //Transferdata
            if (Session["username"].ToString() == "admin")
            {
                //  var prodata = dbcont.tbl_Province.FirstOrDefault(x => x.MyId == myId);
                var AllData1 = dbcont.Tbl_Transfer.Where(x => x.OldProvinceId == myId).ToList();
                ViewBag.AllData = AllData1;
            }
            else
            {
                var AllData1 = dbcont.Tbl_Transfer.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllData = AllData1;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;
            //for dropdown
            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DistSecName).ToList();
            ViewBag.DistSector = allDisSec;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId.ToString() == myId).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId.ToString() == myId).ToList();
                ViewBag.Paris = Paris;
            }

            // Id = new Guid(Request.QueryString["id"]);
            // Guid Id = data.Id;
            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == myId.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.EnterbyId == myId.ToString()).ToList();
                ViewBag.Society = Society;
            }

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.ProvinceName == data.Id.ToString()).OrderBy(x => x.Name).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.ProvinceName == data.Id.ToString()).OrderBy(x => x.Name).ToList();
                ViewBag.allinstitution = allins;

            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == data.Id.ToString()).ToList();
                //var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == myId.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.ProvinceName == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == myId.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == myId.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == myId.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.CreatedBy == currentloginuserid && x.EnterbyId == myId.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;

            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;


            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult ProvinceList2(string page)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            var pagename = page;
            ViewBag.pagename = pagename;
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            var brotherbyProv = dbcont.tbl_PersonalDetails.ToList();
            if (brotherbyProv != null)
            {
                if (Session["username"].ToString() == "admin")
                {
                    var brotherbyProv1 = brotherbyProv
                    .Where(x => x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck != "Active" && x.Sapcheck != "Active").ToList()
                    .Select(x => new tbl_PersonalDetails { MemberID = x.MemberID, Name = x.Name, SirName = x.SirName })
                    .ToList();
                    ViewBag.brotherbyProv = brotherbyProv1;

                }
                else
                {
                    var brotherbyProv1 = brotherbyProv
                    .Where(x => x.CreatedBy == currentloginuserid && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck != "Active" && x.Sapcheck != "Active").ToList()
                    .Select(x => new tbl_PersonalDetails { MemberID = x.MemberID, Name = x.Name, SirName = x.SirName })
                    .ToList();

                    ViewBag.brotherbyProv = brotherbyProv1;
                }
            }

            Uri myUri = new Uri(this.Request.UrlReferrer.AbsoluteUri);
            string topid = HttpUtility.ParseQueryString(myUri.Query).Get("myId"); // current provinceid
            ViewBag.MyurlId = topid;

            //Province Council
            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.ToList();
            //    ViewBag.AllProvinceCouncil = AllProvinceCouncil;
            //}
            //else
            //{
            //    var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.Where(x => x.CreatedBy == currentloginuserid).ToList();
            //    ViewBag.AllProvinceCouncil = AllProvinceCouncil;
            //}

            //Province Commission
            if (Session["username"].ToString() == "admin")
            {
                var AllProvinceCommission = dbcont.tbl_ProCommission.ToList();
                ViewBag.AllProvinceCommission = AllProvinceCommission;
            }
            else
            {
                var AllProvinceCommission = dbcont.tbl_ProCommission.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllProvinceCommission = AllProvinceCommission;
            }

            //HomeVisitData
            if (Session["username"].ToString() == "admin")
            {
                var AllData = dbcont.tbl_HomeVisit.ToList();
                ViewBag.AllDataHomeVisit = AllData;
            }
            else
            {
                var AllData = dbcont.tbl_HomeVisit.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllDataHomeVisit = AllData;
            }

            //Provinedata
            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            //RenewalData
            if (Session["username"].ToString() == "admin")
            {
                var AllRenewalVows = dbcont.Tbl_RenewalVows.ToList();
                ViewBag.AllRenewalVows = AllRenewalVows;
            }
            else
            {
                var AllRenewalVows = dbcont.Tbl_RenewalVows.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllRenewalVows = AllRenewalVows;
            }

            // Provincedetails
            //if (Session["username"].ToString() == "admin")
            //{
            //    var Tbl_provinceDatas = db.Tbl_provinceDatas.ToList();
            //    ViewBag.Tbl_provinceDatas = Tbl_provinceDatas;
            //}
            //else
            //{
            //    var Tbl_provinceDatas = db.Tbl_provinceDatas.Where(x => x.CreatedBy == currentloginuserid).ToList();
            //    ViewBag.Tbl_provinceDatas = Tbl_provinceDatas;
            //}

            //NewlyProvincedetails
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_provinceDatas = db.Tbl_provinceDatas.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_provinceData> allSubData = new List<Tbl_provinceData>();

                foreach (var item in Tbl_provinceDatas)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new Tbl_provinceData
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File,
                        id = item.id,
                        Name = db.tbl_DocumentType.Where(x=>x.Id.ToString() == item.Name).Select(x=>x.Name == null ? "Not Exist"  : x.Name ).FirstOrDefault(),
                        Mandate = item.Mandate

                    });

                }
                ViewBag.Tbl_provinceDatas123 = allSubData.OrderByDescending(x=>x.CreatedDate).ToList();
            }
            else
            {
                var Allsabatical = dbcont.Tbl_provinceDatas;
                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_provinceData> allSubData = new List<Tbl_provinceData>();
                var Tbl_provinceDatas = db.Tbl_provinceDatas.ToList();

                foreach (var item in Tbl_provinceDatas)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new Tbl_provinceData
                    {

                        Title = item.Title,
                        Date = item.Date,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        Description = item.Description,
                        File = item.File,
                        id = item.id,
                        Name = db.tbl_DocumentType.Where(x => x.Id.ToString() == item.Name).Select(x => x.Name == null ? "Not Exist" : x.Name).FirstOrDefault(),
                        Mandate = item.Mandate

                    });
                }

                ViewBag.Tbl_provinceDatas = allSubData;
            }

            //newlyCouncli
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_ProvinceCouncil = db.Tbl_ProvinceCouncil.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_ProvinceCouncil> allSubData1 = new List<Tbl_ProvinceCouncil>();

                foreach (var item in Tbl_ProvinceCouncil)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData1.Add(new Tbl_ProvinceCouncil
                    {
                        //ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        ProvinceName = item.ProvinceName,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        MemberName = item.MemberName,
                        DesignationName = item.DesignationName,
                        ResponsibilityName = item.ResponsibilityName,
                        Id = item.Id
                    });

                }
                ViewBag.Tbl_ProvinceCouncil123 = allSubData1;
            }
            else
            {
                var Allsabatical = dbcont.Tbl_ProvinceCouncil;
                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_ProvinceCouncil> allSubData = new List<Tbl_ProvinceCouncil>();
                var Tbl_ProvinceCouncil = db.Tbl_ProvinceCouncil.ToList();

                foreach (var item in Tbl_ProvinceCouncil)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceId);

                    allSubData.Add(new Tbl_ProvinceCouncil
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        MemberName = item.MemberName,
                        DesignationName = item.DesignationName,
                        ResponsibilityName = item.ResponsibilityName,
                        Id = item.Id
                    });
                }

                ViewBag.Tbl_ProvinceCouncil = allSubData;
                ViewBag.Tbl_ProvinceCouncil123 = allSubData;
            }

            //newlycommision
            if (Session["username"].ToString() == "admin")
            {
                var tbl_ProCommission = db.tbl_ProCommission.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<tbl_ProCommission> allSubData1 = new List<tbl_ProCommission>();

                foreach (var item in tbl_ProCommission)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData1.Add(new tbl_ProCommission
                    {
                        Id = item.Id,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        MemberName = item.MemberName,
                        DesignationName = item.DesignationName,
                        ResponsibilityName = item.ResponsibilityName,
                    });

                }
                ViewBag.tbl_ProCommission123 = allSubData1;
            }
            else
            {
                var Allsabatical = dbcont.tbl_ProCommission;
                List<tbl_ProCommission> allSubData = new List<tbl_ProCommission>();
                var tbl_ProCommission = db.tbl_ProCommission.ToList();
                var allProvince = dbcont.Tbl_ProvinceCouncil.ToList();

                foreach (var item in tbl_ProCommission)
                {
                    var PrId = item.ProvinceName.ToUpper();
                    var provDetails = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == PrId);
                    allSubData.Add(new tbl_ProCommission
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        MemberName = item.MemberName,
                        DesignationName = item.DesignationName,
                        ResponsibilityName = item.ResponsibilityName,
                        Id = item.Id

                    });
                }
                ViewBag.tbl_ProCommission123 = allSubData;
                ViewBag.tbl_ProCommission = allSubData;
            }

            //HomeVisit
            if (Session["username"].ToString() == "admin")
            {
                var tbl_HomeVisit = db.tbl_HomeVisit.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<tbl_HomeVisit> allSubData1 = new List<tbl_HomeVisit>();
                var allmembers = dbcont.tbl_PersonalDetails.ToList();
                foreach (var item in tbl_HomeVisit)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    var persionalDetail = allmembers.FirstOrDefault(x => x.MemberID.ToString() == item.Name);
                    allSubData1.Add(new tbl_HomeVisit
                    {
                        Id = item.Id,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        Name = persionalDetail == null ? "Not Exists" : persionalDetail.Name,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        Purpose = item.Purpose,

                    });

                }
                ViewBag.tbl_HomeVisit123 = allSubData1;
            }
            else
            {
                var Allsabatical = dbcont.tbl_HomeVisit;
                var allProvince = dbcont.tbl_HomeVisit.ToList();
                List<tbl_HomeVisit> allSubData = new List<tbl_HomeVisit>();
                var tbl_HomeVisit = db.tbl_HomeVisit.ToList();

                foreach (var item in tbl_HomeVisit)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new tbl_HomeVisit
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        Name = item.Name,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        Purpose = item.Purpose,

                    });
                }

                ViewBag.tbl_HomeVisit123 = allSubData;
            }

            //ProvinceTransfer
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_Transfer = db.Tbl_Transfer.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_Transfer> allSubData2 = new List<Tbl_Transfer>();

                foreach (var item in Tbl_Transfer)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.NewProvinceName);

                    allSubData2.Add(new Tbl_Transfer
                    {
                        NewProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        NewMemberId = item.NewMemberId,
                        NewProvinceId = item.NewProvinceId,
                        CreatedDate = item.CreatedDate,


                    });

                }
                ViewBag.Tbl_Transfer123 = allSubData2;
            }
            else
            {
                var Allsabatical = dbcont.Tbl_Transfer;
                var allProvince = dbcont.Tbl_Transfer.ToList();
                List<Tbl_Transfer> allSubData = new List<Tbl_Transfer>();
                var Tbl_Transfer = db.Tbl_Transfer.ToList();

                foreach (var item in Tbl_Transfer)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.NewProvinceName);

                    allSubData.Add(new Tbl_Transfer
                    {
                        NewProvinceName = provDetails == null ? "Not Exist" : provDetails.NewProvinceName,
                        BrotherName = item.BrotherName,
                        NewMemberId = item.NewMemberId,
                        NewProvinceId = item.NewProvinceId,
                        CreatedDate = item.CreatedDate,

                    });
                }

                ViewBag.Tbl_Transfer123 = allSubData;
            }

            //ProvinceInstitution
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_ParisInstitutionDetails = db.Tbl_ParisInstitutionDetails.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_ParisInstitutionDetails> allSubData2 = new List<Tbl_ParisInstitutionDetails>();

                foreach (var item in Tbl_ParisInstitutionDetails)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData2.Add(new Tbl_ParisInstitutionDetails
                    {
                        Id = item.Id,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,

                        InstitutionType = item.InstitutionType,
                        Name = item.Name,
                    });

                }
                ViewBag.Tbl_ParisInstitutionDetails123 = allSubData2;
            }
            else
            {
                var Allsabatical = dbcont.Tbl_ParisInstitutionDetails;
                var allProvince = dbcont.Tbl_ParisInstitutionDetails.ToList();
                List<Tbl_ParisInstitutionDetails> allSubData = new List<Tbl_ParisInstitutionDetails>();
                var Tbl_ParisInstitutionDetails = db.Tbl_ParisInstitutionDetails.ToList();

                foreach (var item in Tbl_ParisInstitutionDetails)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new Tbl_ParisInstitutionDetails
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        InstitutionType = item.InstitutionType,
                        Name = item.Name,


                    });
                }

                ViewBag.Tbl_ParisInstitutionDetails123 = allSubData;
            }

            //ProvinceSociety
            if (Session["username"].ToString() == "admin")
            {
                var Societys = db.Societys.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<Societys> allSubData2 = new List<Societys>();

                foreach (var item in Societys)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData2.Add(new Societys
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        Id = item.Id,
                        NameOfTheSocity = item.NameOfTheSocity,
                        Date = item.Date,
                    });

                }
                ViewBag.Societys123 = allSubData2;
            }
            else
            {
                var Allsabatical = dbcont.Societys;
                var allProvince = dbcont.Societys.ToList();
                List<Societys> allSubData = new List<Societys>();
                var Societys = db.Societys.ToList();

                foreach (var item in Societys)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new Societys
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        NameOfTheSocity = item.NameOfTheSocity,
                        Date = item.Date,
                    });
                }

                ViewBag.Societys123 = allSubData;
            }

            //ProvinceStaff
            if (Session["username"].ToString() == "admin")
            {
                var StaffDetails = db.StaffDetails.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<StaffDetails> allSubData2 = new List<StaffDetails>();

                foreach (var item in StaffDetails)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.EnterbyName);

                    allSubData2.Add(new StaffDetails
                    {
                        Id = item.Id,
                        EnterbyName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        StaffNameName = item.StaffNameName,
                        StaffDOB = item.StaffDOB,
                    });

                }
                ViewBag.StaffDetails123 = allSubData2;
            }
            else
            {
                var Allsabatical = dbcont.StaffDetails;
                var allProvince = dbcont.StaffDetails.ToList();
                List<StaffDetails> allSubData = new List<StaffDetails>();
                var StaffDetails = db.StaffDetails.ToList();

                foreach (var item in StaffDetails)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.EnterbyName);

                    allSubData.Add(new StaffDetails
                    {
                        Id = item.Id,
                        EnterbyName = provDetails == null ? "Not Exist" : provDetails.EnterbyName,
                        StaffNameName = item.StaffNameName,
                        StaffDOB = item.StaffDOB,


                    });
                }

                ViewBag.StaffDetails123 = allSubData;
            }

            //ProvinceCong
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_Cong = db.Tbl_Cong.ToList();

                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_Cong> allSubData2 = new List<Tbl_Cong>();

                foreach (var item in Tbl_Cong)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData2.Add(new Tbl_Cong
                    {
                        Id = item.Id,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        CongregationName = item.CongregationName,
                        Phone = item.Phone,

                    });

                }
                ViewBag.Tbl_Cong123 = allSubData2;
            }
            else
            {
                var Allsabatical = dbcont.Tbl_Cong;
                var allProvince = dbcont.Tbl_Cong.ToList();
                List<Tbl_Cong> allSubData = new List<Tbl_Cong>();
                var Tbl_Cong = db.Tbl_Cong.ToList();

                foreach (var item in Tbl_Cong)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allSubData.Add(new Tbl_Cong
                    {
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        CongregationName = item.CongregationName,
                        Phone = item.Phone,


                    });
                }

                ViewBag.Tbl_Cong123 = allSubData;
            }

            ViewBag.Id = 1;
            //MemberName
            if (Session["username"].ToString() == "admin")
            {
                var membersDetail = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null).ToList();
                ViewBag.AllMemberName = membersDetail;
            }
            else
            {
                var membersDetail = dbcont.tbl_PersonalDetails.Where(x => x.CreatedBy == currentloginuserid && x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null).ToList();
                ViewBag.AllMemberName = membersDetail;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            //MemberName
            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null).Count();
                ViewBag.MemberId123 = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Diedcheck == null && x.Sapcheck == null && x.CreatedBy == currentloginuserid).Count();
                ViewBag.MemberId123 = AllProvince;
            }

            //Transferdata
            if (Session["username"].ToString() == "admin")
            {
                //  var prodata = dbcont.tbl_Province.FirstOrDefault(x => x.MyId == myId);
                var AllData1 = dbcont.Tbl_Transfer.ToList();
                ViewBag.AllData = AllData1;
            }
            else
            {
                var AllData1 = dbcont.Tbl_Transfer.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllData = AllData1;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;
            //for dropdown
            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DistSecName).ToList();
            ViewBag.DistSector = allDisSec;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.Type == "Paris").ToList();
                ViewBag.Paris = Paris;
            }

            // Id = new Guid(Request.QueryString["id"]);
            // Guid Id = data.Id;
            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active").ToList();
                ViewBag.Society = Society;
            }

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_ParisInstitutionDetails> alldata = new List<Tbl_ParisInstitutionDetails>();

                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").OrderBy(x => x.Name).ToList();
                foreach (var item in allins)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    alldata.Add(item);
                }

                ViewBag.allinstitution = alldata;
            }
            else
            {
                var allProvince = dbcont.tbl_Province.ToList();
                List<Tbl_ParisInstitutionDetails> alldata = new List<Tbl_ParisInstitutionDetails>();

                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.Type == "Institution").ToList();
                foreach (var item in allins)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    alldata.Add(item);
                }
                ViewBag.allinstitution = alldata;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active").ToList();
                ViewBag.Community = allComm;
            }
            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && x.Type == "Paris").ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.CreatedBy == currentloginuserid).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;

            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;

            var viemodel = (from b in dbcont.Tbl_ProvinceCouncil
                            group b by new
                            {
                                b.DesignationName,
                                b.MemberName
                            }
                into g
                            select new AllProvinceCouncilModel
                            {
                                MemberName = g.Key.MemberName,
                                DesignationName = g.Key.DesignationName,
                                count = g.Count().ToString() //Actually this line of code is not working
                            }).ToList();



            var AllProvinceCouncil = dbcont.Tbl_ProvinceCouncil.ToList();
            ViewBag.AllProvinceCouncil = viemodel;
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }


        //PROVINCES//
        //Minutes//
        public JsonResult GetAllProvinceDetails(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllProvinceDetailsData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllProvinceDetailsDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllProvinceDetailsData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllProvinceDetailsData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllProvinceDetailsData = AllProvinceDetailsData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllProvinceDetailsData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllProvinceDetailsDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllProvinceDetailsDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllProvinceDetailsDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //COUNCIL//
        public JsonResult GetAllProvinceCouncilMembers(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllProvinceCouncilMembersData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllProvinceCouncilMembersDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllProvinceCouncilMembersData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllProvinceCouncilMembersData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllProvinceCouncilMembersData = AllProvinceCouncilMembersData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllProvinceCouncilMembersData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllProvinceCouncilMembersDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllProvinceCouncilMembersDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllProvinceCouncilMembersDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Commission//
        public JsonResult GetAllProvinceCommissions(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllProvinceCommissionsData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllProvinceCommissionsDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllProvinceCommissionsData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllProvinceCommissionsData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllProvinceCommissionsData = AllProvinceCommissionsData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllProvinceCommissionsData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllProvinceCommissionsDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllProvinceCommissionsDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllProvinceCommissionsDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Vows Renewal//
        public JsonResult GetAllProvinceVowsRenewal()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        //Travel AND HomeLeave//
        public JsonResult GetAllTravelAndHomeLeave(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllTravelAndHomeLeaveData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllTravelAndHomeLeaveDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllTravelAndHomeLeaveData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllTravelAndHomeLeaveData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllTravelAndHomeLeaveData = AllTravelAndHomeLeaveData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllTravelAndHomeLeaveData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllTravelAndHomeLeaveDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllTravelAndHomeLeaveDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllTravelAndHomeLeaveDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }
        public ActionResult ViewAllProvinceCouncil()
        {
            try
            {
                var um = Convert.ToString(Session["username"]);
                if (um != "")
                {
                    var viemodel = (from b in dbcont.Tbl_ProvinceCouncil
                                    group b by new
                                    {
                                        b.DesignationName,
                                        b.MemberName
                                    }
                into g
                                    select new AllProvinceCouncilModel
                                    {
                                        MemberName = g.Key.MemberName,
                                        DesignationName = g.Key.DesignationName,
                                        count = g.Count().ToString() //Actually this line of code is not working
                                    }).ToList();
                    ViewBag.TotalCount = viemodel.Count();
                }
                else
                {
                    return RedirectToAction("Login");
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }

            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGrid(string name, string FromDate, string ToDate, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
            string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() != "" && Session["username"].ToString() != null)
            {
                var Tbl_ProvinceCouncilList = (from m in dbcont.Tbl_ProvinceCouncil
                                               select m).ToList();
                if (FromDate != null && FromDate != "")// && ToDate != "")
                {
                    Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.FromDate == FromDate).ToList();

                }
                if (ToDate != "" && ToDate != null)
                {
                    Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ToDate == ToDate).ToList();
                }
                var allProvince = Tbl_ProvinceCouncilList;
                List<tbl_Province> alldata = new List<tbl_Province>();

                var allins = Tbl_ProvinceCouncilList.Where(x => (x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt)) && x.Status != "1").OrderBy(x => x.Id).ToList();
                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    allins = filteredData.ToList();
                }
                var list = (from b in allins
                            group b by new
                            {
                                b.DesignationName,
                                b.MemberName
                            }
                           into g
                            select new
                            {
                                MemberName = g.Key.MemberName.ToString(),
                                DesignationName = g.Key.DesignationName.ToString(),
                                count = g.Count().ToString() //Actually this line of code is not working
                            }).ToList();
                //List<SelectListItem> MainList = list.ToArray();

                ViewBag.allinstitution = list;
                List<SelectListItem> dynamicList = new List<SelectListItem>();

                ViewBag.CountRecord = list.Count();

            }

            return PartialView("_ViewAllProvinceCouncil");
        }
        //Community//
        public ActionResult ViewAllProvienceCommission()
        {
            try
            {
                if (Session["username"].ToString() == "admin")
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();

                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tbl_ProCommission> allSubData1 = new List<tbl_ProCommission>();

                    foreach (var item in tbl_ProCommission)
                    {
                        var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                        allSubData1.Add(new tbl_ProCommission
                        {
                            //ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                            ProvinceName = item.ProvinceName,
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            MemberName = item.MemberName,
                            DesignationName = item.DesignationName,
                            ResponsibilityName = item.ResponsibilityName,
                            Id = item.Id
                        });

                    }
                    ViewBag.Tbl_ProvinceCouncil123 = allSubData1;
                }
                else
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();

                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tbl_ProCommission> allSubData1 = new List<tbl_ProCommission>();

                    foreach (var item in tbl_ProCommission)
                    {
                        var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                        allSubData1.Add(new tbl_ProCommission
                        {
                            //ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                            ProvinceName = item.ProvinceName,
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            MemberName = item.MemberName,
                            DesignationName = item.DesignationName,
                            ResponsibilityName = item.ResponsibilityName,
                            Id = item.Id
                        });

                    }

                    ViewBag.Tbl_ProvinceCouncil123 = allSubData1;
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGridCommission(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            try
            {
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
                string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
                string currentloginuserid = Convert.ToString(Session["loginuserid"]);
                if (Session["username"].ToString() == "admin")
                {
                    var tbl_ProCommission = db.tbl_ProCommission.Where(x => x.Status != "1").ToList();
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tbl_ProCommission> alldata = new List<tbl_ProCommission>();
                    List<tbl_ProCommission> alldataFiltered = new List<tbl_ProCommission>();
                    foreach (var item in tbl_ProCommission)
                    {
                        var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                        alldata.Add(new tbl_ProCommission
                        {
                            //ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                            Id = item.Id,
                            ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            MemberName = item.MemberName,
                            DesignationName = item.DesignationName,
                            ResponsibilityName = item.ResponsibilityName,
                        });

                    }
                    //var allins = alldata.Where(x => x.ProvinceName.Contains(SearchTxt) || x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt) || x.ResponsibilityName.Contains(SearchTxt) || x.FromDate.Contains(SearchTxt) || x.ToDate.Contains(SearchTxt)).OrderBy(x => x.Id).ToList();
                    for (int i = 0; i < alldata.Count; i++)
                    {
                        if ((alldata[i].ProvinceName == null ? "" : alldata[i].ProvinceName).Contains(SearchTxt) || (alldata[i].MemberName == null ? "" : alldata[i].MemberName).Contains(SearchTxt) || (alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].ResponsibilityName == null ? "" : alldata[i].ResponsibilityName).Contains(SearchTxt) || (alldata[i].FromDate == null ? "" : alldata[i].FromDate).Contains(SearchTxt) || (alldata[i].ToDate == null ? "" : alldata[i].ToDate).Contains(SearchTxt))
                            alldataFiltered.Add(alldata[i]);
                    }
                    var allins = alldataFiltered;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                else
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tbl_ProCommission> alldata = new List<tbl_ProCommission>();
                    List<tbl_ProCommission> alldataFiltered = new List<tbl_ProCommission>();
                    foreach (var item in tbl_ProCommission)
                    {
                        var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                        alldata.Add(new tbl_ProCommission
                        {
                            //ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                            Id = item.Id,
                            ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            MemberName = item.MemberName,
                            DesignationName = item.DesignationName,
                            ResponsibilityName = item.ResponsibilityName,
                        });

                    }
                    //var allins = alldata.Where(x => x.CreatedBy == currentloginuserid && (x.ProvinceName.Contains(SearchTxt) || x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt) || x.ResponsibilityName.Contains(SearchTxt) || x.FromDate.Contains(SearchTxt) || x.ToDate.Contains(SearchTxt))).OrderBy(x => x.Id).ToList();
                    for (int i = 0; i < alldata.Count; i++)
                    {
                        if ((alldata[i].ProvinceName == null ? "" : alldata[i].ProvinceName).Contains(SearchTxt) || (alldata[i].MemberName == null ? "" : alldata[i].MemberName).Contains(SearchTxt) || (alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].ResponsibilityName == null ? "" : alldata[i].ResponsibilityName).Contains(SearchTxt) || (alldata[i].FromDate == null ? "" : alldata[i].FromDate).Contains(SearchTxt) || (alldata[i].ToDate == null ? "" : alldata[i].ToDate).Contains(SearchTxt))
                            alldataFiltered.Add(alldata[i]);
                    }
                    var allins = alldataFiltered;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                return PartialView("_ViewAllProvienceCommission");
            }
            catch (Exception ex)
            {
                throw ex; 
            }

            //return Json(new { Url = Url.Action("_InstitutionCreatedList", ViewBag.allinstitution) });
        }

        public ActionResult ViewAllCongCouncil()
        {
            try
            {
                var data = dbcont.tbl_Congregation.FirstOrDefault();
                string currentUser = Convert.ToString(Session["username"]);
                var um = Convert.ToString(Session["username"]);
                if (um != "")
                {
                    //    var viemodel = (from b in dbcont.MeetingMinutes
                    //                    group b by new
                    //                    {
                    //                        b.Designation,
                    //                        b.Name
                    //                    }
                    //into g
                    //                    select new AllProvinceCouncilModel
                    //                    {
                    //                        MemberName = g.Key.Name,
                    //                        DesignationName = g.Key.Designation,
                    //                        count = g.Count().ToString() //Actually this line of code is not working
                    //                    }).ToList();
                    if (Session["username"].ToString() == "admin")
                    {
                        var viemodel = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                        ViewBag.AllGeneralCouncil = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }
                    else
                    {
                        var viemodel = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                        ViewBag.AllGeneralCouncil = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }

                }
                else
                {
                    return RedirectToAction("Login");
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }

            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGridCongCouncil(string FilterFor, string FromDate, string ToDate, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
            string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
            string currentUser = Convert.ToString(Session["username"]);
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (FilterFor == "filter-1")
            {
                if (Session["username"].ToString() != "" && Session["username"].ToString() != null)
                {
                    var Tbl_ProvinceCouncilList = (from m in dbcont.GeneralMember
                                                   select m).ToList();
                    if (Session["username"].ToString() == "admin")
                    {
                        var viemodel = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                        Tbl_ProvinceCouncilList = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }
                    else
                    {
                        var viemodel = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                        Tbl_ProvinceCouncilList = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }

                    if (FromDate != null && FromDate != "")// && ToDate != "")
                    {
                        Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.FromDate == FromDate).ToList();

                    }
                    if (ToDate != "" && ToDate != null)
                    {
                        Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ToDate == ToDate).ToList();
                    }
                    var allProvince = Tbl_ProvinceCouncilList;
                    List<tbl_Province> alldata = new List<tbl_Province>();

                    var allins = Tbl_ProvinceCouncilList.Where(x => (x.Name.Contains(SearchTxt) || x.Designation.Contains(SearchTxt)) && x.Status != "1").OrderBy(x => x.Id).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }
                    var list = (from b in allins
                                group b by new
                                {
                                    b.Designation,
                                    b.Name
                                }
                               into g
                                select new
                                {
                                    MemberName = g.Key.Name.ToString(),
                                    DesignationName = g.Key.Designation.ToString(),
                                    count = g.Count().ToString() //Actually this line of code is not working
                                }).ToList();
                    //List<SelectListItem> MainList = list.ToArray();

                    ViewBag.allinstitution = list;
                    List<SelectListItem> dynamicList = new List<SelectListItem>();

                    ViewBag.CountRecord = list.Count();

                }
                ViewBag.ListForCong = "1";
                return PartialView("_ViewAllCongCouncil");
            }
            else if (FilterFor == "filter-2")
            {
                if (Session["username"].ToString() != "" && Session["username"].ToString() != null)
                {
                    var Tbl_ProvinceCouncilList = (from m in dbcont.MeetingMinutes
                                                   select m).ToList();
                    if (Session["username"].ToString() == "admin")
                    {
                        var viemodel = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                        Tbl_ProvinceCouncilList = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }
                    else
                    {
                        var viemodel = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                        Tbl_ProvinceCouncilList = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }

                    if (FromDate != null && FromDate != "")// && ToDate != "")
                    {
                        Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.FromDate == FromDate).ToList();

                    }
                    if (ToDate != "" && ToDate != null)
                    {
                        Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ToDate == ToDate).ToList();
                    }
                    var allProvince = Tbl_ProvinceCouncilList;
                    List<tbl_Province> alldata = new List<tbl_Province>();

                    var allins = Tbl_ProvinceCouncilList.Where(x => (x.Name.Contains(SearchTxt) || x.Designation.Contains(SearchTxt)) && x.Status != "1").OrderBy(x => x.Id).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }
                    var list = (from b in allins
                                group b by new
                                {
                                    b.Designation,
                                    b.Name
                                }
                               into g
                                select new
                                {
                                    MemberName = g.Key.Name.ToString(),
                                    DesignationName = g.Key.Designation.ToString(),
                                    count = g.Count().ToString() //Actually this line of code is not working
                                }).ToList();
                    //List<SelectListItem> MainList = list.ToArray();

                    ViewBag.allinstitution = list;
                    List<SelectListItem> dynamicList = new List<SelectListItem>();

                    ViewBag.CountRecord = list.Count();

                }
                ViewBag.ListForCong = "2";
                return PartialView("_ViewAllCongCouncil");
            }
            else if (FilterFor == "filter-3")
            {
                if (Session["username"].ToString() != "" && Session["username"].ToString() != null)
                {
                    var Tbl_ProvinceCouncilList = (from m in dbcont.GeneralTreasurer
                                                   select m).ToList();
                    if (Session["username"].ToString() == "admin")
                    {
                        var viemodel = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                        Tbl_ProvinceCouncilList = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }
                    else
                    {
                        var viemodel = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                        Tbl_ProvinceCouncilList = viemodel;
                        ViewBag.TotalCount = viemodel.Count();
                    }

                    if (FromDate != null && FromDate != "")// && ToDate != "")
                    {
                        Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.FromDate == FromDate).ToList();

                    }
                    if (ToDate != "" && ToDate != null)
                    {
                        Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ToDate == ToDate).ToList();
                    }
                    var allProvince = Tbl_ProvinceCouncilList;
                    List<tbl_Province> alldata = new List<tbl_Province>();

                    var allins = Tbl_ProvinceCouncilList.Where(x => (x.Name.Contains(SearchTxt) || x.Designation.Contains(SearchTxt)) && x.Status != "1").OrderBy(x => x.Id).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }
                    var list = (from b in allins
                                group b by new
                                {
                                    b.Designation,
                                    b.Name
                                }
                               into g
                                select new
                                {
                                    MemberName = g.Key.Name.ToString(),
                                    DesignationName = g.Key.Designation.ToString(),
                                    count = g.Count().ToString() //Actually this line of code is not working
                                }).ToList();
                    //List<SelectListItem> MainList = list.ToArray();

                    ViewBag.allinstitution = list;
                    List<SelectListItem> dynamicList = new List<SelectListItem>();

                    ViewBag.CountRecord = list.Count();

                }
                ViewBag.ListForCong = "3";
                return PartialView("_ViewAllCongCouncil");
            }
            else if (FilterFor == "filter-4")
            {
                if (Session["username"].ToString() == "admin")
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tblGenCommission> alldata = new List<tblGenCommission>();
                    List<tblGenCommission> alldataFiltered = new List<tblGenCommission>();

                    alldata = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString() && x.Status != "1").ToList();
                    //var allins = alldata.Where(x => x.ProvinceName.Contains(SearchTxt) || x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt) || x.ResponsibilityName.Contains(SearchTxt) || x.FromDate.Contains(SearchTxt) || x.ToDate.Contains(SearchTxt)).OrderBy(x => x.Id).ToList();
                    for (int i = 0; i < alldata.Count; i++)
                    {
                        if ((alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].MemberName == null ? "" : alldata[i].MemberName).Contains(SearchTxt) || (alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].ResponsibilityName == null ? "" : alldata[i].ResponsibilityName).Contains(SearchTxt) || (alldata[i].FromDate == null ? "" : alldata[i].FromDate).Contains(SearchTxt) || (alldata[i].ToDate == null ? "" : alldata[i].ToDate).Contains(SearchTxt))
                            alldataFiltered.Add(alldata[i]);
                    }
                    var allins = alldataFiltered;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                else
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tblGenCommission> alldata = new List<tblGenCommission>();
                    List<tblGenCommission> alldataFiltered = new List<tblGenCommission>();

                    alldata = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                    //var allins = alldata.Where(x => x.ProvinceName.Contains(SearchTxt) || x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt) || x.ResponsibilityName.Contains(SearchTxt) || x.FromDate.Contains(SearchTxt) || x.ToDate.Contains(SearchTxt)).OrderBy(x => x.Id).ToList();
                    for (int i = 0; i < alldata.Count; i++)
                    {
                        if ((alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].MemberName == null ? "" : alldata[i].MemberName).Contains(SearchTxt) || (alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].ResponsibilityName == null ? "" : alldata[i].ResponsibilityName).Contains(SearchTxt) || (alldata[i].FromDate == null ? "" : alldata[i].FromDate).Contains(SearchTxt) || (alldata[i].ToDate == null ? "" : alldata[i].ToDate).Contains(SearchTxt))
                            alldataFiltered.Add(alldata[i]);
                    }
                    var allins = alldataFiltered;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                return PartialView("_ViewAllDOSSIERCommission");
            }
            else if (FilterFor == "filter-5")
            {
                GeneralDBContext db = new GeneralDBContext();

                var allProvince = dbcont.tbl_Province.ToList();
                if (Session["username"].ToString() == "admin")
                {
                    var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                    var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
                    var dataPrimary = viewAllPrimaryDetails.ToList();
                    var provinceName = db.tbl_Province.ToList();
                    var getAllData_old = (from m in allPersionalDetails
                                          from n in provinceName
                                              //from o in dataPrimary
                                          where (m.ProvinceName == n.Id.ToString())/* && (o.MemberId == m.MemberID.ToString())*/
                                          // from o in dataPrimary
                                          //where m.MemberID == o.MemberId
                                          select new GetAllPrileView
                                          {
                                              ProvinceName = n.ProvinceName,
                                              Name = m.Name,
                                              FileNo = m.FileNo,
                                              NameBaptismial = m.NameBaptismial,
                                              DOB = m.DOB,
                                              Country = m.Country,
                                              Sirname = m.SirName,
                                              MemberId = (m.MemberID != null) ? m.MemberID : null
                                          });
                    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                    con.Open();
                    SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails", con);
                    cmd.CommandType = CommandType.StoredProcedure;

                    SqlDataAdapter da = new SqlDataAdapter();
                    da.SelectCommand = cmd;
                    DataTable dt = new DataTable();
                    da.Fill(dt);
                    con.Close();
                    cmd.Dispose();

                    var getAllData = (from DataRow dr in dt.Rows
                                      select new GetAllPrileView
                                      {
                                          ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                          Name = Convert.ToString(dr["Name"]),
                                          FileNo = Convert.ToString(dr["FileNo"]),
                                          NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                          DOB = Convert.ToString(dr["DOB"]),
                                          Country = Convert.ToString(dr["Country"]),
                                          Sirname = Convert.ToString(dr["SirName"]),
                                          MemberId = Convert.ToString(dr["MemberID"]),
                                          PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                          Nationality = Convert.ToString(dr["Nationality"]),
                                          MobileNo = Convert.ToString(dr["mobilenumber"]),
                                          EmailId = Convert.ToString(dr["emailid"]),
                                          MotherTounge = Convert.ToString(dr["mothertounge"]),
                                          AppiontmentType = Convert.ToString(dr["AppointmentType"])
                                      }).ToList();
                    ViewBag.totalCount = getAllData.Count();
                    if (!string.IsNullOrEmpty(SearchTxt))
                    {
                        getAllData = getAllData.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                      || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                                      || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                    }
                    var allins = getAllData;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    ViewBag.allinstitution = allins;
                }
                else
                {
                    var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                    var viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();
                    var data5_old = new List<GetAllPrileView>();
                    foreach (var item in allPersionalDetails)
                    {
                        var name = item.Name;
                        var fileno = item.FileNo;
                        var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                        data5_old.Add(new GetAllPrileView()
                        {
                            Name = name,
                            FileNo = fileno,
                            Sirname = item.SirName,
                            MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                        });
                    }
                    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                    con.Open();
                    SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails", con);
                    cmd.Parameters.AddWithValue("@username", currentUser);
                    cmd.CommandType = CommandType.StoredProcedure;

                    SqlDataAdapter da = new SqlDataAdapter();
                    da.SelectCommand = cmd;
                    DataTable dt = new DataTable();
                    da.Fill(dt);
                    con.Close();
                    cmd.Dispose();

                    var data5 = (from DataRow dr in dt.Rows
                                 select new GetAllPrileView
                                 {
                                     ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                     Name = Convert.ToString(dr["Name"]),
                                     FileNo = Convert.ToString(dr["FileNo"]),
                                     NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                     DOB = Convert.ToString(dr["DOB"]),
                                     Country = Convert.ToString(dr["Country"]),
                                     Sirname = Convert.ToString(dr["SirName"]),
                                     MemberId = Convert.ToString(dr["MemberID"]),
                                     PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                     Nationality = Convert.ToString(dr["Nationality"]),
                                     MobileNo = Convert.ToString(dr["mobilenumber"]),
                                     EmailId = Convert.ToString(dr["emailid"]),
                                     MotherTounge = Convert.ToString(dr["mothertounge"]),
                                     AppiontmentType = Convert.ToString(dr["AppointmentType"])
                                 }).ToList();
                    ViewBag.totalCount = data5.Count();
                    if (!string.IsNullOrEmpty(SearchTxt))
                    {
                        data5 = data5.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                      || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                                      || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                    }

                    var allins = data5;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    ViewBag.allinstitution = allins;
                }
                return PartialView("_MemberDetails2_New");
            }
            else if (FilterFor == "filter-6")
            {
                if (Session["username"].ToString() == "admin")
                {
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tbl_Province> alldata = new List<tbl_Province>();

                    var allins = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && (x.ProvinceName.Contains(SearchTxt) || x.Phone.Contains(SearchTxt) || x.Place.Contains(SearchTxt) || x.EmailId.Contains(SearchTxt) || x.Country.Contains(SearchTxt))).OrderBy(x => x.Id).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                    con.Open();
                    SqlCommand cmd = new SqlCommand("Sp_GroupByProvinceData", con);
                    cmd.Parameters.AddWithValue("@username", currentUser);
                    cmd.CommandType = CommandType.StoredProcedure;

                    SqlDataAdapter da = new SqlDataAdapter();
                    da.SelectCommand = cmd;
                    DataTable dt = new DataTable();
                    da.Fill(dt);
                    con.Close();
                    cmd.Dispose();
                    ViewBag.DynamicTable = dt;
                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                else
                {
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tbl_Province> alldata = new List<tbl_Province>();

                    var allins = dbcont.tbl_Province.Where(x => x.CreatedBy == currentloginuserid && x.ActiveCkeck == "Active" && (x.ProvinceName.Contains(SearchTxt) || x.Phone.Contains(SearchTxt) || x.Place.Contains(SearchTxt) || x.EmailId.Contains(SearchTxt) || x.Country.Contains(SearchTxt))).OrderBy(x => x.Id).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;

                }

                return PartialView("../Home/_DynamicPageGroupBy");
            }
            else
            {
                return null;
            }

        }
        public JsonResult GetDynamicDataChild(string id, string GridType, string ContentType)
        {
            string SearchTxt = id;
            string Content = "";
            try
            {
                SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                con.Open();
                SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails", con);
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@username", id);

                SqlDataAdapter da = new SqlDataAdapter();
                da.SelectCommand = cmd;
                DataTable dt = new DataTable();
                da.Fill(dt);
                con.Close();
                cmd.Dispose();

                var getAllData = (from DataRow dr in dt.Rows
                                  select new GetAllPrileView
                                  {
                                      ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                      ProvinceId = Convert.ToString(dr["ProvinceId"]),
                                      Name = Convert.ToString(dr["Name"]),
                                      FileNo = Convert.ToString(dr["FileNo"]),
                                      NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                      DOB = Convert.ToString(dr["DOB"]),
                                      Country = Convert.ToString(dr["Country"]),
                                      Sirname = Convert.ToString(dr["SirName"]),
                                      MemberId = Convert.ToString(dr["MemberID"]),
                                      PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                      Nationality = Convert.ToString(dr["Nationality"]),
                                      MobileNo = Convert.ToString(dr["mobilenumber"]),
                                      EmailId = Convert.ToString(dr["emailid"]),
                                      MotherTounge = Convert.ToString(dr["mothertounge"]),
                                      AppiontmentType = Convert.ToString(dr["AppointmentType"])
                                  }).ToList();
                ViewBag.totalCount = getAllData.Count();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    getAllData = getAllData.Where(x => !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                  || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                }
                int ji = 1;
                foreach (var item in getAllData)
                {
                    Content += "<tr class='child-div-" + id + "'>" +
                        "<th><input type = 'checkbox' id = 'checkbox-76' class='checkSingle'></th>" +
                        "<th>" + ji + "</th>" +
                        "<th> <a href = '/Member/MemberInfoById?memberId=@item.MemberId&Name=&SirName=' >" + item.Name + "</a ></th >" +
                        "<th class='hide-1'>" + item.Sirname + "</th>" +
                        "<th class='hide-2'>" + item.NameBaptismial + "</th>" +
                        "<th class='hide-3'>" + item.DOB + "</th>" +
                        "<th class='hide-4'>" + item.Country + "</th>" +
                        "<th class='hide-5'>" + item.ProvinceName + "</th>" +
                        "<th class='hide-6'>" + item.FileNo + "</th>" +
                        "<th class='hide-7'>" + item.PlaceOfBirth + "</th>" +
                        "<th class='hide-8'>" + item.Nationality + "</th>" +
                        "<th class='hide-9'>" + item.MobileNo + "</th>" +
                        "<th class='hide-10'>" + item.EmailId + "</th>" +
                        "<th class='hide-11'>" + item.MotherTounge + "</th>" +
                        "<th class='hide-12'>" + item.AppiontmentType + "</th>" +
                        "<th>" +
                            "<a href = '/Home/MemberDetails?id=" + item.MemberId + "' > View Details</a>" +

                        "</th>" +
                        "<th><a href = '/Member/MemberInfoById?memberId=" + item.MemberId + "' > Add Details</a></th>" +
                        "<th></th>" +
                    "</tr>";
                    ji++;
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {

            }
            return Json(Content, JsonRequestBehavior.AllowGet);
        }
        public ActionResult ViewAllDOSSIERCommission()
        {
            try
            {
                var data = dbcont.tbl_Congregation.FirstOrDefault();
                if (Session["username"].ToString() == "admin")
                {
                    var tbl_ProCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();

                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tblGenCommission> allSubData1 = new List<tblGenCommission>();


                    ViewBag.Tbl_ProvinceCouncil123 = tbl_ProCommission;
                }
                else
                {
                    var tbl_ProCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();

                    var allProvince = dbcont.tbl_Province.ToList();


                    ViewBag.Tbl_ProvinceCouncil123 = tbl_ProCommission;
                }

            }
            catch (Exception ex)
            {
                throw ex;
            }

            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGridDOSSIERCommission(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            try
            {
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
                string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
                var data = dbcont.tbl_Congregation.FirstOrDefault();
                string currentloginuserid = Convert.ToString(Session["loginuserid"]);
                if (Session["username"].ToString() == "admin")
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tblGenCommission> alldata = new List<tblGenCommission>();
                    List<tblGenCommission> alldataFiltered = new List<tblGenCommission>();

                    alldata = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString() && x.Status != "1").ToList();
                    //var allins = alldata.Where(x => x.ProvinceName.Contains(SearchTxt) || x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt) || x.ResponsibilityName.Contains(SearchTxt) || x.FromDate.Contains(SearchTxt) || x.ToDate.Contains(SearchTxt)).OrderBy(x => x.Id).ToList();
                    for (int i = 0; i < alldata.Count; i++)
                    {
                        if ((alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].MemberName == null ? "" : alldata[i].MemberName).Contains(SearchTxt) || (alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].ResponsibilityName == null ? "" : alldata[i].ResponsibilityName).Contains(SearchTxt) || (alldata[i].FromDate == null ? "" : alldata[i].FromDate).Contains(SearchTxt) || (alldata[i].ToDate == null ? "" : alldata[i].ToDate).Contains(SearchTxt))
                            alldataFiltered.Add(alldata[i]);
                    }
                    var allins = alldataFiltered;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                else
                {
                    var tbl_ProCommission = db.tbl_ProCommission.ToList();
                    var allProvince = dbcont.tbl_Province.ToList();
                    List<tblGenCommission> alldata = new List<tblGenCommission>();
                    List<tblGenCommission> alldataFiltered = new List<tblGenCommission>();

                    alldata = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                    //var allins = alldata.Where(x => x.ProvinceName.Contains(SearchTxt) || x.MemberName.Contains(SearchTxt) || x.DesignationName.Contains(SearchTxt) || x.ResponsibilityName.Contains(SearchTxt) || x.FromDate.Contains(SearchTxt) || x.ToDate.Contains(SearchTxt)).OrderBy(x => x.Id).ToList();
                    for (int i = 0; i < alldata.Count; i++)
                    {
                        if ((alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].MemberName == null ? "" : alldata[i].MemberName).Contains(SearchTxt) || (alldata[i].DesignationName == null ? "" : alldata[i].DesignationName).Contains(SearchTxt) || (alldata[i].ResponsibilityName == null ? "" : alldata[i].ResponsibilityName).Contains(SearchTxt) || (alldata[i].FromDate == null ? "" : alldata[i].FromDate).Contains(SearchTxt) || (alldata[i].ToDate == null ? "" : alldata[i].ToDate).Contains(SearchTxt))
                            alldataFiltered.Add(alldata[i]);
                    }
                    var allins = alldataFiltered;
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        allins = filteredData.ToList();
                    }

                    //foreach (var item in allins)
                    //{
                    //    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    //    item.ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName;
                    //    alldata.Add(item);
                    //}

                    ViewBag.allinstitution = allins;
                }
                return PartialView("_ViewAllDOSSIERCommission");
            }
            catch (Exception ex)
            {
                throw ex; ;
            }

            //return Json(new { Url = Url.Action("_InstitutionCreatedList", ViewBag.allinstitution) });
        }


        public JsonResult GetAllProvinceAddCommunity(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> GetAllProvinceAddCommunityData = new List<GeneralCouncil>();
                List<GeneralCouncil> GetAllProvinceAddCommunityDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    GetAllProvinceAddCommunityData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    GetAllProvinceAddCommunityData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    GetAllProvinceAddCommunityData = GetAllProvinceAddCommunityData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in GetAllProvinceAddCommunityData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    GetAllProvinceAddCommunityDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = GetAllProvinceAddCommunityDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = GetAllProvinceAddCommunityDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Instution//
        public JsonResult GetAllAddInstitution(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> GetAllAddInstitutionData = new List<GeneralCouncil>();
                List<GeneralCouncil> GetAllAddInstitutionDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    GetAllAddInstitutionData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    GetAllAddInstitutionData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    GetAllAddInstitutionData = GetAllAddInstitutionData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in GetAllAddInstitutionData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    GetAllAddInstitutionDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = GetAllAddInstitutionDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = GetAllAddInstitutionDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Legal Registration//
        #region ||| Legal Registration |||
        public async Task<ActionResult> GetLegalDetails(string provinceId = null)
        {
            if (provinceId == "0")
            {
                provinceId = null;
            }
            ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
            {
                Value = x.Id.ToString(),
                Text = x.ProvinceName
            }).ToListAsync();

            ViewBag.ProvinceId = provinceId;
            return View();
        }
        public async Task<JsonResult> GetAllSocietybyProvince(JqueryDatatableParam param, string province)
        {
            var allSocietys = new List<Societys>();
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var data = await db.Societys.Where(x => x.ActiveCkeck == "Active").Select(x => new { x.ProvinceName, x.NameOfTheSocity, x.EnterbyName, x.RegistrationNumber, x.Id }).ToListAsync();
            if (Session["username"].ToString() == "admin")
            {
                if (province != "")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
            }
            else
            {
                province = currentUser;
                if (province != "")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
            }
            foreach (var item in data)
            {
                allSocietys.Add(new Societys()
                {
                    NameOfTheSocity = item.NameOfTheSocity,
                    ProvinceName = item.EnterbyName,
                    Id = item.Id,
                    RegistrationNumber = item.RegistrationNumber,
                });
            }
            if (!string.IsNullOrEmpty(param.sSearch))
            {
                allSocietys = allSocietys.Where(x => !string.IsNullOrEmpty(x.NameOfTheSocity) && x.NameOfTheSocity.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.RegistrationNumber) && x.RegistrationNumber.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                              || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }
            var responseData = allSocietys.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            var totalRecords = allSocietys.Count();
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = responseData
            }, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllAddSociety(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllAddSocietyData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllAddSocietyDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllAddSocietyData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllAddSocietyData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllAddSocietyData = AllAddSocietyData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllAddSocietyData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllAddSocietyDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllAddSocietyDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllAddSocietyDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }
        #endregion

        //Staff//
        public JsonResult GetAllProvinceStaffDetails(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllProvinceStaffDetailsData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllProvinceStaffDetailsDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllProvinceStaffDetailsData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllProvinceStaffDetailsData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllProvinceStaffDetailsData = AllProvinceStaffDetailsData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllProvinceStaffDetailsData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllProvinceStaffDetailsDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllProvinceStaffDetailsDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllProvinceStaffDetailsDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }

        //Province Administration//
        public JsonResult GetAllProvinceAdministration(JqueryDatatableParam param)
        {
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                // var data = dbcont.tbl_Congregation.FirstOrDefault();
                //if (Session["username"].ToString() == "admin")
                //{
                //    var GeneralCouncil = db.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}
                //else
                //{
                // var GeneralCouncil = db.GeneralCouncil.Where(x => x.CreatedBy == currentUser && x.GenId == id.ToString()).ToList();
                //    ViewBag.AllGeneralCouncil = GeneralCouncil;
                //}

                List<GeneralCouncil> AllProvinceAdministrationData = new List<GeneralCouncil>();
                List<GeneralCouncil> AllProvinceAdministrationDataOut = new List<GeneralCouncil>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    // AllMemberData = dbcont.GeneralCouncil.Where(x => x.GenId == id.ToString()).ToList();
                    AllProvinceAdministrationData = dbcont.MeetingMinutes.ToList();
                }
                else
                {
                    AllProvinceAdministrationData = dbcont.MeetingMinutes.Where(x => x.CreatedBy == currentUser).ToList();
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllProvinceAdministrationData = AllProvinceAdministrationData.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.Designation.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                foreach (var item in AllProvinceAdministrationData)
                {
                    //  var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllProvinceAdministrationDataOut.Add(new GeneralCouncil
                    {
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Id = item.Id,
                    });
                }
                var data = AllProvinceAdministrationDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllProvinceAdministrationDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);


            }
            catch (Exception)
            {
                return null;

            }
        }


        public JsonResult SearchCouncilMember(string FromDate, string ToDate, string Province)
        {
            var Tbl_ProvinceCouncilList = (from m in dbcont.Tbl_ProvinceCouncil
                                           select m).ToList();
            if (FromDate != "")// && ToDate != "")
            {
                Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.FromDate == FromDate).ToList();

            }
            if (ToDate != "")
            {
                Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ToDate == ToDate).ToList();
            }
            if (Province != "")
            {
                Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ProvinceId == Province).ToList();
            }
            var list = (from b in Tbl_ProvinceCouncilList
                        group b by new
                        {
                            b.DesignationName,
                            b.MemberName
                        }
                           into g
                        select new
                        {
                            MemberName = g.Key.MemberName,
                            DesignationName = g.Key.DesignationName,
                            count = g.Count().ToString() //Actually this line of code is not working
                        }).ToList();
            return Json(list);

        }

        public JsonResult SearchCongCouncilMember(string FromDate, string ToDate)
        {
            var Tbl_ProvinceCouncilList = (from m in dbcont.MeetingMinutes
                                           select m).ToList();
            if (FromDate != "")// && ToDate != "")
            {
                Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.FromDate == FromDate).ToList();

            }
            if (ToDate != "")
            {
                Tbl_ProvinceCouncilList = Tbl_ProvinceCouncilList.Where(x => x.ToDate == ToDate).ToList();
            }
            //var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
            //                    .Select(x => new { x.ProvinceName, x.Id, x.Place })
            //                   .ToList();
            //return Json(allRecords, JsonRequestBehavior.AllowGet);
            var list = (from b in Tbl_ProvinceCouncilList
                        group b by new
                        {
                            b.Designation,
                            b.Name,
                            b.ProvinceId

                        }
                           into g
                        select new
                        {
                            ProvinceName = dbcont.tbl_Province.Where(x => x.Id.ToString() == g.Key.ProvinceId).Any() ? dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == g.Key.ProvinceId).ProvinceName : "",
                            MemberName = g.Key.Name,
                            DesignationName = g.Key.Designation,
                            count = g.Count().ToString() //Actually this line of code is not working
                        }).ToList();
            return Json(list);

        }
        public JsonResult GetAllSocirtById1(string id)
        {
            var personalDetails = dbcont.SocietyData.FirstOrDefault(x => x.id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public ActionResult AddProvinceData(Tbl_provinceData tbl_ProvinceData, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath + "?myId=" + tbl_ProvinceData.ProvinceId;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Province"), fileName);
                        File.SaveAs(path);
                        tbl_ProvinceData.File = fileName;
                    }
                }
                tbl_ProvinceData.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.Tbl_provinceDatas.Add(tbl_ProvinceData);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public ActionResult DeleteProvinceData(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_provinceDatas.FirstOrDefault(e => e.id == id);
                if (data != null)
                {
                    dbcont.Tbl_provinceDatas.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetProvinceDataById(string id)
        {
            var allRecords = db.Tbl_provinceDatas.FirstOrDefault(e => e.id.ToString() == id);
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public ActionResult UpdateProvinceData(Tbl_provinceData tbl_ProvinceData, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath + "?myId=" + tbl_ProvinceData.ProvinceId;
            try
            {
                var existingobj = db.Tbl_provinceDatas.FirstOrDefault(e => e.id == tbl_ProvinceData.id);
                if (existingobj != null)
                {
                    if (File != null)
                    {
                        if (File.ContentLength > 0)
                        {
                            var fileName = Path.GetFileName(File.FileName);
                            var path = Path.Combine(Server.MapPath("~/Image/Congation"), fileName);
                            File.SaveAs(path);
                            tbl_ProvinceData.File = fileName;
                        }
                        else
                        {
                            tbl_ProvinceData.File = existingobj.File;
                        }
                    }
                    if (existingobj != null)
                    {
                        tbl_ProvinceData.CreatedBy = existingobj.CreatedBy;
                        db.Entry(existingobj).CurrentValues.SetValues(tbl_ProvinceData);
                        db.SaveChanges();
                    }
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }

        }
        public JsonResult jubliiData()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var jubliiiData = new List<JubliiiData>();
                SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                con.Open();
                SqlCommand cmd = new SqlCommand("Sp_GetJubliData", con);
                cmd.CommandType = CommandType.StoredProcedure;
                //if (FilterType == "2" && FilterData != "")
                //{
                //    cmd.Parameters.AddWithValue("@province", FilterData);
                //}

                SqlDataAdapter da = new SqlDataAdapter();
                da.SelectCommand = cmd;
                DataTable dt = new DataTable();
                da.Fill(dt);
                con.Close();
                cmd.Dispose();
                //var data = dbcont.tbl_Primarydetails.Where(x => x.Ordination != "" && x.Ordination != null).ToList();
                var data = dt;

                var currentday = DateTime.Now;

                if (dt != null)
                {
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        var jubilidate = Convert.ToString(dt.Rows[i][2]).Split('/');
                        if (jubilidate[0].TrimStart('0') == currentday.Day.ToString() && jubilidate[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            jubliiiData.Add(new JubliiiData
                            {
                                Name = Convert.ToString(dt.Rows[i][0]),
                                SurName = Convert.ToString(dt.Rows[i][1]),
                                Date = Convert.ToString(dt.Rows[i][2]),
                                UploadPhoto = Convert.ToString(dt.Rows[i][3]),
                                JubliiType = Convert.ToString(dt.Rows[i][4])
                                //JubliiType = GetJubliiType(item.Ordination.Trim())
                            });
                        }

                    }
                }

                return Json(jubliiiData.Where(x => x.JubliiType != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var jubliiiData = new List<JubliiiData>();
                SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                con.Open();
                SqlCommand cmd = new SqlCommand("Sp_GetJubliData", con);
                cmd.CommandType = CommandType.StoredProcedure;
                //if (FilterType == "2" && FilterData != "")
                //{
                cmd.Parameters.AddWithValue("@province", currentUser);
                //}

                SqlDataAdapter da = new SqlDataAdapter();
                da.SelectCommand = cmd;
                DataTable dt = new DataTable();
                da.Fill(dt);
                con.Close();
                cmd.Dispose();
                var currentday = DateTime.Now;
                if (dt != null)
                {
                    for (int i = 0; i < dt.Rows.Count; i++)
                    {
                        var jubilidate = Convert.ToString(dt.Rows[i][2]).Split('/');
                        if (jubilidate[0].TrimStart('0') == currentday.Day.ToString() && jubilidate[1].TrimStart('0') == currentday.Month.ToString())
                        {
                            jubliiiData.Add(new JubliiiData
                            {
                                Name = Convert.ToString(dt.Rows[i][0]),
                                SurName = Convert.ToString(dt.Rows[i][1]),
                                Date = Convert.ToString(dt.Rows[i][2]),
                                UploadPhoto = Convert.ToString(dt.Rows[i][3]),
                                JubliiType = Convert.ToString(dt.Rows[i][4])
                                //JubliiType = GetJubliiType(item.Ordination.Trim())
                            });
                        }
                    }
                }
                return Json(jubliiiData.Where(x => x.JubliiType != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        [NonAction]
        public string GetJubliiType(string date)
        {
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            DateTime dt = DateTime.ParseExact(date, "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Age = new DateTime((currentdate - dt).Ticks).Year - 1;

            if (Age == 25)
            {
                return @HomeController.GetControlTextByControlId("Silver Jubilee");
            }
            else if (Age == 50)
            {
                return @HomeController.GetControlTextByControlId("Golden Jubilee");
            }
            else if (Age == 75)
            {
                return @HomeController.GetControlTextByControlId("Platinum Jubilee"); 
            }
            else
            {
                return null;
            }

        }
        public JsonResult jubliiData1(string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var jubliiiData = new List<JubliiiData>();

            if (currentUser == "admin")
            {

                jubliiiData = GetJubliiiDatas(province);


                return Json(jubliiiData, JsonRequestBehavior.AllowGet);
            }


            var data = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.Ordination != ""
            && x.Ordination != null && x.ProvinceName == province)
                              .ToList();

            foreach (var item in data)
            {
                jubliiiData.Add(new JubliiiData
                {
                    Name = item.Knowname,
                    SurName = item.Baptismialname,
                    Date = item.Ordination,
                    JubliiType = GetJubliiType1(item.Ordination.Trim())
                });

            }

            return Json(jubliiiData.Where(x => x.JubliiType != null).ToList(), JsonRequestBehavior.AllowGet);

        }
        [NonAction]
        public string GetJubliiType1(string date)
        {
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            DateTime dt = DateTime.ParseExact(date, "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Age = new DateTime((currentdate - dt).Ticks).Year;
            if (Age == 25)
            {
                return @HomeController.GetControlTextByControlId("Silver Jubilee");
            }
            else if (Age == 50)
            {
                return @HomeController.GetControlTextByControlId("Golden Jubilee");
            }
            else if (Age == 75)
            {
                return @HomeController.GetControlTextByControlId("Platinum Jubilee");
            }
            else
            {
                return null;
            }
        }
        public JsonResult birthdayData()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var tblpersoneldata = dbcont.tbl_PersonalDetails.ToList();
            //List<birthdayData> alldata2 = new List<birthdayData>();
            //return Json(alldata2.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allbirthdata = dbcont.tbl_Primarydetails.Where(x => x.DOB != null).ToList();

                foreach (var item in allbirthdata)
                {
                    var data = item.DOB.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        var PersDtl = tblpersoneldata.Where(x => x.MemberID == item.MemberId).ToList();
                        if (PersDtl != null)
                        {
                            alldata.Add(new birthdayData
                            {
                                Name = PersDtl[0].Name + " " + PersDtl[0].SirName,
                                UploadPhoto = PersDtl[0].Spare1
                            });
                        }
                        else
                        {
                            alldata.Add(new birthdayData
                            {
                                Name = item.Knowname,
                                UploadPhoto = item.UploadPhoto
                            });
                        }

                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allbirthdata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.DOB != null).ToList();

                foreach (var item in allbirthdata)
                {
                    var data = item.DOB.Split('/');
                    if (/*data[0].TrimStart('0') == currentday.Day.ToString() &&*/ data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        //alldata.Add(new birthdayData
                        //{
                        //    Name = item.Knowname
                        //});
                        var PersDtl = tblpersoneldata.Where(x => x.MemberID == item.MemberId).ToList();
                        if (PersDtl != null)
                        {
                            alldata.Add(new birthdayData
                            {
                                Name = PersDtl[0].Name + " " + PersDtl[0].SirName,
                                UploadPhoto = PersDtl[0].Spare1
                            });
                        }
                        else
                        {
                            alldata.Add(new birthdayData
                            {
                                Name = item.Knowname,
                                UploadPhoto = item.UploadPhoto
                            });
                        }
                    }
                }

                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult birthdayData1(string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allbirthdata = dbcont.tbl_Primarydetails.Where(x => x.DOB != null && x.ProvinceName == province).ToList();

                foreach (var item in allbirthdata)
                {
                    if (item.DOB == "")
                    {
                        break;
                    }
                    var data = item.DOB.Split('/');
                    if (/*data[0].TrimStart('0') == currentday.Day.ToString() &&*/ data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        var PersDtl = personeldetails.Where(x => x.MemberID == item.MemberId).ToList();
                        if (PersDtl != null)
                        {
                            alldata.Add(new birthdayData
                            {
                                Name = PersDtl[0].Name + " " + PersDtl[0].SirName,
                                UploadPhoto = PersDtl[0].Spare1
                            });
                        }
                        else
                        {
                            alldata.Add(new birthdayData
                            {
                                Name = item.Knowname,
                                UploadPhoto = item.UploadPhoto
                            });
                        }

                    }

                }

                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allbirthdata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.DOB != null && x.ProvinceName == province).ToList();

                foreach (var item in allbirthdata)
                {
                    var data = item.DOB.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }

                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult feastdayData()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allfeastdata = dbcont.tbl_Primarydetails.Where(x => x.Feastday != null).ToList();

                foreach (var item in allfeastdata)
                {
                    var data = item.Feastday.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allfeastdata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.Feastday != null).ToList();

                foreach (var item in allfeastdata)
                {
                    var data = item.Feastday.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }

                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult feastdayData1(string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allfeastdata = dbcont.tbl_Primarydetails.Where(x => x.Feastday != null && x.ProvinceName == province).ToList();

                foreach (var item in allfeastdata)
                {
                    var data = item.Feastday.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allfeastdata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.Feastday != null && x.ProvinceName == province).ToList();

                foreach (var item in allfeastdata)
                {
                    var data = item.Feastday.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }

                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult ordinationData()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allordidata = dbcont.tbl_Primarydetails.Where(x => x.Ordination != null).ToList();

                foreach (var item in allordidata)
                {
                    var data = item.Ordination.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allordidata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.Ordination != null).ToList();

                foreach (var item in allordidata)
                {
                    var data = item.Ordination.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult ordinationData1(string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allordidata = dbcont.tbl_Primarydetails.Where(x => x.Ordination != null && x.ProvinceName == province).ToList();

                foreach (var item in allordidata)
                {
                    var data = item.Ordination.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<birthdayData> alldata = new List<birthdayData>();
                var allordidata = dbcont.tbl_Primarydetails.Where(x => x.CreatedBy == currentloginid && x.Ordination != null && x.ProvinceName == province).ToList();

                foreach (var item in allordidata)
                {
                    var data = item.Ordination.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new birthdayData
                        {
                            Name = item.Knowname
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult eternalData()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<eternalData> alldata = new List<eternalData>();
                var allDeathdata = dbcont.tbl_Passed.Where(x => x.Date != null).ToList();
                var PersonalDetail = dbcont.tbl_PersonalDetails.ToList();

                foreach (var item in allDeathdata)
                {
                    string[] data;
                    var deathdate = item.Date;
                    if (deathdate.Contains('-'))
                    {

                        data = deathdate.Split('-');
                    }
                    else
                    {
                        data = deathdate.Split('/');
                    }
                    //else

                    //var data = item.Date.Split('-');


                    var dt1 = PersonalDetail.Where(x => x.MemberID == item.MemberID).FirstOrDefault();
                    string Photo = "";
                    if (dt1 == null)
                    {

                    }
                    else
                    {
                        Photo = PersonalDetail.Where(x => x.MemberID == item.MemberID).FirstOrDefault().Spare1 == null ? "" : PersonalDetail.Where(x => x.MemberID == item.MemberID).FirstOrDefault().Spare1;
                    }
                    if (/*data[0].TrimStart('0') == currentday.Day.ToString() &&*/ data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            Name = item.Name,
                            UploadPhoto = Photo
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<eternalData> alldata = new List<eternalData>();
                var allDeathdata = dbcont.tbl_Passed.Where(x => x.CreatedBy == currentloginid && x.Date != null).ToList();
                var PersonalDetail = dbcont.tbl_PersonalDetails.ToList();

                foreach (var item in allDeathdata)
                {
                    var data = item.Date.Split('/');
                    string Photo = PersonalDetail.Where(x => x.MemberID == item.MemberID).FirstOrDefault().Spare1;
                    if (/*data[0].TrimStart('0') == currentday.Day.ToString() &&*/ data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            Name = item.Name,
                            UploadPhoto = Photo
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult eternalData1(string province)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                List<eternalData> alldata = new List<eternalData>();
                var allDeathdata = dbcont.tbl_Passed.Where(x => x.Date != null && x.ProvinceName == province).ToList();
                var PersonalDetail = dbcont.tbl_PersonalDetails.ToList();

                foreach (var item in allDeathdata)
                {
                    var data = item.Date.Split('/');
                    string Photo = PersonalDetail.Where(x => x.MemberID == item.MemberID).FirstOrDefault().Spare1;
                    if (/*data[0].TrimStart('0') == currentday.Day.ToString() &&*/ data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            Name = item.Name,
                            UploadPhoto = Photo
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentday = System.DateTime.Now;
                List<eternalData> alldata = new List<eternalData>();
                var allDeathdata = dbcont.tbl_Passed.Where(x => x.CreatedBy == currentloginid && x.Date != null && x.ProvinceName == province).ToList();

                var PersonalDetail = dbcont.tbl_PersonalDetails.ToList();

                foreach (var item in allDeathdata)
                {
                    var data = item.Date.Split('/');
                    string Photo = PersonalDetail.Where(x => x.MemberID == item.MemberID).FirstOrDefault().Spare1;
                    if (/*data[0].TrimStart('0') == currentday.Day.ToString() &&*/ data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            Name = item.Name,
                            UploadPhoto = Photo
                        });
                    }
                }
                return Json(alldata.Where(x => x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult CurrentNews()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            List<eternalData> alldata = new List<eternalData>();
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                var allDeathdata = dbcont.NewsLetter.Where(x => x.Date != null && x.NewsType == "News").ToList();
                foreach (var item in allDeathdata)
                {
                    var data = item.Date.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            Id = item.Id,
                            Title = item.Title,
                            Date = item.Date
                        });
                    }
                }
            }
            return Json(alldata.Where(x => x.Title != "").ToList(), JsonRequestBehavior.AllowGet);
        }
        public JsonResult NewsLetter()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            List<eternalData> alldata = new List<eternalData>();
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                var allDeathdata = dbcont.NewsLetter.Where(x => x.Date != null && x.NewsType == "NewsLetter").ToList();
                foreach (var item in allDeathdata)
                {
                    var data = item.Date.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            Id = item.Id,
                            Title = item.Title,
                            Date = item.Date
                        });
                    }
                }
            }
            return Json(alldata.Where(x => x.Title != "").ToList(), JsonRequestBehavior.AllowGet);
        }
        public JsonResult CircularData()
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            List<eternalData> alldata = new List<eternalData>();
            if (Session["username"].ToString() == "admin")
            {
                var currentday = System.DateTime.Now;
                var allDeathdata = dbcont.Circulars.Where(x => x.Date != null).ToList();
                foreach (var item in allDeathdata)
                {
                    var data = item.Date.Split('/');
                    if (data[0].TrimStart('0') == currentday.Day.ToString() && data[1].TrimStart('0') == currentday.Month.ToString())
                    {
                        alldata.Add(new eternalData
                        {
                            ProvinceName = item.ProvinceName,
                            Title = item.Title,
                            Date = item.Date
                        });
                    }
                }
            }
            return Json(alldata.Where(x => x.Title != "").ToList(), JsonRequestBehavior.AllowGet);
        }
        public ActionResult DeathRecord(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            tbl_Passed data = dbcont.tbl_Passed.FirstOrDefault(x => x.MemberID.ToString() == id);
            ViewBag.allData = dbcont.tbl_Passed.Where(x => x.MemberID == data.MemberID).ToList();
            ViewBag.MemberId = id;
            return View(data);
        }
        public ActionResult RetireRecord(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            tbl_Retirement data = dbcont.tbl_Retirement.FirstOrDefault(x => x.MemberID.ToString() == id);
            ViewBag.allData = dbcont.tbl_Retirement.Where(x => x.MemberID == data.MemberID).ToList();
            return View(data);
        }
        public ActionResult MemberDetails(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            tbl_Primarydetails data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == id);

            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == id);
            ViewBag.Name = pertionalInfo.Name;
            ViewBag.SurName = pertionalInfo.SirName;
            if (pertionalInfo != null)
            {
                ViewBag.Photo = pertionalInfo.Spare1;
            }
            ViewBag.MemberId = id.ToString();
            //return View(data);
            return View();
        }
        public JsonResult GetAllSaprationViewData()
        {
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_SeperationFromTheCongregation.Select(x => new { x.Name, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_SeperationFromTheCongregation.Where(x => x.ProvinceName == currentUser).Select(x => new { x.Name, x.MemberID, }).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult SaprationDetails(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            tbl_SeperationFromTheCongregation data = dbcont.tbl_SeperationFromTheCongregation.FirstOrDefault(x => x.MemberID.ToString() == id);
            ViewBag.allData = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == data.MemberID).ToList();
            return View(data);
        }
        public JsonResult GetTotalCountByProvince(string province)
        {
            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;

            if (province != "0")
            {
                var totalmember = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == province && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").Count();
                int AllInstituteCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Institution" && x.ProvinceName == province).Select(x => new { x.Id, x.EnterbyName, x.Name, x.Place, x.ProvinceName }).Count();
                int AllCommunityCount = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province).Count();
                int AllCongCount = db.Societys.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == province).Count();
                int AllProvinceCount = db.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == province).Count();
                int AllParishCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type.ToLower() == "Paris" && x.ProvinceName == province).Count();
                int AllRetirement = db.tbl_Retirement.Where(x => x.ProvinceName == province && x.Diedcheck == null && x.SapCheck == null && x.Archivecheck == null).Count();
                int AllPerpetualProfession = db.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17") && x.ProvinceName == province && x.Diedcheck == null && x.Sapcheck == null).Count();
                int AllDeathRecordCount = db.tbl_Passed.Where(x => x.ProvinceName == province).Count();
                int AllDepartCount = db.tbl_SeperationFromTheCongregation.Where(x => x.ProvinceName == province).Count();
                //var TotalNovandPP = dbcont.Tbl_formationsDetails.Where(x => x.ProvinceName == province && (x.StageOfFormation == "13" || x.StageOfFormation == "14") && x.Diedcheck == null && x.Sapcheck == null)
                //   .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();
                int TotalNovandPP = 0;
                var data2 = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.ProvinceName == province && x.Sapcheck == null && x.Archivecheck == null)
                .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

                foreach (var memberid in data2)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                        .ToList();
                        if (check2.Count() == 0)
                        {
                            TotalNovandPP += 1;
                        }

                    }
                }

                int TotalArchive = dbcont.tbl_Archive.Where(x => x.ProvinceName == province).Count();
                int TotalVowsRenewal = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == province && x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null)
                     .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();

                //var TotalEnterToNov = dbcont.Tbl_formationsDetails.Where(x => x.ProvinceName == province && (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                //  .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();

                int TotalEnterToNov = 0;
                var data = allTbl_formationsDetails.Where(x => x.Diedcheck == null && x.ProvinceName == province && x.Sapcheck == null && x.Archivecheck == null)
                .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
                        .ToList();


                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count() == 0)
                        {
                            TotalEnterToNov += 1;
                        }
                    }

                }


                GetTotalCountByProvinceViewModel getTotalCountByProvinceViewModel = new GetTotalCountByProvinceViewModel()
                {
                    TotalMember = totalmember,
                    TotalIns = AllInstituteCount,
                    TotalCom = AllCommunityCount,
                    TotalPro = AllProvinceCount,
                    TotalRet = AllRetirement,
                    TotalSoc = AllCongCount,
                    DepartedRecord = AllDeathRecordCount,
                    TotalTrust = AllParishCount,
                    AllPerpetualProfession = AllPerpetualProfession,
                    DeathRecord = AllDeathRecordCount,
                    AllDeparted = AllDepartCount,
                    TotalNovandPP = TotalNovandPP,
                    TotalArchive = TotalArchive,
                    TotalVowsRenewal = TotalVowsRenewal,
                    TotalEnterToNov = TotalEnterToNov

                };
                return Json(getTotalCountByProvinceViewModel, JsonRequestBehavior.AllowGet);
            }
            else if (province == "0")
            {
                //var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;

                var totalmember = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").Count();
                int AllInstituteCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count();
                int AllCommunityCount = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count();
                int AllCongCount = db.Societys.Where(x => x.ActiveCkeck == "Active").Count();
                int AllProvinceCount = db.tbl_Province.Where(x => x.ActiveCkeck == "Active").Count();
                int AllParishCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count();
                int AllRetirement = db.tbl_Retirement.Where(x => x.Diedcheck == null && x.SapCheck == null && x.Archivecheck == null).Count();
                int AllPerpetualProfession = db.Tbl_formationsDetails.Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null).Count();
                int AllDeathRecordCount = db.tbl_Passed.Count();
                int AllDepartCount = db.tbl_SeperationFromTheCongregation.Count();
                //var TotalNovandPP = dbcont.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "13" || x.StageOfFormation == "14") && x.Diedcheck == null && x.Sapcheck == null)
                //   .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();
                int TotalNovandPP = 0;
                var data2 = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

                foreach (var memberid in data2)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                        .ToList();
                        if (check2.Count() == 0)
                        {
                            TotalNovandPP += 1;
                        }

                    }
                }


                int TotalArchive = dbcont.tbl_Archive.Count();
                int TotalVowsRenewal = dbcont.Tbl_RenewalVows.Where(x => x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null)
                     .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();
                //var TotalEnterToNov = dbcont.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null)
                //  .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();
                // var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
                int TotalEnterToNov = 0;
                var data = allTbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
                        .ToList();


                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count() == 0)
                        {
                            TotalEnterToNov += 1;
                        }
                    }

                }


                GetTotalCountByProvinceViewModel getTotalCountByProvinceViewModel = new GetTotalCountByProvinceViewModel()
                {
                    TotalMember = totalmember,
                    TotalIns = AllInstituteCount,
                    TotalCom = AllCommunityCount,
                    TotalPro = AllProvinceCount,
                    TotalRet = AllRetirement,
                    TotalSoc = AllCongCount,
                    DepartedRecord = AllDeathRecordCount,
                    TotalTrust = AllParishCount,
                    AllPerpetualProfession = AllPerpetualProfession,
                    DeathRecord = AllDeathRecordCount,
                    AllDeparted = AllDepartCount,
                    TotalNovandPP = TotalNovandPP,
                    TotalArchive = TotalArchive,
                    TotalVowsRenewal = TotalVowsRenewal,
                    TotalEnterToNov = TotalEnterToNov

                };
                return Json(getTotalCountByProvinceViewModel, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var totalmember = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").Count();
                int AllInstituteCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count();
                int AllCommunityCount = db.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count();
                int AllCongCount = db.Societys.Where(x => x.ActiveCkeck == "Active").Count();
                int AllProvinceCount = db.tbl_Province.Where(x => x.ActiveCkeck == "Active").Count();
                int AllParishCount = db.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count();
                int AllRetirement = db.tbl_Retirement.Where(x => x.Diedcheck == null && x.SapCheck == null && x.Archivecheck == null).Count();
                int AllPerpetualProfession = db.Tbl_formationsDetails.Where(x => x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null).Count();
                int AllDeathRecordCount = db.tbl_Passed.Count();
                int AllDepartCount = db.tbl_SeperationFromTheCongregation.Count();
                var TotalNovandPP = dbcont.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "16" || x.StageOfFormation == "15" || x.StageOfFormation == "17") && x.Diedcheck == null && x.Sapcheck == null)
                   .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();
                int TotalArchive = dbcont.tbl_Archive.Count();
                int TotalVowsRenewal = dbcont.Tbl_RenewalVows.Where(x => x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null)
                     .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();
                var TotalEnterToNov = dbcont.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null)
                  .Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct().Count();

                GetTotalCountByProvinceViewModel getTotalCountByProvinceViewModel = new GetTotalCountByProvinceViewModel()
                {
                    TotalMember = totalmember,
                    TotalIns = AllInstituteCount,
                    TotalCom = AllCommunityCount,
                    TotalPro = AllProvinceCount,
                    TotalRet = AllRetirement,
                    TotalSoc = AllCongCount,
                    DepartedRecord = AllDeathRecordCount,
                    TotalTrust = AllParishCount,
                    AllPerpetualProfession = AllPerpetualProfession,
                    DeathRecord = AllDeathRecordCount,
                    AllDeparted = AllDepartCount,
                    TotalNovandPP = TotalNovandPP,
                    TotalArchive = TotalArchive,
                    TotalVowsRenewal = TotalVowsRenewal,
                    TotalEnterToNov = TotalEnterToNov

                };
                return Json(getTotalCountByProvinceViewModel, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetRenewvalVowsByProvince(string province, string name)
        {
            StringBuilder body = new StringBuilder();
            string currentUser = Convert.ToString(Session["loginuserid"]);
            var memberids = dbcont.Tbl_formationsDetails.Where(x => x.ProvinceName == province && x.StageOfFormation == "6").Select(x => x.MemberId).ToList();  // 17 -;//Perpetual Vows///now the value is 6
            var memberids_2 = dbcont.Tbl_formationsDetails.Where(x => x.ProvinceName == province && (x.StageOfFormation == "3" || x.StageOfFormation == "5")).Select(x => x.MemberId).ToList();  // 17 -;//Any Vows///now the value is 3,5
            var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null).ToList();

            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(province))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == province && !memberids.Contains(x.MemberID) && memberids_2.Contains(x.MemberID)).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(province))
                {

                    AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == province && !memberids.Contains(x.MemberID) && memberids_2.Contains(x.MemberID)).ToList();
                }
            }
            if (name != null && name != "null" && name != "" && name != "-- Select_Province_Name --")
                AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
            // var formation = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "14").ToList();
            var formation = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "15" && x.StageOfFormation != "17").ToList();

            // var GetforName = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == item.MemberID && x.StageOfFormation == "14").ToList();
            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);

#pragma warning disable CS0162 // Unreachable code detected
            int i = 1;
#pragma warning restore CS0162 // Unreachable code detected
            foreach (var item in AllMemberdata)
            {
                var GetName = formation.FirstOrDefault(x => x.MemberId == item.MemberID);
                //var GetName = formation.FirstOrDefault(x => x.Name.Contains(item.Name));
                if (GetName != null)
                {
                    body.Append("<tr>");
                    body.Append("<td>" + i + "</td>");
                    body.Append("<td style='display:none'>" + item.ProvinceName + "</td>");
                    body.Append("<td style='display:none'>" + item.MemberID + "</td>");
                    body.Append("<td>" + item.FileNo + "</td>");
                    body.Append("<td style='display:none'>" + item.CurrentStatus + "</td>");
                    body.Append("<td>" + item.Name + "</td>");
                    body.Append("<td><input type='text' class='renuedate' name='Surname' /></td>");
                    body.Append("<td><input type='text' class='datepicker hasDatepicker' name='Todate' /></td>");
                    body.Append("<td><input type='text' class= 'Superior'name='Superior' /></td>");
                    body.Append("<td><input type='text' class='Duration' name='Duration' /></td>");
                    body.Append("<td><input type='text' class='Witness' name='Witness' /></td>");
                    body.Append("<td><input type='checkbox' class='checkbox' id='PerCheck' value='True' name='Check' /></td>");
                    body.Append("<td><input type='file' name='MyImages' /></td>");
                    body.Append("</tr>");
                    i++;
                }
            }
            return Json(body.ToString(), JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetRenewvalVowsByProvince1(string province)
        {
            StringBuilder body = new StringBuilder();
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.Vowscheck == "yes" && x.VowsStatus == "14" && x.Sapcheck == null && x.Diedcheck == null).ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(province))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == province).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(province))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == province && x.ProvinceName == currentUser).ToList();
                }
            }

            var formation = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "15").ToList();
            int i = 1;
            foreach (var item in AllMemberdata)
            {
                var GetName = formation.FirstOrDefault(x => x.Name.Contains(item.Name));
                if (GetName != null)
                {

                    body.Append("<tr>");
                    body.Append("<td>" + i + "</td>");
                    body.Append("<td style='display:none'>" + item.ProvinceName + "</td>");
                    body.Append("<td style='display:none'>" + item.MemberID + "</td>");
                    body.Append("<td>" + item.FileNo + "</td>");
                    body.Append("<td style='display:none'>" + item.CurrentStatus + "</td>");
                    body.Append("<td>" + item.Name + "</td>");
                    body.Append("<td><input type='text' class='renuedate' name='Surname' /></td>");
                    body.Append("<td><input type='text' class='datepicker hasDatepicker' name='Todate' /></td>");
                    body.Append("<td><input type='text' class= 'Superior'name='Superior' /></td>");
                    body.Append("<td><input type='text' name='Duration' /></td>");
                    body.Append("<td><input type='text' class='Witness' name='Witness' /></td>");
                    body.Append("<td><input type='checkbox' class='checkbox' id='PerCheck' value='True' name='Check' /></td>");
                    body.Append("<td><input type='file' name='MyImages' /></td>");
                    body.Append("</tr>");
                    i++;
                }
            }
            return Json(body.ToString(), JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetGenFileNoByProvince(string province)
        {
            StringBuilder body = new StringBuilder();
            string currentUser = Convert.ToString(Session["username"]);

            var allProvince = dbcont.tbl_Province.ToList();
            // var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.GenFilecheck != "yes" && x.IsDeleted == false && x.Sapcheck == null && x.Diedcheck == null).ToList();
            var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.GenFileNo == null && x.IsDeleted == false && x.Sapcheck == null && x.Diedcheck == null).ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(province))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == province).ToList();
                }
            }
            else
            {
                AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == currentUser).ToList();
            }

            int i = 1;
            foreach (var item in AllMemberdata)
            {
                var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                var genFileNo = item.GenFileNo == null ? "" : item.GenFileNo;
                body.Append("<tr>");
                body.Append("<td>" + i + "</td>");
                body.Append("<td>" + provDetails.ProvinceName + "</td>");
                body.Append("<td>" + item.MemberID + "</td>");
                body.Append("<td>" + item.Name + "</td>");
                body.Append("<td>" + item.FileNo + "</td>");
                body.Append("<td><input type='text' name='GenFileNo' class='GenFileData'  value='" + genFileNo + "'/></td>");
                // body.Append("<td><input type='checkbox' class='checkbox' id='PerCheck' value='True' name='GenFilecheck' /></td>");
                //body.Append("<td style='display:none'><input type='checkbox' value='True' name='GenFilecheck' checked /></td>");
                body.Append("</tr>");
                i++;
            }
            return Json(body.ToString(), JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetManageArchiveFileNo(string province)
        {
            StringBuilder body = new StringBuilder();
            string currentUser = Convert.ToString(Session["username"]);
            var modelList = new List<ArchiveModel>();
            var allProvince = dbcont.tbl_Province.ToList();
            var allPersonal = dbcont.tbl_PersonalDetails.ToList();
            var allArchive = dbcont.tbl_Archive.ToList();
            var provincename = "";
            if (!string.IsNullOrEmpty(province))
            {
                provincename = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == province).ProvinceName.ToString();
            }
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(province))
                {
                    //var loadArchive = db.tbl_Archive.SelectMany(x => x.ProvinceName == province).ToList();
                    var model = (from m in allArchive
                                 where m.ProvinceName == provincename
                                 select new ArchiveModel
                                 {
                                     ArchiveId = m.Id.ToString(),
                                     ProvinceName = provincename,
                                     MemberID = m.MemberId,
                                     Name = m.Name,
                                     FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberId).FileNo,
                                     ArchiveNo = string.Empty,
                                 }).ToList();
                    modelList.AddRange(model);
                }
                else
                {
                    var model = (from m in allArchive
                                 select new ArchiveModel
                                 {
                                     ArchiveId = m.Id.ToString(),
                                     ProvinceName = m.ProvinceName,
                                     MemberID = m.MemberId,
                                     Name = m.Name,
                                     FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberId).FileNo,
                                     ArchiveNo = string.Empty,
                                 }).ToList();
                    modelList.AddRange(model);
                }
            }
            //else
            //{
            //    var model = (from m in allArchive
            //                 where m.ProvinceName == currentUser
            //                 select new ArchiveModel
            //                 {
            //ArchiveId = m.Id.ToString(),
            //                     ProvinceName = allProvince.FirstOrDefault(x => x.Id.ToString() == currentUser).ProvinceName,
            //                     MemberID = m.MemberId,
            //                     Name = m.Name,
            //                     FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberId).FileNo,
            //                     ArchiveNo = string.Empty,
            //                 }).ToList();
            //    modelList.AddRange(model);
            //}

            int i = 1;
            foreach (var item in modelList)
            {
                // var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                //   var genFileNo = item.GenFileNo == null ? "" : item.GenFileNo;
                var archNo = allArchive.FirstOrDefault(x => x.MemberId == item.MemberID) == null ? "" : allArchive.FirstOrDefault(x => x.MemberId == item.MemberID).ArchiveNo;
                body.Append("<tr>");
                body.Append("<td>" + i + "</td>");
                body.Append("<td>" + item.ProvinceName + "</td>");
                body.Append("<td>" + item.MemberID + "</td>");
                body.Append("<td>" + item.Name + "</td>");
                body.Append("<td>" + item.FileNo + "</td>");
                body.Append("<td>" + archNo + "</td>");
                body.Append("<td><button><i style='font-size:12px' color:'#29b2e1' cursor:'pointer' data - val = '" + item.ArchiveId + "' class='fa fa-edit ArcFileEdit' onclick='showEdit(" + item.ArchiveId + ");'></i></button></td>");
                body.Append("</tr>");
                i++;
            }
            return Json(body.ToString(), JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetManageGenFileNo(string province)
        {
            StringBuilder body = new StringBuilder();
            string currentUser = Convert.ToString(Session["username"]);
            var modelList = new List<GeneralFileNoModel>();
            var allProvince = dbcont.tbl_Province.ToList();
            var allPersonal = dbcont.tbl_PersonalDetails.ToList();
            var allGeneralateFileNo = dbcont.GeneralateFileNo.ToList();
            var provincename = "";
            if (!string.IsNullOrEmpty(province))
            {
                provincename = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == province).ProvinceName.ToString();
            }
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(province))
                {
                    //var loadArchive = db.tbl_Archive.SelectMany(x => x.ProvinceName == province).ToList();
                    var model = (from m in allGeneralateFileNo
                                 where m.ProvinceName.ToLower() == provincename.ToLower()
                                 select new GeneralFileNoModel
                                 {
                                     GenNoId = m.Id.ToString(),
                                     ProvinceName = provincename,
                                     MemberID = m.MemberId,
                                     Name = m.Name,
                                     FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberId).FileNo,
                                     GenFileNo = m.GenFileNo,
                                 }).ToList();
                    modelList.AddRange(model);
                }
                else
                {
                    var model = (from m in allGeneralateFileNo
                                 select new GeneralFileNoModel
                                 {
                                     GenNoId = m.Id.ToString(),
                                     ProvinceName = m.ProvinceName,
                                     MemberID = m.MemberId,
                                     Name = m.Name,
                                     FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberId) == null ? string.Empty : allPersonal.FirstOrDefault(x => x.MemberID == m.MemberId).FileNo,
                                     GenFileNo = m.GenFileNo,
                                 }).ToList();
                    modelList.AddRange(model);
                }
            }


            int i = 1;
            foreach (var item in modelList)
            {
                // var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                //   var genFileNo = item.GenFileNo == null ? "" : item.GenFileNo;
                var genNo = allGeneralateFileNo.FirstOrDefault(x => x.MemberId == item.MemberID) == null ? "" : allGeneralateFileNo.FirstOrDefault(x => x.MemberId == item.MemberID).GenFileNo;
                body.Append("<tr>");
                body.Append("<td>" + i + "</td>");
                body.Append("<td>" + item.ProvinceName + "</td>");
                body.Append("<td>" + item.MemberID + "</td>");
                body.Append("<td>" + item.Name + "</td>");
                body.Append("<td>" + item.FileNo + "</td>");
                body.Append("<td>" + genNo + "</td>");
                body.Append("<td><button><i style='font-size:12px' color:'#29b2e1' cursor:'pointer' data - val = '" + item.GenNoId + "'  class='fa fa-edit GenFileEdit' onClick='manageEdit(" + item.GenNoId + ");'></i></button></td>");
                body.Append("</tr>");
                i++;
            }
            return Json(body.ToString(), JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetArchiveNoByProvince(string province)
        {
            StringBuilder body = new StringBuilder();
            string currentUser = Convert.ToString(Session["username"]);
            var modelList = new List<ArchiveModel>();
            var allProvince = dbcont.tbl_Province.ToList();
            var allPersonal = dbcont.tbl_PersonalDetails.ToList();
            var allArchive = dbcont.tbl_Archive.ToList();

            var SeperationFromTheCongregation = dbcont.tbl_SeperationFromTheCongregation.ToList();
            var Passed = dbcont.tbl_Passed.ToList();

            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(province))
                {
                    var model = (from m in SeperationFromTheCongregation
                                 where m.ProvinceName == province
                                 && !allArchive.Any(x => x.MemberId == m.MemberID)
                                 select new ArchiveModel
                                 {
                                     ProvinceName = allProvince.FirstOrDefault(x => x.Id.ToString() == province).ProvinceName,
                                     MemberID = m.MemberID,
                                     Name = m.Name,
                                     FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberID).FileNo,
                                     ArchiveNo = string.Empty,
                                 }).ToList();
                    modelList.AddRange(model);
                    model = (from m in Passed
                             where m.ProvinceName == province
                             && !allArchive.Any(x => x.MemberId == m.MemberID)
                             select new ArchiveModel
                             {
                                 ProvinceName = allProvince.FirstOrDefault(x => x.Id.ToString() == province).ProvinceName,
                                 MemberID = m.MemberID,
                                 Name = m.Name,
                                 FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberID).FileNo,
                                 ArchiveNo = string.Empty,
                             }).ToList();
                    modelList.AddRange(model);
                }
            }
            else
            {
                //AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == currentUser).ToList();
                var model = (from m in SeperationFromTheCongregation
                             where m.ProvinceName == currentUser
                             && !allArchive.Any(x => x.MemberId == m.MemberID)
                             select new ArchiveModel
                             {
                                 ProvinceName = allProvince.FirstOrDefault(x => x.Id.ToString() == currentUser).ProvinceName,
                                 MemberID = m.MemberID,
                                 Name = m.Name,
                                 FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberID).FileNo,
                                 ArchiveNo = string.Empty,
                             }).ToList();
                modelList.AddRange(model);
                model = (from m in Passed
                         where m.ProvinceName == currentUser
                         && !allArchive.Any(x => x.MemberId == m.MemberID)
                         select new ArchiveModel
                         {
                             ProvinceName = allProvince.FirstOrDefault(x => x.Id.ToString() == currentUser).ProvinceName,
                             MemberID = m.MemberID,
                             Name = m.Name,
                             FileNo = allPersonal.FirstOrDefault(x => x.MemberID == m.MemberID).FileNo,
                             ArchiveNo = string.Empty,
                         }).ToList();
                modelList.AddRange(model);
            }



            //var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Sapcheck == null && x.Diedcheck == null).ToList();
            //if (Session["username"].ToString() == "admin")
            //{
            //    if (!string.IsNullOrEmpty(province))
            //    {
            //        AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == province).ToList();
            //    }
            //}
            //else
            //{
            //    AllMemberdata = AllMemberdata.Where(x => x.ProvinceName == currentUser).ToList();
            //}



            int i = 1;
            foreach (var item in modelList)
            {
                // var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                //   var genFileNo = item.GenFileNo == null ? "" : item.GenFileNo;
                var archNo = allArchive.FirstOrDefault(x => x.MemberId == item.MemberID) == null ? "" : allArchive.FirstOrDefault(x => x.MemberId == item.MemberID).ArchiveNo;
                body.Append("<tr>");
                body.Append("<td>" + i + "</td>");
                body.Append("<td>" + item.ProvinceName + "</td>");
                body.Append("<td>" + item.MemberID + "</td>");
                body.Append("<td>" + item.Name + "</td>");
                body.Append("<td>" + item.FileNo + "</td>");
                body.Append("<td><input type='text' name='ArchiveNo'  value='" + archNo + "'/></td>");
                body.Append("</tr>");
                i++;
            }
            return Json(body.ToString(), JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public JsonResult AddGeneralFileNo(data data)
        {
            if (data != null)
            {
                string url = this.Request.UrlReferrer.AbsoluteUri;
                try
                {
                    var genFileNo = dbcont.GeneralateFileNo.FirstOrDefault(x => x.MemberId == data.MemberId);
                    if (genFileNo != null)
                    {
                        genFileNo.GenFileNo = data.GenFileNo;
                        dbcont.SaveChanges();

                    }
                    else
                    {
                        GeneralateFileNo GeneralatefileNo = new GeneralateFileNo()
                        {
                            ProvinceName = data.ProvinceName,
                            MemberId = data.MemberId,
                            Name = data.Name,
                            ProFileNo = data.ProFileNo,
                            GenFileNo = data.GenFileNo,
                            GenFilecheck = "yes"
                            // GenFilecheck = data.IsChecked
                        };
                        GeneralatefileNo.CreatedBy = Convert.ToString(Session["loginuserid"]);
                        dbcont.GeneralateFileNo.Add(GeneralatefileNo);
                        dbcont.SaveChanges();
                    }

                    //todo
                    //string[] names = GeneralatefileNo.Name.Split(' ');
                    //string name = names[0];
                    //var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.Name.Contains(name));
                    //if (dataUpdate != null)
                    //{
                    //    dataUpdate.GenFileNo = GeneralatefileNo.GenFileNo;
                    //    dataUpdate.GenFilecheck = GeneralatefileNo.GenFilecheck;
                    //    dbcont.SaveChanges();
                    //}

                    //newly added
                    var dataUpdate = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == data.MemberId);
                    if (dataUpdate != null)
                    {
                        dataUpdate.GenFileNo = data.GenFileNo;
                        dataUpdate.GenFilecheck = "yes";
                        dbcont.SaveChanges();
                    }
                    setcookies("201");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                catch (Exception)
                {
                    setcookies("204");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                    throw;
                }
            }
            return null;
        }

        [HttpPost]
        public JsonResult AddArchiveNo(data data)
        {
            if (data != null)
            {
                string url = this.Request.UrlReferrer.AbsoluteUri;
                try
                {
                    var objArchive = dbcont.tbl_Archive.FirstOrDefault(x => x.MemberId == data.MemberId);
                    if (objArchive != null)
                    {
                        objArchive.ArchiveNo = data.ArchiveNo;
                        objArchive.UpdateDate = DateTime.Now.ToString();
                        objArchive.UpdateBy = Convert.ToString(Session["loginuserid"]);
                        dbcont.SaveChanges();

                    }
                    else
                    {
                        tbl_Archive Archive = new tbl_Archive()
                        {
                            ProvinceName = data.ProvinceName,
                            MemberId = data.MemberId,
                            Name = data.Name,
                            FileNo = data.ProFileNo,
                            ArchiveNo = data.ArchiveNo,
                            Archivecheck = "yes"
                            // GenFilecheck = data.IsChecked
                        };
                        Archive.CreatedDate = DateTime.Now.ToString();
                        Archive.CreatedBy = Convert.ToString(Session["loginuserid"]);
                        dbcont.tbl_Archive.Add(Archive);
                        dbcont.SaveChanges();
                    }

                    setcookies("201");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                catch (Exception)
                {
                    setcookies("204");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                    throw;
                }
            }
            return null;
        }

        public JsonResult GetGenfileNo1(string id)
        {
            try
            {
                var renewal = dbcont.GeneralateFileNo.FirstOrDefault(e => e.Id.ToString() == id);
                if (renewal != null)
                {
                    return Json(renewal, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("NoRecord", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> UpdateGeneralFileNo(GeneralateFileNo GeneralateFileNo)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var existingobj = dbcont.GeneralateFileNo.FirstOrDefault(e => e.Id == GeneralateFileNo.Id);
                if (existingobj != null)
                {
                    GeneralateFileNo.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(GeneralateFileNo);
                    dbcont.SaveChanges();
                }
                string[] names = GeneralateFileNo.Name.Split(',');
                string name = names[0];
                var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.Name.Contains(name));
                if (dataUpdate != null)
                {
                    dataUpdate.GenFileNo = GeneralateFileNo.GenFileNo;
                    dataUpdate.GenFilecheck = GeneralateFileNo.GenFilecheck;
                    dbcont.SaveChanges();
                }

                setcookies("201");
                //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

            }
            catch (Exception ex)
            {
                setcookies("204");
                // return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw new Exception(ex.Message, ex);
            }
            return Json(true, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public ActionResult AddCirculardata(Circulars circulars, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Circular"), fileName);
                        File.SaveAs(path);
                        circulars.File = fileName;
                    }
                }
                circulars.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.Circulars.Add(circulars);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetCircularById(int id)
        {
            try
            {
                var genFormation = dbcont.Circulars.FirstOrDefault(e => e.Id == id);
                if (genFormation != null)
                {
                    return Json(genFormation, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult UpdateCircular(Circulars Circulars, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.Circulars.FirstOrDefault(e => e.Id == Circulars.Id);
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Circular"), fileName);
                        File.SaveAs(path);
                        Circulars.File = fileName;
                    }
                }
                else
                {
                    Circulars.File = existingobj.File;
                }
                if (existingobj != null)
                {
                    Circulars.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(Circulars);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult CircularDelete(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var congRecord = db.Circulars.FirstOrDefault(e => e.Id.ToString() == id);
                if (congRecord != null)
                {
                    db.Circulars.Remove(congRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult AddNewsdata(NewsLetter NewsLetter, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/NewsLetter"), fileName);
                        File.SaveAs(path);
                        NewsLetter.File = fileName;
                    }
                }
                NewsLetter.CreatedBy = Convert.ToString(Session["loginuserid"]);
                db.NewsLetter.Add(NewsLetter);
                db.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetNewsById(int id)
        {
            try
            {
                var genFormation = dbcont.NewsLetter.FirstOrDefault(e => e.Id == id);
                if (genFormation != null)
                {
                    return Json(genFormation, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult UpdateNews(NewsLetter NewsLetter, HttpPostedFileBase File)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = db.NewsLetter.FirstOrDefault(e => e.Id == NewsLetter.Id);
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/NewsLetter"), fileName);
                        File.SaveAs(path);
                        NewsLetter.File = fileName;
                    }
                }
                else
                {
                    NewsLetter.File = existingobj.File;
                }
                if (existingobj != null)
                {
                    NewsLetter.CreatedBy = existingobj.CreatedBy;
                    db.Entry(existingobj).CurrentValues.SetValues(NewsLetter);
                    db.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult NewsDelete(string id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var congRecord = db.NewsLetter.FirstOrDefault(e => e.Id.ToString() == id);
                if (congRecord != null)
                {
                    db.NewsLetter.Remove(congRecord);
                    db.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public void WriteLanguageFile()
        {
            var currentLang = Session["Language"];
            var allLanguage = dbcont.Tbl_MultiLanguage.Where(x => x.Language == currentLang.ToString()).ToList();

            string fileName = Server.MapPath("\\MultiLanguage\\MultiLanguage.js");
            FileInfo fi = new FileInfo(fileName);

            try
            {
                // Check if file already exists. If yes, delete it.     
                if (fi.Exists)
                {
                    fi.Delete();
                }

                // Create a new file     
                using (StreamWriter sw = fi.CreateText())
                {
                    var fileData = JsonConvert.SerializeObject(allLanguage);
                    sw.WriteLine(fileData);
                }
            }
            catch (Exception Ex)
            {
                Console.WriteLine(Ex.ToString());
            }
        }
        public static string GetControlTextByControlId(string controlId, string pageName = "")
        {
            string controlText = controlId;
            string langCode;
            GeneralDBContext context = new GeneralDBContext();
            langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);
            if (langCode == null || langCode == "")
            {
                var languagecode = context.Tbl_Languagesetting.FirstOrDefault(x => x.Active == "1");
                langCode = languagecode.LanguageCode;
            }
            List<MultiLanguage> allLangs = System.Web.HttpContext.Current.Session["Language"] as List<MultiLanguage>;
            if (allLangs != null)
            {
                var lang = allLangs.FirstOrDefault(x => x.ControlId == controlId);
                if (lang != null)
                {
                    if (langCode == "EN")
                    {
                        controlText = lang.ControlText;
                    }
                    else if (langCode == "FN")
                    {
                        controlText = lang.FranchText;
                    }
                    else if (langCode == "SP")
                    {
                        controlText = lang.SpanishText;
                    }
                    else if (langCode == "IT")
                    {
                        controlText = lang.ItalyText;
                    }
                    else if (langCode == "GR")
                    {
                        controlText = lang.GermanText;
                    }
                }
                else
                {
                    List<DataListItems> allListItems = System.Web.HttpContext.Current.Session["DataItems"] as List<DataListItems>;
                    if (controlText != null)
                    {
                        var langu = allListItems?.FirstOrDefault(x => x.DataListName == pageName && x.Name.ToLower().Equals(controlText.ToLower()));
                        if (langu != null)
                        {
                            if (langCode == "EN")
                            {
                                controlText = langu.Name;

                            }
                            else
                            {
                                controlText = langu.Name_French;
                            }
                        }
                    }

                }
            }
            return controlText;
        }

        public string GetTextValue(string controlText, string PageName)
        {
            string langCode = Convert.ToString(System.Web.HttpContext.Current.Session["CurrentLang"]);
            var lang = dbcont.DataListItems.Where(x => x.DataListName == PageName && x.Name.ToLower().Equals(controlText.ToLower())).FirstOrDefault();
            if (lang != null)
            {
                if (langCode == "EN")
                {
                    controlText = lang.Name;
                }
                else
                {
                    controlText = lang.Name_French;
                }
            }
            return controlText;
        }

        public JsonResult GetAllbeforprofess()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.tbl_Passed
                .Where(x => x.CurrentStatusFor == "11" || x.CurrentStatusFor == "12" || x.CurrentStatusFor == "13" || x.CurrentStatusFor == "14")
                .Select(x => new { x.Name, x.SirName, x.CurrentStatusFor, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.tbl_Passed
                .Where(x => (x.CurrentStatusFor == "11" || x.CurrentStatusFor == "12" || x.CurrentStatusFor == "13" || x.CurrentStatusFor == "14") && x.ProvinceName == currentUser)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllafterprofess()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.tbl_Passed
                .Where(x => x.CurrentStatusFor == "15" || x.CurrentStatusFor == "16" || x.CurrentStatusFor == "17" || x.CurrentStatusFor == "18" || x.CurrentStatusFor == "19")
                .Select(x => new { x.Name, x.SirName, x.CurrentStatusFor, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.tbl_Passed
                .Where(x => (x.CurrentStatusFor == "15" || x.CurrentStatusFor == "16" || x.CurrentStatusFor == "17" || x.CurrentStatusFor == "18" || x.CurrentStatusFor == "19") && x.ProvinceName == currentUser)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllbeforprofessById1(string id)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                .Where(x => x.StageOFFormation == "11" || x.StageOFFormation == "12" || x.StageOFFormation == "13" || x.StageOFFormation == id)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                .Where(x => (x.StageOFFormation == "11" || x.StageOFFormation == "12" || x.StageOFFormation == "13" || x.StageOFFormation == id) && x.ProvinceName == currentUser)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllafterprofessById1(string id)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                .Where(x => x.StageOFFormation == "15" || x.StageOFFormation == "16" || x.StageOFFormation == "17" || x.StageOFFormation == id)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                .Where(x => (x.StageOFFormation == "15" || x.StageOFFormation == "16" || x.StageOFFormation == "17" || x.StageOFFormation == id) && x.ProvinceName == currentUser)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllNovOnly(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();
            foreach (var memberid in data)
            {
                var check = allTbl_formationsDetails.Where(x => x.MemberId == memberid.MemberId)
                .Where(x => x.StageOfFormation != "14" && x.StageOfFormation != "13").ToList();

                if (check.Count() != 0)
                {
                    var data1 = allTbl_formationsDetails.Where(x => x.MemberId == memberid.MemberId)
                    .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName, Createdby = x.CreatedBy }).FirstOrDefault();
                    allRecords.Add(data1);
                }
            }

            if (Session["username"].ToString() == "admin")
            {
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }

                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecords1, JsonRequestBehavior.AllowGet);
            }

            //string currentUser = Convert.ToString(Session["username"]);
            //string currentloginid = Convert.ToString(Session["loginuserid"]);
            //if (Session["username"].ToString() == "admin")
            //{
            //    var personalDetails = dbcont.Tbl_formationsDetails
            //    .Where(x => (x.StageOfFormation == "Novitiate2ndY") && x.Diedcheck != "Active" && x.Sapcheck != "Active" && x.ProvinceName == province)
            //    .ToList().Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct();
            //    return Json(personalDetails, JsonRequestBehavior.AllowGet);
            //}
            //else
            //{
            //    var personalDetails = dbcont.Tbl_formationsDetails
            //    .Where(x => x.StageOfFormation == "Novitiate2ndY" && x.Diedcheck != "Active" && x.Sapcheck != "Active" && x.CreatedBy == currentloginid)
            //    .ToList().Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct();
            //    return Json(personalDetails, JsonRequestBehavior.AllowGet);
            //}
        }
        public JsonResult GetAllPeofessedOnly()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.Tbl_formationsDetails
                .Where(x => (x.StageOfFormation == "15" || x.StageOfFormation == "17") && x.Diedcheck != "Active" && x.Sapcheck != "Active" && x.Archivecheck == null)
                .ToList().Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.Tbl_formationsDetails
                .Where(x => (x.StageOfFormation == "15" || x.StageOfFormation == "17") && x.Diedcheck != "Active" && x.Sapcheck != "Active" && x.ProvinceName == currentUser)
               .ToList().Select(x => new { x.Name, x.MemberId, x.ProvinceName }).Distinct();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllNovitiateById(string id)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);

            var allTbl_RenewalVows = dbcont.Tbl_RenewalVows;
            List<VowsMember> allRecords = new List<VowsMember>();
            var data = dbcont.Tbl_RenewalVows.Where(x => x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null && x.CurrentStatus == id)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();
            foreach (var memberid in data)
            {
                var data1 = allTbl_RenewalVows
                    .Where(x => x.MemberId == memberid.MemberId)
                    .Select(x => new VowsMember { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName, Createdby = x.CreatedBy }).FirstOrDefault();
                allRecords.Add(data1);

            }

            if (Session["username"].ToString() == "admin")
            {
                allRecords = allRecords.ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecords1, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllFProfessionById(string id)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);

            var allTbl_RenewalVows = dbcont.Tbl_RenewalVows;
            List<VowsMember> allRecords = new List<VowsMember>();
            var data = dbcont.Tbl_RenewalVows.Where(x => x.DeathCheck == null && x.SapCheck == null && x.Archivecheck == null && x.CurrentStatus == id)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();
            foreach (var memberid in data)
            {
                var data1 = allTbl_RenewalVows
                    .Where(x => x.MemberId == memberid.MemberId)
                    .Select(x => new VowsMember { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName, Createdby = x.CreatedBy }).FirstOrDefault();
                allRecords.Add(data1);

            }

            if (Session["username"].ToString() == "admin")
            {
                allRecords = allRecords.ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                return Json(allRecords1, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetallMemberName(string name)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.IsDeleted == false && x.Sapcheck == null && x.Diedcheck == null).ToList();
            if (Session["username"].ToString() == "admin")
            {
                string[] fname = name.Split();
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name.Contains(fname[0])).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                string[] fname = name.Split();
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name.Contains(fname[0]) && x.ProvinceName == currentUser).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetallInstituteData(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active").ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetallParishData(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active").ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetallDataNovPP(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "17" || x.StageOfFormation == "16").ToList();
            if (Session["username"].ToString() == "admin")
            {
                string[] fname = name.Split();
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name.Contains(fname[0])).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                string[] fname = name.Split();
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name.Contains(fname[0]) && x.ProvinceName == currentUser && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "17" || x.StageOfFormation == "16")).ToList();
                }
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetallDataEnterToNov(string name)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            List<Formationmembers> allRecords = new List<Formationmembers>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();
            foreach (var memberid in data)
            {
                var check = allTbl_formationsDetails
                    .Where(x => x.MemberId == memberid.MemberId)
                    .Where(x => x.StageOfFormation != "11" && x.StageOfFormation != "12")
                    .ToList();
                if (check.Count() == 0)
                {
                    var data1 = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Select(x => new Formationmembers { Name = x.Name, MemberId = x.MemberId, ProvinceName = x.ProvinceName, Createdby = x.CreatedBy }).FirstOrDefault();
                    allRecords.Add(data1);
                }
            }

            string[] fname = name.Split();
            if (!string.IsNullOrEmpty(name))
            {
                allRecords = allRecords.Where(x => x.Name.Contains(fname[0])).Distinct().ToList(); ;
            }
            return Json(allRecords, JsonRequestBehavior.AllowGet);

        }
        public JsonResult GetallDataComm(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.CongregationName == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.CongregationName == name && x.ProvinceName == currentUser).ToList();
                }
            }

            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallDataSoc(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.NameOfTheSocity == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.NameOfTheSocity == name && x.ProvinceName == currentUser).ToList();
                }
            }
            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallDataeternal(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.tbl_Passed.ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }
            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallDataOrdin(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = db.Tbl_formationsDetails.Where(x => x.StageOfFormation == "17").Select(x => new { x.ProvinceName, x.Name, x.MemberId, x.CreatedBy, }).ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }

            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallDataRetire(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = db.tbl_Retirement.ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }

            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallDataDeath(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.tbl_Passed.ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }

            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallDataDepart(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }

            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallVowsByName(string name)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var AllMemberdata = dbcont.Tbl_RenewalVows.ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }
            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetallArchiveByName(string name)
        {
            string currentUser = Convert.ToString(Session["username"]);
            string loginuserid = Convert.ToString(Session["loginuserid"]);
            var AllMemberdata = dbcont.tbl_Archive.ToList();
            if (Session["username"].ToString() == "admin")
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name).ToList();
                }
            }
            else
            {
                if (!string.IsNullOrEmpty(name))
                {
                    AllMemberdata = AllMemberdata.Where(x => x.Name == name && x.ProvinceName == currentUser).ToList();
                }
            }

            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllProvinceNewForTransfer()
        {
            string currentUser = Convert.ToString(Session["username"]);

            Uri myUri = new Uri(this.Request.UrlReferrer.AbsoluteUri);
            string param1 = HttpUtility.ParseQueryString(myUri.Query).Get("myId"); // current provinceid

            var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.MyId != param1)
                                  .Select(x => new { x.ProvinceName, x.MyId, x.Place }).ToList();
            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult ChangeLanguage(string lang)
        {
            //Session["Language"] = string.Empty;
            Session["CurrentLang"] = lang;
            //Session["Language"] = dbcont.Tbl_MultiLanguage.ToList();

            var data = dbcont.Tbl_Languagesetting.FirstOrDefault(x => x.LanguageCode == lang);
            if (data != null)
            {
                var activelang = dbcont.Tbl_Languagesetting.FirstOrDefault(x => x.Active == "1");
                if (activelang != null)
                {
                    activelang.Active = "0";
                    dbcont.Entry(activelang).CurrentValues.SetValues(activelang);
                    dbcont.SaveChanges();
                }
                data.Active = "1";
                dbcont.Entry(data).CurrentValues.SetValues(data);
                dbcont.SaveChanges();
            }

            return Json("ok", JsonRequestBehavior.AllowGet);
        }
        public FileResult DownloadEncrFile(string filename)
        {
            string fileAddress = Server.MapPath(@"\EncryptionFiles\" + filename);
            byte[] data = System.IO.File.ReadAllBytes(fileAddress);
            return File(data, "text/plain", filename);
        }
        public JsonResult CheckLogin(string username, string password)
        {
            var data = dbcont.Tbl_UserLogins.FirstOrDefault(x => x.LoginUserName == username && x.UserPassword == password);
            if (data != null)
            {
                return Json("200", JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("201", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetMemberAndDesignationsList()
        {
            MemberAndDesignationsListViewModel data = new MemberAndDesignationsListViewModel();
            List<string> allDesignationList = new List<string>();

            if (Convert.ToString(Session["username"]) == "admin")
            {
                var allMember = dbcont.tbl_PersonalDetails;
                List<string> allmemberList = new List<string>();
                foreach (var item in allMember)
                {
                    allmemberList.Add(item.Name + " " + item.SirName);
                }
                data.Members = allmemberList;
            }
            else
            {
                var usr = Convert.ToString(Session["loginuserid"]);
                var allMember = dbcont.tbl_PersonalDetails.Where(x => x.CreatedBy == usr);
                List<string> memberList = new List<string>();
                foreach (var item in allMember)
                {
                    memberList.Add(item.Name + " " + item.SirName);
                }
                data.Members = memberList;
            }

            var allDesignation = dbcont.Tbl_DesignationDetails.Where(x => x.DataListName == "Provience Designation" && x.DesignationType == "Commission").OrderBy(x => x.Name).ToList();
            foreach (var item in allDesignation)
            {
                allDesignationList.Add(item.Name);
            }
            data.Designations = allDesignationList;
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetMemberAndDesignationsList2()
        {
            MemberAndDesignationsListViewModel data = new MemberAndDesignationsListViewModel();
            List<string> allDesignationList = new List<string>();

            if (Convert.ToString(Session["username"]) == "admin")
            {
                var allMember = dbcont.tbl_PersonalDetails;
                List<string> allmemberList = new List<string>();
                foreach (var item in allMember)
                {
                    allmemberList.Add(item.Name + " " + item.SirName);
                }
                data.Members = allmemberList;
            }
            else
            {
                var loginuserid = Convert.ToString(Session["loginuserid"]);
                var allMember = dbcont.tbl_PersonalDetails.Where(x => x.CreatedBy == loginuserid).ToList();
                List<string> memberList = new List<string>();
                foreach (var item in allMember)
                {
                    memberList.Add(item.Name + " " + item.SirName);
                }
                data.Members = memberList;
            }

            var allDesignation = dbcont.Tbl_DesignationDetails.Where(x => x.DataListName == "General Designation" && x.DesignationType == "Commission").OrderBy(x => x.Name).ToList();
            foreach (var item in allDesignation)
            {
                allDesignationList.Add(item.Name);
            }
            data.Designations = allDesignationList;
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        #region Calender Events
        public ActionResult GetEvents()
        {
            return View();
        }
        public JsonResult GetEventLists()
        {
            List<Event> events = new List<Event>();
            var allCalenderEvents = dbcont.Tbl_Calender.Where(x => x.FromDate != null && x.ToDate != null).ToList();
            foreach (var item in allCalenderEvents)
            {
                events.Add(new Event
                {
                    EventID = item.Id,
                    Description = item.GenName,
                    Subject = item.Event,
                    Start = Convert.ToDateTime(item.FromDate),
                    End = Convert.ToDateTime(item.ToDate),
                    ThemeColor = "green",
                    IsFullDay = true
                });
            }

            return new JsonResult { Data = events, JsonRequestBehavior = JsonRequestBehavior.AllowGet };
        }
        ///// province dropdown
        public JsonResult GetAllProvinceCommi()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceCouncil()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName)
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName)
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceOffice()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceVowsRenewal1()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProvinceVowsRenewal1(string id)
        {
            var AllMemberdata = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == id && x.Vowscheck == null && x.Diedcheck == null && x.Sapcheck == null).Select(x => new { x.Name, x.MemberID }).ToList();
            var memberids = dbcont.Tbl_formationsDetails.Where(x => x.ProvinceName == id && x.StageOfFormation == "17").Select(x => x.MemberId);  // 17 -;//Perpetual Vows
            AllMemberdata = AllMemberdata.Where(x => !memberids.Contains(x.MemberID)).ToList();
            return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllProvinceHVistLive()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceTransfer()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceCommunity()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceInstitution()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceSociety()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceTrustmenu()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllProvinceStaff()
        {
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place })
                                 .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = db.tbl_Province
                         .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
                          .Select(x => new { x.ProvinceName, x.Id, x.Place })
                         .ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }

        public class Event
        {
            public int EventID { get; set; }
            public string Subject { get; set; }
            public string Description { get; set; }
            public System.DateTime Start { get; set; }
            public Nullable<System.DateTime> End { get; set; }
            public string ThemeColor { get; set; }
            public bool IsFullDay { get; set; }
        }
        #endregion
        public ActionResult LoggingTrack(string userId)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            var lT = new List<LoggingTrack>();
            if (!string.IsNullOrEmpty(userId))
            {
                lT = dbcont.Tbl_LoggingTrack.Where(x => x.CreatedBy.ToString() == userId).ToList();
            }
            else
            {
                lT = dbcont.Tbl_LoggingTrack.ToList();
            }
            var allLogin = dbcont.Tbl_UserLogins.ToList();
            List<LoggingTrack> lt = new List<LoggingTrack>();
            foreach (var item in lT)
            {
                var cY = allLogin.FirstOrDefault(x => x.Id.ToString() == item.CreatedBy);
                lt.Add(new LoggingTrack
                {
                    CreatedBy = cY == null ? "Not Exist " : cY.LoginUserName,
                    LoggingTime = item.LoggingTime,
                    LoginLogout = item.LoginLogout
                });
            }
            ViewBag.allLoggingTrack = lt;
            ViewBag.AllUsers = dbcont.Tbl_UserLogins.ToList();
            return View();
        }
        [NonAction]
        public void Tracking(string action, int loginId)
        {
            LoggingTrack lt = new LoggingTrack()
            {
                LoginLogout = action,
                LoggingTime = System.DateTime.Now.ToString("dd/MM/yyyy"),
                CreatedBy = Convert.ToString(loginId)
            };
            dbcont.Tbl_LoggingTrack.Add(lt);
            dbcont.SaveChanges();
        }
        public void setcookies(string code)
        {
            HttpCookie cookie = new HttpCookie("iscode", code);
            Response.Cookies.Add(cookie);
        }

        [HttpPost]
        public JsonResult AutoCompleteCouncilDesignation(string Prefix)
        {
            var currentlanguage = Session["CurrentLang"].ToString();
            if (currentlanguage == "FN")
            {
                var list = (from m in dbcont.Tbl_DesignationDetails
                            where m.DesignationType == "Council" && m.DataListName == "Provience Designation" && m.Name.ToLower().StartsWith(Prefix.ToLower())
                            select new
                            {
                                val = m.Id,
                                label = m.Name_French == null ? "" : m.Name_French
                            }).ToList();
                return Json(list);

            }
            else
            {
                var list1 = (from m in dbcont.Tbl_DesignationDetails
                             where m.DesignationType == "Council" && m.DataListName == "Provience Designation" && m.Name.ToLower().StartsWith(Prefix.ToLower())
                             select new
                             {
                                 val = m.Id,
                                 label = m.Name
                             }).ToList();
                return Json(list1);
            }



        }
        [HttpPost]
        public JsonResult AutoCompleteCouncilDesignation2(string Prefix)
        {

            var list = (from m in dbcont.Tbl_DesignationDetails
                        where m.DesignationType == "Council" && m.DataListName == "General Designation" && m.Name.ToLower().StartsWith(Prefix.ToLower())
                        select new
                        {
                            val = m.Id,
                            label = m.Name
                        }).ToList();

            return Json(list);
        }

        [HttpPost]
        public JsonResult AutoCompleteCouncilName(string Prefix, string Province)
        {

            var list = (from m in dbcont.tbl_PersonalDetails
                        where m.ProvinceName == Province && m.Name.ToLower().StartsWith(Prefix.ToLower())
                        select new
                        {
                            label = m.Name + " " + m.SirName,
                            //val = m.MemberID
                            val = m.PersonalDetailsId
                        }).ToList();
            if (Province == "" || Province == null)
                list = (from m in dbcont.tbl_PersonalDetails
                        where m.Name.ToLower().StartsWith(Prefix.ToLower())
                        select new
                        {
                            label = m.Name,
                            //val = m.MemberID
                            val = m.PersonalDetailsId
                        }).ToList();

            return Json(list);

        }

        /// <summary>
        /// To get community details for selected other province
        /// </summary>
        /// <param name="province">Province name</param>
        /// <returns>Community details.</returns>
        public JsonResult GetOtherProvinceCommunity(string provinceId)
        {
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var communityDetails = new List<string>();
            var Mainprovince = dbcont.tbl_Province.Where(p => p.MyId == provinceId).FirstOrDefault();
            if (Session["username"].ToString() == "admin" && provinceId != "0")
            {
                var province = dbcont.tbl_Province.Where(p => p.MyId == provinceId).FirstOrDefault();
                if (province != null)
                {
                    communityDetails = dbcont.Tbl_Cong.Where(x => x.ProvinceName.Contains(province.Id.ToString()) || x.ProvinceName.Contains(province.ProvinceName)).Select(x => x.CongregationName).ToList();
                    var extraCommunities = dbcont.tblAddExtraCommunity.Select(x => x.Name).ToList();
                    communityDetails.AddRange(extraCommunities);
                }

            }
            //else if ((Mainprovince.Id==null?"": Mainprovince.Id.ToString()) == currentUser && provinceId != "0")
            //{
            //    var province = dbcont.tbl_Province.Where(p => p.MyId == provinceId).FirstOrDefault();
            //    if (province != null)
            //    {
            //        communityDetails = dbcont.Tbl_Cong.Where(x => x.ProvinceName.Contains(province.Id.ToString()) || x.ProvinceName.Contains(province.ProvinceName)).Select(x => x.CongregationName).ToList();
            //        var extraCommunities = dbcont.tblAddExtraCommunity.Select(x => x.Name).ToList();
            //        communityDetails.AddRange(extraCommunities);
            //    }
            //}
            else if (provinceId != "0")
            {
                var province = dbcont.tbl_Province.Where(p => p.MyId == provinceId).FirstOrDefault();
                if (province != null)
                {
                    communityDetails = dbcont.Tbl_Cong.Where(x => x.ProvinceName.Contains(province.Id.ToString()) || x.ProvinceName.Contains(province.ProvinceName)).Select(x => x.CongregationName).ToList();
                    var extraCommunities = dbcont.tblAddExtraCommunity.Select(x => x.Name).ToList();
                    communityDetails.AddRange(extraCommunities);
                }
            }

            return Json(communityDetails, JsonRequestBehavior.AllowGet);
        }

        #region Clone code for saparate

        public ActionResult CongrationList2_MeetingMin(string ide)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            if (ide != null)
            {
                ViewBag.EditId = ide;
            }
            else
            {
                ViewBag.EditId = "0";
            }

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;


            //ConDatas
            if (Convert.ToString(Session["username"]) == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }
            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> ViewCongrationList2_MeetingMin()
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;

            if (Convert.ToString(Session["username"]) == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.allinstitution = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.allinstitution = CongriDatas;
            }
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();



                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }
        [HttpPost]
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGrid_CongrationList2_MeetingMin(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
            string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }

                var allins = CongriDatas.Where(x => (x.Title.Contains(SearchTxt) || x.Date.Contains(SearchTxt) || x.Description.Contains(SearchTxt))).ToList();
                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    allins = filteredData.ToList();
                }

                ViewBag.allinstitution = allins;
            }
            else
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }

                var allins = CongriDatas.Where(x => (x.Title.Contains(SearchTxt) || x.Date.Contains(SearchTxt) || x.Description.Contains(SearchTxt))).ToList();
                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    allins = filteredData.ToList();
                }

                ViewBag.allinstitution = allins;
            }
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return PartialView("_ViewCongrationList2_MeetingMin");
            //return Json(new { Url = Url.Action("_InstitutionCreatedList", ViewBag.allinstitution) });
        }


        public ActionResult CongrationList2_Community(string ide)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;
            if (ide != null)
            {
                ViewBag.EditId = ide;
            }
            else
            {
                ViewBag.EditId = "0";
            }
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            //ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.CommId = dbcont.Tbl_GeneralCommunity.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> ViewCongrationList2_Community()
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            if (Session["username"].ToString() == "admin")
            {
                //var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                var allComm = dbcont.Tbl_GeneralCommunity.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.allinstitution = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_GeneralCommunity.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allComm;
            }
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();



                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }
        [HttpPost]
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGrid_CongrationList2_Community(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
            string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.StartValue = firstItem;
            var ColumnShow = db.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "11").FirstOrDefault();
            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);
            try
            {
                if (Session["username"].ToString() == "admin")
                {
                    //var Tbl_Congg = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                    var Tbl_Congg = dbcont.Tbl_GeneralCommunity.Where(x => x.ActiveCkeck == "Active").ToList();
                    string gg = SearchTxt;

                    if (!string.IsNullOrEmpty(SearchTxt))
                    {
                        Tbl_Congg = Tbl_Congg.Where(x => !string.IsNullOrEmpty(x.CongregationName) && x.CongregationName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.CommCode) && x.CommCode.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.GenCode) && x.GenCode.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Place) && x.Place.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Address) && x.Address.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Phone) && x.Phone.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Country) && x.Country.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.EmailId) && x.EmailId.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.DisSec) && x.DisSec.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.ActiveCkeck) && x.ActiveCkeck.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Enterby) && x.Enterby.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.EnterbyName) && x.EnterbyName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Vission) && x.Vission.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Mission) && x.Mission.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Activities) && x.Activities.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Diocese) && x.Diocese.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.PostalCode) && x.PostalCode.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Enitity) && x.Enitity.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Continent) && x.Continent.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.CommunityType) && x.CommunityType.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.StartDate) && x.StartDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.EndDate) && x.EndDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.SuspensionDate) && x.SuspensionDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.RestartDate) && x.RestartDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Remark) && x.Remark.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Remarks) && x.Remarks.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.IsStatisticActive) && x.IsStatisticActive.ToLower().Contains(SearchTxt.ToLower())

                        ).ToList();
                    }

                    var alldata = Tbl_Congg;
                    ViewBag.DynamicCount = alldata.Count();

                    //var allins = Tbl_Congg.Where(x => x.CongregationName.Contains(SearchTxt) || x.Place.Contains(SearchTxt) || x.ActiveCkeck.Contains(SearchTxt)).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = alldata.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        alldata = filteredData.ToList();
                    }

                    ViewBag.allinstitution = alldata;
                }
                else
                {
                    //var Tbl_Cong = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                    var Tbl_Cong = dbcont.Tbl_GeneralCommunity.Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser).ToList();
                    if (!string.IsNullOrEmpty(SearchTxt))
                    {
                        Tbl_Cong = Tbl_Cong.Where(x => !string.IsNullOrEmpty(x.CongregationName) && x.CongregationName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.CommCode) && x.CommCode.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.GenCode) && x.GenCode.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Place) && x.Place.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Address) && x.Address.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Phone) && x.Phone.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Country) && x.Country.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.EmailId) && x.EmailId.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.DisSec) && x.DisSec.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.ActiveCkeck) && x.ActiveCkeck.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Enterby) && x.Enterby.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.EnterbyName) && x.EnterbyName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Vission) && x.Vission.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Mission) && x.Mission.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Activities) && x.Activities.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Diocese) && x.Diocese.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.PostalCode) && x.PostalCode.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Enitity) && x.Enitity.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Continent) && x.Continent.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.CommunityType) && x.CommunityType.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.StartDate) && x.StartDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.EndDate) && x.EndDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.SuspensionDate) && x.SuspensionDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.RestartDate) && x.RestartDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Remark) && x.Remark.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Remarks) && x.Remarks.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.IsStatisticActive) && x.IsStatisticActive.ToLower().Contains(SearchTxt.ToLower())

                        ).ToList();
                    }

                    var alldata = Tbl_Cong;

                    //var allins = Tbl_Cong.Where(x => (x.CongregationName.Contains(SearchTxt) || x.Place.Contains(SearchTxt) || x.ActiveCkeck.Contains(SearchTxt))).ToList();
                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = alldata.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        alldata = filteredData.ToList();
                    }

                    ViewBag.allinstitution = alldata;
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                throw;
            }
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();



                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return PartialView("_ViewCongrationList2_Community");
            //return Json(new { Url = Url.Action("_InstitutionCreatedList", ViewBag.allinstitution) });
        }


        //Institute Grid
        public ActionResult ViewCongregationList2_Institute()
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }

            ViewBag.allinstitution = dbcont.tbl_Congregation.ToList();
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();



                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        [HttpPost]
        public ActionResult GetGrid_CongrationList2_Institute(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, tbl_Congregation tbl_Congregationdetails)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            try
            {
                if (Session["username"].ToString() == "admin")
                {
                    var tblcongregation = dbcont.tbl_Congregation.ToList();
                    var ColumnShow = db.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "10").FirstOrDefault();
                    ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);
                    if (!string.IsNullOrEmpty(SearchTxt))
                    {
                        tblcongregation = tblcongregation.Where(x => !string.IsNullOrEmpty(x.CongregationName) && x.CongregationName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Establishment) && x.Establishment.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Email) && x.Email.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Website) && x.Website.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Address) && x.Address.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Phone) && x.Phone.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Fax) && x.Fax.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Country) && x.Country.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.NameofFounder) && x.NameofFounder.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.NameofCoFounder) && x.NameofCoFounder.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.FoundationDate) && x.FoundationDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Foundationday) && x.Foundationday.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.DiocesanDecreeDate) && x.DiocesanDecreeDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.PontificalDecreeDate) && x.PontificalDecreeDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.CongregationCountriesofMission) && x.CongregationCountriesofMission.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.GouvernementalDecreeDate) && x.GouvernementalDecreeDate.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.DepCIVCSVA) && x.DepCIVCSVA.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Continent) && x.Continent.ToLower().Contains(SearchTxt.ToLower())
                        || !string.IsNullOrEmpty(x.Remarks) && x.Remarks.ToLower().Contains(SearchTxt.ToLower())

                        ).ToList();
                    }

                    var alldata = tblcongregation;
                    ViewBag.DynamicCount = alldata.Count();

                    if (firstItem != null && lastItem != null)
                    {
                        sbyte from = Convert.ToSByte(firstItem);
                        sbyte To = Convert.ToSByte(lastItem);
                        var filteredData = alldata.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                        alldata = filteredData.ToList();
                    }
                    ViewBag.AllInstitution = alldata;

                }
                return PartialView("_GetCongregationInstitution");
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                //return RedirectToAction("Login");
                throw;
            }
        }

        public ActionResult CongrationList2_Generalate(string id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            ViewBag.EditId = id;
            if (id != null)
            {
                ViewBag.Institutedata = dbcont.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            }
            else
            {
                ViewBag.Institutedata = null;
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongrationList2_LegalRegistration()
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public ActionResult CongrationList2_Staff()
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public ActionResult CongrationList2_Calender()
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongregationList2_GeneralAdminGrid()
        {
            return View();
        }

        public ActionResult CongregationList2_General_Admin()
        {
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "General_Administration";
                int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
                var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                          from n in dbcont.Tbl_Submenuhead.ToList()
                                          where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                          && Convert.ToUInt32(m.HasPermission) == 1
                                          select new Tbl_RolePermission
                                          {
                                              TagName = m.PageName,
                                              Url = m.PageViewName
                                          }).ToList();
                Session["RolePermissionTage"] = RolePermissionTage.ToList();
                ViewBag.CurrentPageName = "General_Administration";

                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public ActionResult CongrationList2_GeneralAdmin(int GeneralAdminId)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;



            var Gernealadmindata = dbcont.GeneralMember.FirstOrDefault(x => x.Id == GeneralAdminId);
            ViewBag.AdminId = GeneralAdminId;
            if (Gernealadmindata != null)
            {
                ViewBag.Fromdate = Gernealadmindata.FromDate;
                ViewBag.Todate = Gernealadmindata.ToDate;
                ViewBag.Mandate = Gernealadmindata.Mandate;
                ViewBag.MissionCountry = Gernealadmindata.MissionCountry;
                ViewBag.Provinceid = Gernealadmindata.ProvinceId;
                ViewBag.Name = Gernealadmindata.Name;
                ViewBag.Designation = Gernealadmindata.Designation;
                ViewBag.Responsibility = Gernealadmindata.Responsibility;
                ViewBag.GerernalAdminId = Gernealadmindata.Id;
                ViewBag.GenId = Gernealadmindata.GenId;
                ViewBag.Personeldataid = Gernealadmindata.PersonalDetailsId;
                ViewBag.Designaion = Gernealadmindata.Designation;
                ViewBag.DatListItemId = Gernealadmindata.DataListItemsId;
                ViewBag.Responsibility = Gernealadmindata.Responsibility;
                ViewBag.status = Gernealadmindata.Status;

                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                                 .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName)
                                .ToList();
                Guid id = Guid.Parse(Gernealadmindata.ProvinceId);

                var province_id = allRecords.FirstOrDefault(x => x.Id == id)?.Id;
                var province_name = allRecords.FirstOrDefault(x => x.Id == id)?.ProvinceName;
                var provinceplace = allRecords.FirstOrDefault(x => x.Id == id)?.Place;
                var Province_Name = province_name + "" + provinceplace;
                ViewBag.Province_Id = province_id;
                ViewBag.province_name = Province_Name;


            }
            //List<tbl_Province> AllRecords = new List<tbl_Province>();
            //List<> AllRecords = "";
            if (Session["username"].ToString() == "admin")
            {
                //var   AllRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                //                    .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName)
                //                   .ToList();
                var AllRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllRecords = AllRecords;

            }
            //else
            //{
            //  var  AllRecords = db.tbl_Province
            //           .Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser)
            //            .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName)
            //           .ToList();
            //ViewBag.AllRecords = AllRecords;

            //}
            //ViewBag.AllRecords = AllRecords;
            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralMember> generalMembers = new List<GeneralMember>();
                foreach (var item in GeneralMember)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralMember
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralMember = generalMembers;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralMember> generalMembers = new List<GeneralMember>();
                foreach (var item in GeneralMember)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralMember
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralMember = generalMembers;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;

            var GeneralCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.Generalcommunity = GeneralCommunity;

            return View();
        }

        public JsonResult UpdateGeneralAdminstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.GeneralMember.FirstOrDefault(x => x.Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult GetGeneralAdminGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "5").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralMember> generalMembers = new List<GeneralMember>();
                foreach (var item in GeneralMember)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralMember
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralMember = generalMembers;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralMember> generalMembers = new List<GeneralMember>();
                foreach (var item in GeneralMember)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralMember
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status
                    });
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralMember = generalMembers;
            }

            return PartialView("_GetCongregationAdminList");

        }

        public ActionResult CongrationList2_GeneralAdminCouncilMember(int CouncilMemberid)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;
            ViewBag.CouncilMemberId = CouncilMemberid;
            var councilmemberdata = dbcont.MeetingMinutes.FirstOrDefault(x => x.Id == CouncilMemberid);
            if (councilmemberdata != null)
            {
                ViewBag.CouncilmemberId1 = councilmemberdata.Id;
                ViewBag.FromDate1 = councilmemberdata.FromDate;
                ViewBag.ToDate1 = councilmemberdata.ToDate;
                ViewBag.Mandate1 = councilmemberdata.Mandate;
                ViewBag.MissionCountry1 = councilmemberdata.MissionCountry;
                ViewBag.ProvinceID1 = councilmemberdata.ProvinceId;
                ViewBag.Name1 = councilmemberdata.Name;
                ViewBag.Designation1 = councilmemberdata.Designation;
                ViewBag.Responsibility1 = councilmemberdata.Responsibility;
                ViewBag.GenId1 = councilmemberdata.GenId;
                ViewBag.Personeldetailid1 = councilmemberdata.PersonalDetailsId;
                ViewBag.CounProvince1 = councilmemberdata.ProvinceId;
                ViewBag.DataListItemid1 = councilmemberdata.DataListItemsId;
                ViewBag.status1 = councilmemberdata.Status;



            }

            var communityname = dbcont.Tbl_Cong.ToList();
            ViewBag.CommunityName = communityname;

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralCouncil = generalMembers;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralCouncil = generalMembers;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongregationList2_GeneralAdminCouncilMemberGrid()
        {
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "General_Administration";
                int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
                var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                          from n in dbcont.Tbl_Submenuhead.ToList()
                                          where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                          && Convert.ToUInt32(m.HasPermission) == 1
                                          select new Tbl_RolePermission
                                          {
                                              TagName = m.PageName,
                                              Url = m.PageViewName
                                          }).ToList();
                Session["RolePermissionTage"] = RolePermissionTage.ToList();
                ViewBag.CurrentPageName = "General_Administration";

                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public JsonResult UpdateGeneralcouncilmemberstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.MeetingMinutes.FirstOrDefault(x => x.Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult GetGeneralAdminCouncilMemberGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            if (Session["username"].ToString() == null)
            {
                return RedirectToAction("Login");
            }

            var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "6").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }


                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = generalMembers;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralCouncil = generalMembers;

            }

            return PartialView("_GetCongregationCouncilMember");

        }

        public ActionResult CongrationList2_GeneralAdminTreasurer(int Treasurer_Id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;
            var CommunityName = dbcont.Tbl_Cong.ToList();
            ViewBag.CommunityName = CommunityName;
            var treasererdata = dbcont.GeneralTreasurer.FirstOrDefault(x => x.Id == Treasurer_Id);
            ViewBag.TRId = Treasurer_Id;
            if (treasererdata != null)
            {
                ViewBag.TreasererID2 = treasererdata.Id;
                ViewBag.FromDate2 = treasererdata.FromDate;
                ViewBag.ToDate2 = treasererdata.ToDate;
                ViewBag.Mandate2 = treasererdata.Mandate;
                ViewBag.MissionCountry2 = treasererdata.MissionCountry;
                ViewBag.ProvinceID2 = treasererdata.ProvinceId;
                ViewBag.Name2 = treasererdata.Name;
                ViewBag.Designation2 = treasererdata.Designation;
                ViewBag.Responsibility2 = treasererdata.Responsibility;
                ViewBag.GenId2 = treasererdata.GenId;
                ViewBag.Personeldetailid2 = treasererdata.PersonalDetailsId;
                ViewBag.CounProvince2 = treasererdata.ProvinceId;
                ViewBag.DataListItemid2 = treasererdata.DataListItemsId;
                ViewBag.status2 = treasererdata.Status;

                var allRecords = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
                               .Select(x => new { x.ProvinceName, x.Id, x.Place }).OrderBy(x => x.ProvinceName)
                              .ToList();
                Guid id = Guid.Parse(treasererdata.ProvinceId);

                var province_id2 = allRecords.FirstOrDefault(x => x.Id == id)?.Id;
                var province_name2 = allRecords.FirstOrDefault(x => x.Id == id)?.ProvinceName;
                var provinceplace2 = allRecords.FirstOrDefault(x => x.Id == id)?.Place;
                var Province_Name2 = province_name2 + "" + provinceplace2;
                ViewBag.Province_Id2 = province_id2;
                ViewBag.province_name2 = Province_Name2;

            }

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralCouncil = generalMembers;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralCouncil = generalMembers;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralTreasurer> generalMembers = new List<GeneralTreasurer>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralTreasurer
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralTreasurer = generalMembers;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralTreasurer> generalMembers = new List<GeneralTreasurer>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralTreasurer
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralTreasurer = generalMembers;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongregationList2_GeneralAdminTreasurerGrid()
        {
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "General_Administration";
                int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
                var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                          from n in dbcont.Tbl_Submenuhead.ToList()
                                          where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                          && Convert.ToUInt32(m.HasPermission) == 1
                                          select new Tbl_RolePermission
                                          {
                                              TagName = m.PageName,
                                              Url = m.PageViewName
                                          }).ToList();
                Session["RolePermissionTage"] = RolePermissionTage.ToList();
                ViewBag.CurrentPageName = "General_Administration";

                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public JsonResult UpdateGeneraltreasererstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.GeneralTreasurer.FirstOrDefault(x => x.Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }


        [HttpPost]
        public ActionResult GetGeneralTreasurerGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "7").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralTreasurer> generalMembers = new List<GeneralTreasurer>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralTreasurer
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralTreasurer = generalMembers;

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = generalMembers;
            }
            else
            {
                var GeneralCouncil = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralTreasurer> generalMembers = new List<GeneralTreasurer>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralTreasurer
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralCouncil = generalMembers;
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralCouncil = generalMembers;

            }

            return PartialView("_GetCongregationTreasurerAdmin");
        }

        public ActionResult CongrationList2_GeneralAdminCommission(int CommisionId)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();

            ViewBag.commisionid = CommisionId;
            var Commissiondata = dbcont.tblGenCommission.FirstOrDefault(x => x.Id == CommisionId);
            if (Commissiondata != null)
            {
                ViewBag.FromDate = Commissiondata.FromDate;
                ViewBag.ToDate = Commissiondata.ToDate;
                ViewBag.Mandate = Commissiondata.ManDate;
                ViewBag.Membername = Commissiondata.MemberName;
                ViewBag.Designationname = Commissiondata.DesignationName;
                ViewBag.Responsibilityname = AllResponsibility.FirstOrDefault(x => x.Name_French == Commissiondata.ResponsibilityName)?.Id;
                ViewBag.Responsibility = Commissiondata.ResponsibilityName;
                ViewBag.Commisionid = Commissiondata.Id;
                ViewBag.status = Commissiondata.Status;
            }

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                List<tblGenCommission> AllGenCommissionList = new List<tblGenCommission>();
                foreach (var item in AllGenCommission)
                {
                    foreach (var item2 in AllResponsibility)
                    {
                        if (item.ResponsibilityName == Convert.ToString(item2.Id))
                        {
                            item.ResponsibilityName = Convert.ToString(item2.Name);
                        }
                    }
                    AllGenCommissionList.Add(item);
                }
                ViewBag.AllGenCommission = AllGenCommissionList;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralCouncil = GeneralCouncil;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }
            else
            {
                var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralTreasurer = GeneralTreasurer;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongregationList2_GeneralAdminCommissionGrid()
        {
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "General_Administration";
                int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
                var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                          from n in dbcont.Tbl_Submenuhead.ToList()
                                          where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                          && Convert.ToUInt32(m.HasPermission) == 1
                                          select new Tbl_RolePermission
                                          {
                                              TagName = m.PageName,
                                              Url = m.PageViewName
                                          }).ToList();
                Session["RolePermissionTage"] = RolePermissionTage.ToList();
                ViewBag.CurrentPageName = "General_Administration";

                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public JsonResult UpdateGeneralcommissionstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.tblGenCommission.FirstOrDefault(x => x.Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult GetGeneralAdminCommissionGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "8").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);
            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;
            List<tblGenCommission> AllGenCommissionList = new List<tblGenCommission>();

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                foreach (var item in AllGenCommission)
                {
                    foreach (var item2 in AllResponsibility)
                    {
                        if (item.ResponsibilityName == Convert.ToString(item2.Id))
                        {
                            item.ResponsibilityName = Convert.ToString(item2.Name);
                        }
                    }
                    AllGenCommissionList.Add(item);
                }
                ViewBag.AllGenCommission = AllGenCommissionList;
                //ViewBag.AllGeneralTreasurer = generalMembers;

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    AllGenCommissionList = AllGenCommissionList.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ManDate) && x.ManDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MemberName) && x.MemberName.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.DesignationName) && x.DesignationName.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ResponsibilityName) && x.ResponsibilityName.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = AllGenCommissionList.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = AllGenCommissionList.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    AllGenCommissionList = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = AllGenCommissionList;
            }
            else
            {
                //var GeneralCouncil = db.tblGenCommission.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<tblGenCommission> generalMembers = new List<tblGenCommission>();
                var GeneralCouncil = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = GeneralCouncil;
                //ViewBag.AllGeneralCouncil = generalMembers;
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    GeneralCouncil = GeneralCouncil.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                   || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                   || !string.IsNullOrEmpty(x.ManDate) && x.ManDate.ToLower().Contains(SearchTxt.ToLower())
                   || !string.IsNullOrEmpty(x.MemberName) && x.MemberName.ToLower().Contains(SearchTxt.ToLower())
                   || !string.IsNullOrEmpty(x.DesignationName) && x.DesignationName.ToLower().Contains(SearchTxt.ToLower())
                   || !string.IsNullOrEmpty(x.ResponsibilityName) && x.ResponsibilityName.ToLower().Contains(SearchTxt.ToLower())
                   ).ToList();
                }

                ViewBag.DynamicTotalCount = GeneralCouncil.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = AllGenCommissionList.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    GeneralCouncil = GeneralCouncil.ToList();
                }

                ViewBag.AllGeneralCouncil = GeneralCouncil;

            }

            return PartialView("_GetCongregationCommissionAdmin");
        }

        public ActionResult CongregationList2_GeneralAdminSecretary(int Secreteray_Id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var CommunityName = dbcont.Tbl_Cong.ToList();
            ViewBag.CommunityName = CommunityName;

            ViewBag.Secretary_ID = Secreteray_Id;
            var secretarydata = dbcont.GeneralSecretary.FirstOrDefault(x => x.Id == Secreteray_Id);
            if (secretarydata != null)
            {
                ViewBag.Fromdate4 = secretarydata.FromDate;
                ViewBag.Todate4 = secretarydata.ToDate;
                ViewBag.Mandate4 = secretarydata.Mandate;
                ViewBag.MissionCountry4 = secretarydata.MissionCountry;
                ViewBag.ProvinceId4 = secretarydata.ProvinceId;
                ViewBag.Name4 = secretarydata.Name;
                ViewBag.Designation4 = secretarydata.Designation;
                ViewBag.Responsibility4 = secretarydata.Responsibility;
                ViewBag.SecreId4 = secretarydata.Id;
                ViewBag.GenId4 = secretarydata.GenId;
                ViewBag.Personeldataid4 = secretarydata.PersonalDetailsId;
                ViewBag.Designation4 = secretarydata.Designation;
                ViewBag.DataListItemId4 = secretarydata.DataListItemsId;
                ViewBag.Responsibility4 = secretarydata.Responsibility;
                ViewBag.Status4 = secretarydata.Status;
                ViewBag.Secretary_id = secretarydata.Id;
            }

            var data = dbcont.tbl_Congregation.FirstOrDefault();
            ViewBag.id = data.Id;
            ViewBag.CongId = data.CongreId;
            ViewBag.Congregation = data.CongregationName;
            BindViewBag();
            ViewBag.CongreId = dbcont.tbl_Congregation.Count() + 1;
            ViewBag.DioceseId = dbcont.tbl_Diocese.Count() + 1;

            var allCong = dbcont.tbl_Congregation.ToList();
            ViewBag.congregation = allCong;

            var AllResponsibility = dbcont.DataListItems.Where(x => x.DataListName == "Responsibility").ToList();
            ViewBag.AllResponsibility = AllResponsibility;

            if (Session["username"].ToString() == "admin")
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }
            else
            {
                var AllGenCommission = dbcont.tblGenCommission.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGenCommission = AllGenCommission;
            }

            //ConDatas
            if (Session["username"].ToString() == "admin")
            {
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.CongrationId == data.Id.ToString()).ToList();
                List<Tbl_CongrationsData> CongriDatas = new List<Tbl_CongrationsData>();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationsData
                    {
                        id = item.id,
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description == null ? string.Empty : item.Description,
                        File = item.File == null ? string.Empty : item.File

                    });
                }
                ViewBag.CongriDatas = CongriDatas;
            }
            else
            {
                List<Tbl_CongrationssData> CongriDatas = new List<Tbl_CongrationssData>();
                var Tbl_CongraDatas = db.Tbl_CongrationsDatas.Where(x => x.ProvinceName == currentUser && x.CongrationId == data.Id.ToString()).ToList();
                foreach (var item in Tbl_CongraDatas)
                {
                    CongriDatas.Add(new Tbl_CongrationssData
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description,
                        File = item.File
                    });
                }
                ViewBag.Tbl_CongraDatas = CongriDatas;
            }

            if (Session["username"].ToString() == "admin")
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralCouncil = generalMembers;
            }
            else
            {
                var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralCouncil> generalMembers = new List<GeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralCouncil
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralCouncil = generalMembers;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            else
            {
                var GeneralMember = db.GeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllGeneralMember = GeneralMember;
            }
            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralSecretary.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralSecretary> generalMembers = new List<GeneralSecretary>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralSecretary
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralTreasurer1 = generalMembers;
            }
            else
            {
                var GeneralTreasurer = db.GeneralSecretary.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralSecretary> generalMembers = new List<GeneralSecretary>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralSecretary
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility


                    });
                }
                ViewBag.AllGeneralTreasurer1 = generalMembers;
            }

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            //for dropdown

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").OrderBy(x => x.Name).ToList();
            ViewBag.AllRegType = AllRegType;

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities;

            var AllDataTypes = dbcont.DataListItems.Where(x => x.DataListName == "DistTypes").OrderBy(x => x.Name).ToList();
            ViewBag.AllDataTypes = AllDataTypes;

            var allInstitution = dbcont.DataListItems.Where(x => x.DataListName == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionType = allInstitution;

            var AllDiocese = dbcont.tbl_Diocese.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.DioceseName).ToList();
            ViewBag.AllDiocese = AllDiocese;


            var allDisSec = dbcont.tbl_DistSector.Where(x => x.ActiveCkeck == "Active").ToList();
            ViewBag.DistSector = allDisSec;

            if (Session["username"].ToString() == "admin")
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }
            else
            {
                var Paris = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Paris = Paris;
            }

            if (Session["username"].ToString() == "admin")
            {
                var Society = dbcont.Societys.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }
            else
            {
                var Society = dbcont.Societys.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Society = Society;
            }

            //InstituteView
            if (Session["username"].ToString() == "admin")
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }
            else
            {
                var allins = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Institution" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.allinstitution = allins;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }
            else
            {
                var allComm = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Community = allComm;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }
            else
            {
                var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ProvinceName == currentUser && x.ActiveCkeck == "Active" && x.Type == "Paris" && x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.Parish = allParish;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }
            else
            {
                var AllStaffData = dbcont.StaffDetails.Where(x => x.EnterbyId == data.Id.ToString()).ToList();
                ViewBag.AllStaffData = AllStaffData;
            }

            if (Session["username"].ToString() == "admin")
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }
            else
            {
                var AllCalenderData = dbcont.Tbl_Calender.Where(x => x.CreatedBy == currentuserid && x.GenId == data.Id.ToString()).ToList();
                ViewBag.AllCalenderData = AllCalenderData;
            }

            var AllActivities1 = dbcont.DataListItems.Where(x => x.DataListName == "Activities").OrderBy(x => x.Name).ToList();
            ViewBag.AllActivities = AllActivities1;

            var countryList = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.CountriesofMission = countryList;
            ViewBag.Country = countryList;

            var activitiesDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "activities").OrderBy(x => x.Name).ToList();
            ViewBag.ActivitiesDataListItems = activitiesDataListItems;
            var InstitutionDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionDataListItems = InstitutionDataListItems;

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").OrderBy(x => x.Name).ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;

            ViewBag.DisSecId = dbcont.tbl_DistSector.Count() + 1;
            return View();
        }

        public ActionResult CongregationLIst2_GeneralAdminSecretaryGrid()
        {
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "General_Administration";
                int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
                var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                          from n in dbcont.Tbl_Submenuhead.ToList()
                                          where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                          && Convert.ToUInt32(m.HasPermission) == 1
                                          select new Tbl_RolePermission
                                          {
                                              TagName = m.PageName,
                                              Url = m.PageViewName
                                          }).ToList();
                Session["RolePermissionTage"] = RolePermissionTage.ToList();
                ViewBag.CurrentPageName = "General_Administration";

                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }
        public JsonResult UpdateGeneralsecretarystatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.GeneralSecretary.FirstOrDefault(x => x.Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        [HttpPost]
        public ActionResult GetGeneralSecretaryGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "9").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                var GeneralTreasurer = db.GeneralSecretary.Where(x => x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralSecretary> generalMembers = new List<GeneralSecretary>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralSecretary
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralTreasurer = generalMembers;

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = generalMembers;
            }
            else
            {
                var GeneralTreasurer = db.GeneralSecretary.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<GeneralSecretary> generalMembers = new List<GeneralSecretary>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new GeneralSecretary
                    {
                        Id = item.Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralCouncil = generalMembers;
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralCouncil = generalMembers;

            }

            return PartialView("_GetCongregationSecretaryAdmin");
        }

        #endregion

        #region Province 
        //General Admin
        public ActionResult ProvinceGeneral_Admin()
        {

            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();
            
                string CurrentPageName = "Entity Administration";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                               from n in dbcont.Tbl_Submenuhead.ToList()
                                               where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                               && Convert.ToUInt32(m.HasPermission) == 1
                                               select new Tbl_RolePermission
                                               {
                                                   TagName = m.PageName,
                                                   Url = m.PageViewName
                                               }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Entity Administration";
           
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }


        public JsonResult Updateprovinceadminstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.Tbl_ProGeneralMember.FirstOrDefault(x => x.ProGenMem_Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult GetProvinceGeneralAdminGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            //var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "11").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                //var GeneralMember = db.GeneralMember.Where(x => x.GenId == data.Id.ToString()).ToList();
                var GeneralMember = db.Tbl_ProGeneralMember.ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralMember> generalMembers = new List<Tbl_ProGeneralMember>();

                foreach (var item in GeneralMember)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralMember
                    {
                        ProGenMem_Id = item.ProGenMem_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status
                    });
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralMember = generalMembers.OrderByDescending(x => Convert.ToDateTime(x.FromDate));
            }
            else
            {
                //var GeneralMember = db.Tbl_ProGeneralMember.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var GeneralMember = db.Tbl_ProGeneralMember.ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralMember> generalMembers = new List<Tbl_ProGeneralMember>();
                foreach (var item in GeneralMember)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralMember
                    {
                        ProGenMem_Id = item.ProGenMem_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralMember = generalMembers;
            }

            return PartialView("_GetProvinceAdminList");

        }

        public ActionResult ProvinceGeneralAdminCouncilMember(int CouncilMemberid)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);

            ViewBag.CouncilMemberId = CouncilMemberid;
            var councilmemberdata = dbcont.Tbl_ProGeneralMember.FirstOrDefault(x => x.ProGenMem_Id == CouncilMemberid);
            if (councilmemberdata != null)
            {
                ViewBag.CouncilmemberId1 = councilmemberdata.ProGenMem_Id;
                ViewBag.FromDate1 = councilmemberdata.FromDate;
                ViewBag.ToDate1 = councilmemberdata.ToDate;
                ViewBag.Mandate1 = councilmemberdata.Mandate;
                ViewBag.MissionCountry1 = councilmemberdata.MissionCountry;
                ViewBag.ProvinceID1 = councilmemberdata.ProvinceId;
                ViewBag.Name1 = councilmemberdata.Name;
                ViewBag.status1 = councilmemberdata.Status;
                ViewBag.Designation1 = councilmemberdata.Designation;
                ViewBag.Responsibility = councilmemberdata.Responsibility;
            }


            return View();
        }

        [HttpPost]
        public JsonResult AddProvinceGenMember(List<Tbl_ProGeneralMember> GeneralMember)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralMember)
            {
                if (item.ProGenMem_Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.Tbl_ProGeneralMember.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.Tbl_ProGeneralMember.FirstOrDefault(e => e.ProGenMem_Id == item.ProGenMem_Id);
                    if (existingobj != null)
                    {
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }



        //public JsonResult AddProvinceGenMember(List<Tbl_ProGeneralMember> GeneralMember)
        //{
        //    var url = Request.UrlReferrer.AbsoluteUri;
        //    Uri myUri = new Uri(url);
        //    string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

        //    foreach (var item in GeneralMember)
        //    {
        //        if (item.ProGenMem_Id == 0)
        //        {
        //            item.GenId = GenId == null ? item.GenId : GenId;
        //            db.Tbl_ProGeneralMember.Add(item);
        //            db.SaveChanges();
        //            //setcookies("200");
        //        }
        //        else
        //        {
        //            var existingobj = db.Tbl_ProGeneralMember.FirstOrDefault(e => e.ProGenMem_Id == item.ProGenMem_Id);
        //            if (existingobj != null)
        //            {
        //                if (item.ProvinceId == null)
        //                {
        //                    item.ProvinceId = existingobj.ProvinceId;
        //                }
        //                //existingobj.Name = item.Name;
        //                //existingobj.Responsibility = item.Responsibility;
        //                //existingobj.Designation = item.Designation;
        //                //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
        //                db.Entry(existingobj).CurrentValues.SetValues(item);
        //                db.SaveChanges();
        //                //setcookies("200");
        //                //return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        //                //return Json("<script language='javascript' type='text/javascript'>location.replace('ProvinceGeneral_Admin')</script>");
        //            }
        //        }

        //    }
        //    setcookies("200");
        //    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        //    //return Json("<script language='javascript' type='text/javascript'>location.replace('ProvinceGeneral_Admin')</script>");
        //}

        public ActionResult DeleteProvinceGeneralMember(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_ProGeneralMember.FirstOrDefault(e => e.ProGenMem_Id == id);
                if (data != null)
                {
                    dbcont.Tbl_ProGeneralMember.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }


        //General Member
        public ActionResult ProvinceGeneral_Member()
        {
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "Entity Administration";
                int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
                var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                          from n in dbcont.Tbl_Submenuhead.ToList()
                                          where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                          && Convert.ToUInt32(m.HasPermission) == 1
                                          select new Tbl_RolePermission
                                          {
                                              TagName = m.PageName,
                                              Url = m.PageViewName
                                          }).ToList();
                Session["RolePermissionTage"] = RolePermissionTage.ToList();
                ViewBag.CurrentPageName = "ProvinicalCouncillors";
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();

        }

        public JsonResult Updateprovincecouncilstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.Tbl_ProGeneralCouncil.FirstOrDefault(x => x.ProvGenCouncil_Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult ProvinceMemberGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            if (Session["username"].ToString() == null)
            {
                return RedirectToAction("Login");
            }

            //var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "12").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                //var GeneralCouncil = db.MeetingMinutes.Where(x => x.GenId == data.Id.ToString()).ToList();
                var GeneralCouncil = dbcont.Tbl_ProGeneralCouncil.ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralCouncil> generalMembers = new List<Tbl_ProGeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralCouncil
                    {
                        ProvGenCouncil_Id = item.ProvGenCouncil_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }


                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = generalMembers.OrderByDescending(x => Convert.ToDateTime(x.FromDate));
            }
            else
            {
                //var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var GeneralCouncil = dbcont.Tbl_ProGeneralCouncil.ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralCouncil> generalMembers = new List<Tbl_ProGeneralCouncil>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralCouncil
                    {
                        ProvGenCouncil_Id = item.ProvGenCouncil_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralCouncil = generalMembers;

            }

            return PartialView("_GetProvinceCouncilMember");
        }

        public ActionResult ProvinceAdminCouncilMember(int CouncilMemberid)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;            
            var councilmemberdata = dbcont.Tbl_ProGeneralCouncil.FirstOrDefault(x => x.ProvGenCouncil_Id == CouncilMemberid);
            ViewBag.CouncilMemberId = CouncilMemberid;
            if (councilmemberdata != null)
            {
                ViewBag.CouncilmemberId1 = councilmemberdata.ProvGenCouncil_Id;
                ViewBag.FromDate1 = councilmemberdata.FromDate;
                ViewBag.ToDate1 = councilmemberdata.ToDate;
                ViewBag.Mandate1 = councilmemberdata.Mandate;
                ViewBag.MissionCountry1 = councilmemberdata.MissionCountry;
                ViewBag.ProvinceID1 = councilmemberdata.ProvinceId;
                ViewBag.Name1 = councilmemberdata.Name;
                ViewBag.Designation1 = councilmemberdata.Designation;
                ViewBag.Responsibility1 = councilmemberdata.Responsibility;
                ViewBag.status1 = councilmemberdata.Status;
            }

            return View();
        }

        [HttpPost]
        public JsonResult AddProvinceCouncil1(List<Tbl_ProGeneralCouncil> GeneralCouncil)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralCouncil)
            {
                if (item.ProvGenCouncil_Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.Tbl_ProGeneralCouncil.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.Tbl_ProGeneralCouncil.FirstOrDefault(e => e.ProvGenCouncil_Id == item.ProvGenCouncil_Id);
                    if (existingobj != null)
                    {
                        if (item.ProvinceId == null)
                        {
                            item.ProvinceId = existingobj.ProvinceId;
                        }
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }


        public JsonResult AddProvinceGenMember1(List<Tbl_ProGeneralMember> GeneralMember)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralMember)
            {
                if (item.ProGenMem_Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.Tbl_ProGeneralMember.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.Tbl_ProGeneralMember.FirstOrDefault(e => e.ProGenMem_Id == item.ProGenMem_Id);
                    if (existingobj != null)
                    {
                        if (item.ProvinceId == null)
                        {
                            item.ProvinceId = existingobj.ProvinceId;
                        }
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }





        public ActionResult DeleteProvinceGeneralCouncil(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_ProGeneralCouncil.FirstOrDefault(e => e.ProvGenCouncil_Id == id);
                if (data != null)
                {
                    dbcont.Tbl_ProGeneralCouncil.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }


        //Treaserer
        public ActionResult ProvinceGeneral_Treaserer()
        {
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "Entity Administration";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "ProvincialTreaserer";
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }

        public JsonResult Updateprovincetreasererstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.Tbl_ProGeneralTreaserer.FirstOrDefault(x => x.ProvTreaserer_Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult GetProvinceTreasurerGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            //var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "13").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                //var GeneralTreasurer = db.GeneralTreasurer.Where(x => x.GenId == data.Id.ToString()).ToList();
                var GeneralTreasurer = dbcont.Tbl_ProGeneralTreaserer.ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralTreaserer> generalMembers = new List<Tbl_ProGeneralTreaserer>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralTreaserer
                    {
                        ProvTreaserer_Id = item.ProvTreaserer_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralTreasurer = generalMembers;

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = generalMembers.OrderByDescending(x => Convert.ToDateTime(x.FromDate));
            }
            else
            {
                //var GeneralCouncil = db.MeetingMinutes.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();

                var GeneralCouncil = dbcont.Tbl_ProGeneralTreaserer.Where(x => x.ProvinceId == currentUser).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralTreaserer> generalMembers = new List<Tbl_ProGeneralTreaserer>();
                foreach (var item in GeneralCouncil)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralTreaserer
                    {
                        ProvTreaserer_Id = item.ProvTreaserer_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralCouncil = generalMembers;
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralCouncil = generalMembers;

            }

            return PartialView("_GetProvinceTreasurerAdmin");
        }

        public ActionResult ProvinceAdminTreasurer(int Treasurer_Id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);


            var treasererdata = dbcont.Tbl_ProGeneralTreaserer.FirstOrDefault(x => x.ProvTreaserer_Id == Treasurer_Id);
            ViewBag.TRId = Treasurer_Id;
            if (treasererdata != null)
            {
                ViewBag.TreasererID2 = treasererdata.ProvTreaserer_Id;
                ViewBag.FromDate2 = treasererdata.FromDate;
                ViewBag.ToDate2 = treasererdata.ToDate;
                ViewBag.Mandate2 = treasererdata.Mandate;
                ViewBag.MissionCountry2 = treasererdata.MissionCountry;
                ViewBag.ProvinceID2 = treasererdata.ProvinceId;
                ViewBag.Name2 = treasererdata.Name;
                ViewBag.Designation2 = treasererdata.Designation;
                ViewBag.Responsibility2 = treasererdata.Responsibility;

                ViewBag.status2 = treasererdata.Status;
            }


            return View();
        }

        [HttpPost]
        public JsonResult AddProvinceTreasurer(List<Tbl_ProGeneralTreaserer> GeneralTreasurer)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralTreasurer)
            {
                if (item.ProvTreaserer_Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.Tbl_ProGeneralTreaserer.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.Tbl_ProGeneralTreaserer.FirstOrDefault(e => e.ProvTreaserer_Id == item.ProvTreaserer_Id);
                    if (existingobj != null)
                    {
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }


        public ActionResult DeleteProvinceGeneralTreaserer(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_ProGeneralTreaserer.FirstOrDefault(e => e.ProvTreaserer_Id == id);
                if (data != null)
                {
                    dbcont.Tbl_ProGeneralTreaserer.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        //Secretary
        public ActionResult ProSecretary()
        {
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            var userRoleName = Session["UserRole"] as string;
            if (!string.IsNullOrEmpty(userRoleName))
            {
                var userRoleId = dbcont.Tbl_UserRole.Where(x => x.Role_Name == userRoleName).Select(x => x.Userrole_Id).FirstOrDefault();

                string CurrentPageName = "Entity Administration";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == userRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "ProvincialSecretary";
                var topmenulist = dbcont.Tbl_TopMenuPermission.Where(x => x.RoleId == userRoleId.ToString()).ToList();
                Session["TopmenuPermission"] = topmenulist;
            }
            return View();
        }
        public JsonResult Updateprovincesecretarystatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.Tbl_ProGeneralSecretary.FirstOrDefault(x => x.ProvGenSecretary_Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        [HttpPost]
        public ActionResult ProvinceSecretaryGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, string archieve)
        {
            //var data = dbcont.tbl_Congregation.FirstOrDefault();

            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.StartIndex = firstItem;
            //var status = !string.IsNullOrEmpty(archieve) ? 3 : 1;
            //var status2 = !string.IsNullOrEmpty(archieve) ? 3 : 0;
            var ColumnShow = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "14").FirstOrDefault();
            ViewBag.ColumnShowComm = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            if (Session["username"].ToString() == "admin")
            {
                //var GeneralTreasurer = db.GeneralSecretary.Where(x => x.GenId == data.Id.ToString()).ToList();
                var GeneralTreasurer = dbcont.Tbl_ProGeneralSecretary.ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralSecretary> generalMembers = new List<Tbl_ProGeneralSecretary>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralSecretary
                    {
                        ProvGenSecretary_Id = item.ProvGenSecretary_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralTreasurer = generalMembers;

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }


                ViewBag.AllGeneralCouncil = generalMembers.OrderByDescending(x => Convert.ToDateTime(x.FromDate));
            }
            else
            {
                //var GeneralTreasurer = db.GeneralSecretary.Where(x => x.CreatedBy == currentUser && x.GenId == data.Id.ToString()).ToList();
                var GeneralTreasurer = db.Tbl_ProGeneralSecretary.Where(x => x.ProvinceId == currentUser).ToList();
                var ProvinceTbl = db.tbl_Province.ToList();
                List<Tbl_ProGeneralSecretary> generalMembers = new List<Tbl_ProGeneralSecretary>();
                foreach (var item in GeneralTreasurer)
                {
                    var provName = ProvinceTbl.Where(x => Convert.ToString(x.Id) == item.ProvinceId).Select(y => y.ProvinceName).FirstOrDefault();
                    generalMembers.Add(new Tbl_ProGeneralSecretary
                    {
                        ProvGenSecretary_Id = item.ProvGenSecretary_Id,
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        ProvinceId = provName == null ? string.Empty : provName,
                        Mandate = item.Mandate,
                        MissionCountry = item.MissionCountry,
                        Name = item.Name,
                        Designation = item.Designation,
                        Responsibility = item.Responsibility,
                        Status = item.Status


                    });
                }
                //ViewBag.AllGeneralCouncil = generalMembers;
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    generalMembers = generalMembers.Where(x => !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.ProvinceId) && x.ProvinceId.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Mandate) && x.Mandate.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.MissionCountry) && x.MissionCountry.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Designation) && x.Designation.ToLower().Contains(SearchTxt.ToLower())
                    || !string.IsNullOrEmpty(x.Responsibility) && x.Responsibility.ToLower().Contains(SearchTxt.ToLower())
                    ).ToList();
                }

                ViewBag.DynamicTotalCount = generalMembers.Count();

                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = generalMembers.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    generalMembers = filteredData.ToList();
                }

                ViewBag.AllGeneralCouncil = generalMembers;

            }

            return PartialView("_GetProvinceSecretaryAdmin");
        }


        public ActionResult ProvinceAdminSecretary(int Secreteray_Id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);
            //var data = db.tbl_Congregation.FirstOrDefault(x => x.Id.ToString() == id);
            //ViewBag.id = data.Id;
            //ViewBag.CongId = data.CongreId;
            //ViewBag.Congretion = data.CongregationName;

            var CommunityName = dbcont.Tbl_Cong.ToList();
            ViewBag.CommunityName = CommunityName;

            ViewBag.Secretary_ID = Secreteray_Id;
            var secretarydata = dbcont.Tbl_ProGeneralSecretary.FirstOrDefault(x => x.ProvGenSecretary_Id == Secreteray_Id);
            if (secretarydata != null)
            {
                ViewBag.Fromdate1 = secretarydata.FromDate;
                ViewBag.Todate1 = secretarydata.ToDate;
                ViewBag.Mandate1 = secretarydata.Mandate;
                ViewBag.MissionCountry1 = secretarydata.MissionCountry;
                ViewBag.ProvinceId1 = secretarydata.ProvinceId;
                ViewBag.Name1 = secretarydata.Name;
                ViewBag.Designation1 = secretarydata.Designation;
                ViewBag.Responsibility1 = secretarydata.Responsibility;
                ViewBag.Responsibility1 = secretarydata.Responsibility;
                ViewBag.Status1 = secretarydata.Status;
            }


            return View();
        }


        [HttpPost]
        public JsonResult AddProvinceSecretary(List<Tbl_ProGeneralSecretary> GeneralSecretary)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url);
            string GenId = HttpUtility.ParseQueryString(myUri.Query).Get("id");

            foreach (var item in GeneralSecretary)
            {
                if (item.ProvGenSecretary_Id == 0)
                {
                    item.GenId = GenId == null ? item.GenId : GenId;
                    db.Tbl_ProGeneralSecretary.Add(item);
                    db.SaveChanges();
                }
                else
                {
                    var existingobj = db.Tbl_ProGeneralSecretary.FirstOrDefault(e => e.ProvGenSecretary_Id == item.ProvGenSecretary_Id);
                    if (existingobj != null)
                    {
                        //existingobj.Name = item.Name;
                        //existingobj.Responsibility = item.Responsibility;
                        //existingobj.Designation = item.Designation;
                        //dbcont.Entry(existingobj).CurrentValues.SetValues(item);
                        db.Entry(existingobj).CurrentValues.SetValues(item);
                        db.SaveChanges();
                    }
                }

            }
            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        }

        public ActionResult DeleteProvinceGeneralSecretary(int id)
        {
            if (Session["username"] == null)
            {
                return RedirectToAction("Login");
            }
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Tbl_ProGeneralSecretary.FirstOrDefault(e => e.ProvGenSecretary_Id == id);
                if (data != null)
                {
                    dbcont.Tbl_ProGeneralSecretary.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        #endregion

        public List<tblConfigSetting> GetConfingSettings()
        {
            string cachekey = "ConfigCache";
            ObjectCache objectCache = MemoryCache.Default;

            if (objectCache.Contains(cachekey) && objectCache[cachekey] != null)
            {
                return ((List<tblConfigSetting>)objectCache[cachekey]);
            }
            else
            {
                var ConfigSettings = dbcont.tblConfigSetting.ToList();
                CacheItemPolicy cacheItemPolicy = new CacheItemPolicy();
                cacheItemPolicy.AbsoluteExpiration = DateTime.Now.AddHours(1.0);
                objectCache.Add(cachekey, ConfigSettings, cacheItemPolicy);
                return ConfigSettings;
            }
        }

        public List<tbl_Province> Getprovincelist()
        {
            string cacheprovince = "ProvinceCache";
            ObjectCache objectCache = MemoryCache.Default;
            if (objectCache.Contains(cacheprovince) && objectCache[cacheprovince] != null)
            {var a = ((List<tbl_Province>)objectCache[cacheprovince]);
                return ((List<tbl_Province>)objectCache[cacheprovince]);
            }
            else
            {
                var tblprovince = dbcont.tbl_Province.ToList();
                CacheItemPolicy cacheItemPolicy = new CacheItemPolicy();
                cacheItemPolicy.AbsoluteExpiration = DateTime.Now.AddHours(1.0);
                objectCache.Add(cacheprovince, tblprovince, cacheItemPolicy);
                return tblprovince;
            }
        }

        public List<PersonelDetailscachetbl> GetPersonelDetaisl()
        {
            string cachepersonel = "PersonelCache";

            ObjectCache objectCache = MemoryCache.Default;

            if (objectCache.Contains(cachepersonel) && objectCache[cachepersonel] != null)
            {
                return ((List<PersonelDetailscachetbl>)objectCache[cachepersonel]);
            }
            else
            {
                List<PersonelDetailscachetbl> personels = new List<PersonelDetailscachetbl>();
                personels = GetDashboardData();
                CacheItemPolicy cacheItemPolicy = new CacheItemPolicy();
                cacheItemPolicy.AbsoluteExpiration = DateTime.Now.AddHours(1.0);
                objectCache.Add(cachepersonel, personels, cacheItemPolicy);
                return personels;
            }
        }

        public List<PersonelDetailscachetbl> GetDashboardData()
        {
            string CandidateForId = "";
            string PreNovForId = "";
            string NovIstYear = "";
            string NovIIndYear = "";
            string DyKey1 = "";
            string DyKey2 = "";

            var configData = GetConfingSettings();
            string Deathsepcount = "";
            foreach (var item in configData)
            {
                if (item.strConfigKey == "CandidateFormationId")
                    CandidateForId = (item.strConfigValue);
                if (item.strConfigKey == "PrenovitiateFormationId")
                    PreNovForId = (item.strConfigValue);
                if (item.strConfigKey == "Novitiate 1st Year")
                    NovIstYear = (item.strConfigValue);
                if (item.strConfigKey == "Novitiate 2nd Year")
                    NovIIndYear = (item.strConfigValue);
                if (item.strConfigKey == "TemporaryVows")
                    DyKey1 = (item.strConfigValue);
                if (item.strConfigKey == "PerpetualVows")
                    DyKey2 = (item.strConfigValue);
                if (item.strConfigKey == "IsDeathandSep")
                    Deathsepcount = item.strConfigValue;
            }

            List<TempClass> tmpObjects = null;
            Task t1 = Task.Run(() => tmpObjects = dbcont.Tbl_formationsDetails.Where(x => (x.StageOfFormation == CandidateForId || x.StageOfFormation == PreNovForId || x.StageOfFormation == NovIstYear || x.StageOfFormation == NovIIndYear || x.StageOfFormation == DyKey1 || x.StageOfFormation == DyKey2) && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Select(x => new TempClass { MemberId = x.MemberId, StageOfFormation = x.StageOfFormation, Provincename = x.ProvinceName }).ToList());

            ////Task.WaitAll(t1);

            //tmpObjects = dbcont.Tbl_formationsDetails.Where(x => (x.StageOfFormation == CandidateForId || x.StageOfFormation == PreNovForId || x.StageOfFormation == NovIstYear || x.StageOfFormation == NovIIndYear || x.StageOfFormation == DyKey1 || x.StageOfFormation == DyKey2) && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).Select(x => new TempClass { MemberId = x.MemberId, StageOfFormation = x.StageOfFormation, Provincename = x.ProvinceName }).ToList();

            var appointmenttype = "";
            List<TempPersonelDataViewmodel> personelDataViewmodels = null;
            Task t2 = Task.Run(() => personelDataViewmodels = (from pd in db.tbl_PersonalDetails
                                                               from pr in db.tbl_Primarydetails
                                                               from po in db.tbl_Province
                                                               where pd.MemberID == pr.MemberId && pd.ProvinceName == po.Id.ToString()

                                                               select new TempPersonelDataViewmodel
                                                               {
                                                                   MemberID = pd.MemberID,
                                                                   Name = pd.Name,
                                                                   SirName = pd.SirName,
                                                                   PersonalDetailsId = pd.PersonalDetailsId,
                                                                   DOB = pr.DOB,
                                                                   UploadPhoto = pr.UploadPhoto,
                                                                   Provincename = pd.ProvinceName,
                                                                   NameBaptismial = pr.Baptismialname,
                                                                   Country = pr.country,
                                                                   FileNo = pd.FileNo,
                                                                   PlaceOfBirth = pr.placeofbirth,
                                                                   Nationality = pr.Nationality,
                                                                   MobileNo = pr.mobilenumber,
                                                                   EmailId = pd.EmailID,
                                                                   AppiontmentType = appointmenttype,
                                                                   GenFileNo = pd.GenFileNo,
                                                                   Image = pr.UploadPhoto,
                                                                   Continent = pr.Continent,
                                                                   MotherTongue = pr.mothertounge,
                                                                   District = pr.district,
                                                                   City = pr.city,
                                                                   State = pr.state,
                                                                   NameofProvince = po.ProvinceName,
                                                                   Diedcheck = pd.Diedcheck,
                                                                   Sapcheck = pd.Sapcheck,
                                                                   Archivecheck = pd.Archivecheck,
                                                                   IsTransfer = pd.IsTransfer,
                                                                   IsDeleted = pd.IsDeleted
                                                               }).ToList());


            //DbSet<tbl_SeperationFromTheCongregation> tblseprationfromcongregation = null;
            //Task t3 = Task.Run(() => tblseprationfromcongregation = dbcont.tbl_SeperationFromTheCongregation);

            List<PersonalDetailsViewModel> personalDetailsViewModels = new List<PersonalDetailsViewModel>();
            Task t3 = Task.Run(() => personalDetailsViewModels = (from sr in dbcontext.tbl_SeperationFromTheCongregation
                                                                  from pr in dbcontext.tbl_PersonalDetails
                                                                  from pn in dbcontext.tbl_Province
                                                                  where sr.MemberID == pr.MemberID && sr.ProvinceName == pn.Id.ToString()
                                                                  select new PersonalDetailsViewModel
                                                                  {
                                                                      Name = pr.Name,
                                                                      MemberID = pr.MemberID,
                                                                      ProvinceName = sr.ProvinceName,
                                                                      SurName = pr.SirName,
                                                                      Title = sr.Title,
                                                                      age = sr.SeperationAge,
                                                                      Date = sr.SeperationDate,
                                                                      Description = sr.Describtion,
                                                                      Provinceid = pn.ProvinceName
                                                                  }
                                                                 ).ToList());

            List<TempDeathviewmodel> tempDeathviewmodels = null;

            Task t5 = Task.Run(() => tempDeathviewmodels = (from dt in dbcont2.tbl_Passed
                                                            from pd in dbcont2.tbl_PersonalDetails
                                                            from pn in dbcont2.tbl_Province
                                                            where dt.MemberID == pd.MemberID && dt.ProvinceName == pn.Id.ToString()
                                                            select new TempDeathviewmodel
                                                            {
                                                                MemberID = pd.MemberID,
                                                                Name = pd.Name,
                                                                SirName = pd.SirName,
                                                                PersonalDetailsId = pd.PersonalDetailsId,
                                                                Date = dt.Date,
                                                                Spare1 = dt.Spare1,
                                                                Provincename = pd.ProvinceName,
                                                                age = dt.EAge,
                                                                time = dt.Time,
                                                                Cause = dt.Cause,
                                                                LastNatureRites = dt.LastNatureRites,
                                                                LastPlaceRites = dt.LastPlaceRites,
                                                                Description = dt.Description,
                                                                CurrentStatusFor = dt.CurrentStatusFor,
                                                                ProvinceName = pn.ProvinceName
                                                            }).ToList());


            Task.WaitAll(t1, t2, t3, t5);
            List<string> MemberInCandi = new List<string>();
            List<string> MemberInNovi = new List<string>();
            //List<string> MemberInDead = new List<string>();
            //List<string> MemberInSep = new List<string>();
            List<string> MemberInNovIst = new List<string>();
            List<string> MemberInNovIInd = new List<string>();
            List<string> firstvow = new List<string>();
            List<string> finalvow = new List<string>();
            List<TempClass> MemberIncandidates = new List<TempClass>();
            List<TempClass> MemberInnovitiates = new List<TempClass>();
            List<TempClass> MemberIstNovitiate = new List<TempClass>();
            List<TempClass> MemberInIIndNovitiate = new List<TempClass>();
            List<TempClass> MemberInfirstvow = new List<TempClass>();
            List<TempClass> MemberInFinalvow = new List<TempClass>();

            foreach (TempClass formation in tmpObjects)
            {
                if (CandidateForId.Contains(formation.StageOfFormation))// && formation.Status == "1")
                {
                    MemberInCandi.Add(formation.MemberId);
                    MemberIncandidates.Add(formation);
                }
                //if (NovForId.Contains(formation.StageOfFormation) && formation.Status == "1" && formation.Diedcheck == null && formation.Sapcheck == null && formation.Archivecheck == null)
                //{

                //    MemberInNovi.Add(formation.MemberId);
                //}
                if (NovIstYear.Contains(formation.StageOfFormation))// && formation.Status == "1" && formation.Diedcheck == null && formation.Sapcheck == null && formation.Archivecheck == null)
                {
                    MemberInNovIst.Add(formation.MemberId);
                    MemberIstNovitiate.Add(formation);
                }

                if (formation.StageOfFormation == NovIIndYear)
                {
                    MemberInNovIInd.Add(formation.MemberId);
                    MemberInIIndNovitiate.Add(formation);
                }

                //if (NovIIndYear.Contains(formation.StageOfFormation))// && formation.Status == "1" && formation.Diedcheck == null && formation.Sapcheck == null && formation.Archivecheck == null)
                //{

                //    MemberInNovIInd.Add(formation.MemberId);
                //    MemberInIIndNovitiate.Add(formation);
                //}
                if (DyKey1.Contains(formation.StageOfFormation))// && formation.Status == "1" && formation.Diedcheck == null && formation.Sapcheck == null && formation.Archivecheck == null)
                {
                    firstvow.Add(formation.MemberId);
                    MemberInfirstvow.Add(formation);
                }
                if (DyKey2.Contains(formation.StageOfFormation))// && formation.Status == "1" && formation.Diedcheck == null && formation.Sapcheck == null && formation.Archivecheck == null)
                {
                    finalvow.Add(formation.MemberId);
                    MemberInFinalvow.Add(formation);
                }

            }



            var MemberInSep = personalDetailsViewModels.Select(x => x.MemberID).ToList();
            var MemberInDead = tempDeathviewmodels.Select(x => x.MemberID).ToList();
            //var data = tblpersoneldetails.Count();
            //List<tbl_PersonalDetails> personeldata = new List<tbl_PersonalDetails>();
            var personeldata = personelDataViewmodels.Where(x => !(MemberInNovIst.Contains(x.MemberID)) && !(MemberInNovIInd.Contains(x.MemberID)) && !(MemberInCandi.Contains(x.MemberID)) && !(MemberInSep.Contains(x.MemberID)) && !(MemberInDead.Contains(x.MemberID)) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck != "Null" && x.IsTransfer != "yes" && x.IsDeleted == false).ToList();

            List<PersonelDetailscachetbl> personelDetailscachetbls = new List<PersonelDetailscachetbl>();
            //PersonelDetailscachetbl personelDetailscachetbl = new PersonelDetailscachetbl();
            personelDetailscachetbls.Add(new PersonelDetailscachetbl
            {
                MemberInCandi = MemberInCandi,
                MemberInNovi = MemberInNovi,
                MemberInNovIst = MemberInNovIst,
                MemberInNovIInd = MemberInNovIInd,
                firstvow = firstvow,
                finalvow = finalvow,
                Personeldetails = personeldata,
                personalDetailsViewModels = personalDetailsViewModels.ToList(),
                Deathdata = tempDeathviewmodels,
                MemberIncandidates = MemberIncandidates,
                MemberIstNovitiate = MemberIstNovitiate,
                MemberInIIndNovitiate = MemberInIIndNovitiate,
                MemberInfirstvow = MemberInfirstvow,
                MemberInFinalvow = MemberInFinalvow
            });

            return personelDetailscachetbls;
        }


        private List<JubliiiData> GetJubliiiDatas(string provinceName = null)
        {
            var validYears = new List<string>
            {
                DateTime.Now.AddYears(-25).Year.ToString(),
                DateTime.Now.AddYears(-50).Year.ToString(),
                DateTime.Now.AddYears(-75).Year.ToString(),

            };

            var stageOfFormation = dbcontext.tblConfigSetting.Where(w => w.strConfigKey == "TemporaryVows")
                .Select(s => s.strConfigValue).FirstOrDefault();


            var query = (from p in dbcontext.tbl_PersonalDetails

                         join f in dbcontext.Tbl_formationsDetails
                         on p.MemberID equals f.MemberId into TempFd
                         from Fd in TempFd.DefaultIfEmpty()

                         join pass in dbcontext.tbl_Passed on p.MemberID
                         equals pass.MemberID into Temppass
                         from pass in Temppass.DefaultIfEmpty()

                         join sepa in dbcontext.tbl_SeperationFromTheCongregation
                         on p.MemberID equals sepa.MemberID into Tempsepa
                         from sepa in Tempsepa.DefaultIfEmpty()

                         where pass == null
                         && sepa == null
                         && Fd.Diedcheck != "Active"
                         && Fd.Sapcheck != "Active"
                         && Fd.StageOfFormation == stageOfFormation

                         select new JubliiiData()
                         {
                             MemberID = p.MemberID,
                             Name = p.Name,
                             SurName = p.Name,
                             UploadPhoto = p.Spare1,
                             ProvinceName = p.ProvinceName,
                             Date = Fd.VowsDate,
                         }).Where(w => validYears.Any(a => w.Date.Contains(a)));

            var jubliiiDatas = query.ToList();

            if (!string.IsNullOrWhiteSpace(provinceName))
                jubliiiDatas = jubliiiDatas.Where(w => w.ProvinceName == provinceName).ToList();

            foreach (var jubliii in jubliiiDatas)
            {

                DateTime TempDate;

                DateTime.TryParse(jubliii.Date, out TempDate);

                jubliii.JubliDate = TempDate;

                if (TempDate.Year == DateTime.Now.AddYears(-25).Year)
                    jubliii.JubliiType = @HomeController.GetControlTextByControlId("Silver Jubilee"); ;


                if (TempDate.Year == DateTime.Now.AddYears(-50).Year)
                    jubliii.JubliiType = @HomeController.GetControlTextByControlId("Golden Jubilee"); 

                if (TempDate.Year == DateTime.Now.AddYears(-75).Year)
                    jubliii.JubliiType = @HomeController.GetControlTextByControlId("Platinum Jubilee"); 


            }

            jubliiiDatas = jubliiiDatas.Where(w => !string.IsNullOrEmpty(w.JubliiType)).ToList();


            return jubliiiDatas;
        }

        


    }


    public class AllProvinceCouncilModel
    {
        public string MemberName { get; set; }
        public string DesignationName { get; set; }
        public string count { get; set; }
    }
    public class ArchiveModel
    {
        public string ArchiveId { get; set; }
        public string ProvinceName { get; set; }
        public string MemberID { get; set; }
        public string Name { get; set; }
        public string FileNo { get; set; }
        public string ArchiveNo { get; set; }

    }

    public class GeneralFileNoModel
    {
        public string GenNoId { get; set; }
        public string ProvinceName { get; set; }
        public string MemberID { get; set; }
        public string Name { get; set; }
        public string FileNo { get; set; }
        public string GenFileNo { get; set; }

    }
    class MeetingMinutes
    {
    }

    public class GetProvinceName
    {
        public string Id { get; set; }
        public string Provincename { get; set; }
        public string Place { get; set; }
    }
}

