using AutoMapper;
using ClosedXML.Excel;
using Generalate.AutoMapping;
using Generalate.Helpers;
using Generalate.Models;
using Generalate.Models.ViewModels;
using Generalate.ViewModel;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.Entity;
using System.Data.SqlClient;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Runtime.Caching;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using System.Web;
using System.Web.Mvc;

namespace Generalate.Controllers
{
    [CustomAuthenticationFilter]
    public class MemberController : Controller
    {
        GeneralDBContext dbcont = new GeneralDBContext();
        // GET: Member
        public JsonResult CheckAvaibility(string userdata)
        {
            System.Threading.Thread.Sleep(200);
            var SearchData = dbcont.tbl_Primarydetails.Where(x => x.Baptismialname == userdata).SingleOrDefault();
            var SearchData2 = dbcont.tbl_Primarydetails.Where(x => x.Primaryid.ToString() == SearchData.Primaryid.ToString()).SingleOrDefault();
            if (SearchData2 != null)
            {
                return Json(1);
            }
            else
            {
                return Json(0);
            }
        }
        public JsonResult GetDioceseById(string Id)
        {
            try
            {
                int id = Convert.ToInt16(Id);
                var DioceseId = dbcont.tbl_Diocese.Where(x => x.Id == id).FirstOrDefault();
                var allDioInst = dbcont.tbl_DioceseInst.Where(x => x.DioId == DioceseId.DioId).ToList();
                return Json(allDioInst, JsonRequestBehavior.AllowGet);
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                //throw;
            }

        }
        public JsonResult GetCongregationById(string Name)
        {
            try
            {
                //int id = Convert.ToInt16(Id);
                var Congregation = dbcont.tbl_ComOSInstitute.Where(x => x.ComOsName == Name).ToList();
                return Json(Congregation, JsonRequestBehavior.AllowGet);
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                //throw;
            }

        }
        public ActionResult MemberReport()
        {
            string currentUser = Convert.ToString(Session["username"]);
            string loginuserid = Convert.ToString(Session["loginuserid"]);
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").ToList();
            ViewBag.allDesignation = allDesignation;

            var CountryList = dbcont.tbl_Primarydetails.Select(x => x.Knowname).ToList();
            ViewBag.ctr = CountryList;

            var allDesignation1 = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType1 = allDesignation1;



            if (Session["username"].ToString() == "admin")
            {
                var tbl_Archive = dbcont.tbl_Archive.ToList();
                ViewBag.tbl_Archive = tbl_Archive;
            }
            else
            {
                var tbl_Archive = dbcont.tbl_Archive.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.tbl_Archive = tbl_Archive;
            }

            return View();
        }
        public ActionResult PrintMemberReport()
        {
            var tblsepration = dbcont.tbl_SeperationFromTheCongregation.ToList();
            var tblformation = dbcont.Tbl_formationsDetails.ToList();
            //var url = Request.UrlReferrer.AbsoluteUri;
            try
            {
                foreach (var item in tblsepration)
                {
                    var formationdata = tblformation.Where(x => x.MemberId == item.MemberID).ToList();
                    if (formationdata.Count > 0)
                    {
                        foreach (var obj in formationdata)
                        {
                            obj.Sapcheck = "Active";
                            dbcont.SaveChanges();
                            //var formation = formationdata.FirstOrDefault(x => x.MemberId == obj.MemberId);
                            //if (formation.Sapcheck != "Active")
                            //{
                            //    formation.Sapcheck = "Active";
                            //    dbcont.SaveChanges();
                            //}
                        }
                    }
                }
                //return View();
                //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                throw;
            }

            return View();
        }
        public JsonResult GetAllMember()
        {
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes")
                               .Select(x => new { x.Name, x.PersonalDetailsId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes")
                              .Select(x => new { x.Name, x.PersonalDetailsId }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllPersions123()
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                //var allRecords = dbcont.tbl_Primarydetails
                //                 .Select(x => new { x.Knowname, x.SurName, x.MemberId }).ToList();
                var allRecords = dbcont.tbl_PersonalDetails
                                 .Select(x => new { x.Name, x.SirName, x.MemberID }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                //var allRecords = dbcont.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser)
                //                 .Select(x => new { x.Knowname, x.SurName, x.MemberId }).ToList();
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser)
                                 .Select(x => new { x.Name, x.SirName, x.MemberID }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetAllPersions1(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                //var allRecords = dbcont.tbl_Primarydetails
                //                 .Where(x => x.ProvinceName == province)
                //                 .Select(x => new { x.Knowname, x.SurName, x.MemberId, x.ProvinceName }).ToList();
                var allRecords = dbcont.tbl_PersonalDetails
                                 .Where(x => x.ProvinceName == province)
                                 .Select(x => new { x.Name, x.SirName, x.MemberID, x.ProvinceName }).ToList();
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                //var allRecords = dbcont.tbl_Primarydetails
                //         .Where(x => x.ProvinceName == currentUser)
                //         .Select(x => new { x.Knowname, x.SurName, x.MemberId, x.ProvinceName }).ToList();
                var allRecords = dbcont.tbl_PersonalDetails
                         .Where(x => x.ProvinceName == currentUser)
                         .Select(x => new { x.Name, x.SirName, x.MemberID, x.ProvinceName }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllDesignationandInstitution()
        {
            //var allRecords = dbcont.DataListItems
            //    .Where(x => x.DataListName == "Designation" && x.Name != null && x.Name != "").ToList();

            var allRecords = dbcont.Tbl_CommunityAppointmentDetails.ToList();

            return Json(allRecords, JsonRequestBehavior.AllowGet);
        }
        public JsonResult BindDrpInstitution1()
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.Tbl_ParisInstitutionDetails
                .Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.Name != null && x.Name != "").ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var provincename = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == currentUser)?.ProvinceName;
                var allRecords = dbcont.Tbl_ParisInstitutionDetails
                .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == provincename && x.Type == "Institution" && x.Name != null && x.Name != "").ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult BindDrpInstitution(string province)
        {
            string currentUser = Convert.ToString(Session["username"]);

            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.Tbl_ParisInstitutionDetails
                .Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution" && x.Name != null && x.Name != "").ToList();
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allRecords = dbcont.Tbl_ParisInstitutionDetails
                .Where(x => x.ActiveCkeck == "Active" && x.ProvinceName == currentUser && x.Type == "Institution" && x.Name != null && x.Name != "").ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetPersionById(string id)
        {
            var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetPrimaryById(string id)
        {
            PersonalDetails pDetails = new PersonalDetails();
            pDetails.PersonPrimaryDetails = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == id);
            pDetails.PrsnDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == id);
            var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
            var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "5").FirstOrDefault();
            pDetails.ProfessionDay = allProfesionalFormationData?.FromDate;

            return Json(pDetails, JsonRequestBehavior.AllowGet);


        }
        public JsonResult AddPlace(string name, string frenchName)
        {
            try
            {
                Tbl_ProfessionPlace place = new Tbl_ProfessionPlace();
                place.CreatedBy = Convert.ToString(Session["loginuserid"]);
                place.Name = name;
                place.Name_French = frenchName;
                dbcont.Tbl_ProfessionPlace.Add(place);
                dbcont.SaveChanges();
                setcookies("200");
                return Json("{status:'ok'}", JsonRequestBehavior.AllowGet);

            }
            catch (Exception)
            {
                setcookies("204");
                return Json("{status:'error'}", JsonRequestBehavior.AllowGet);
                throw;
            }
        }

        public JsonResult GetPrimaryById1(string id)
        {
            var personalDetails = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.Primaryid.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetPersonalById(string id)
        {
            var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == id);
            personalDetails.ProvinceName = !string.IsNullOrEmpty(personalDetails.ProvinceName) ? dbcont.tbl_Province.Where(x => x.Id.ToString() == personalDetails.ProvinceName).Select(x => x.ProvinceName).FirstOrDefault() : null;
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllFamilyById(string id)
        {
            var personalDetails = dbcont.FamilyDetails.Where(x => x.MemberId == id).ToList();
            if (personalDetails.Count > 0)
            {
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllFamilyById1(string id)
        {
            var personalDetails = dbcont.FamilyDetails.FirstOrDefault(x => x.Id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllOffDocById(string id)
        {
            var personalDetails = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == id).ToList();
            if (personalDetails.Count > 0)
            {
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllOffDocById1(string id)
        {
            var personalDetails = dbcont.tbl_OfficialDocument.FirstOrDefault(x => x.Id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllClustration(string id)
        {
            var clustration = dbcont.Claustrations.FirstOrDefault(x => x.MemberId.ToString() == id);
            return Json(clustration, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllRetirement(string id)
        {
            var retirement = dbcont.tbl_Retirement.FirstOrDefault(x => x.MemberID.ToString() == id);
            return Json(retirement, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetAllProfession(string id)
        {
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();

            var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
            var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "1" || x.StageOfFormation == "5" || x.StageOfFormation == "4" || x.StageOfFormation == "6").ToList();
            allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
            foreach (var item in allFormationData)
            {
                var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                allFormationD.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                    Title = item.Title,
                    Community = item.Community,
                    Description = item.Description,
                    Id = item.Id,
                    FileName = item.FileName,
                    VowsDate = item.VowsDate
                });
                //  allFormationD.Add(item);
            }
            foreach (var item in allProfesionalFormationData)
            {
                var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                allFormationDProfession.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                    Title = item.Title,
                    Community = item.Community,
                    Description = item.Description,
                    Id = item.Id,
                    FileName = item.FileName,
                    VowsDate = item.VowsDate
                });
                //  allFormationD.Add(item);
            }

            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();

            allVows = allFormationDProfession.ToList();
            return Json(allVows, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllScramentById(string id)
        {
            var personalDetails = dbcont.Sacraments.Where(x => x.MemberId == id).ToList();
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllScramentById1(string id)
        {
            var personalDetails = dbcont.Sacraments.FirstOrDefault(x => x.Id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllHealthById1(string id)
        {
            var personalDetails = dbcont.tbl_Health.FirstOrDefault(x => x.HealthId.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllFormationById1(string id)
        {
            var personalDetails = dbcont.Tbl_formationsDetails.Where(x => x.Id.ToString() == id).ToList();
            var allformationname = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            foreach (var item in personalDetails)
            {
                var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                allFormationD.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    Community = item.Community,
                    Formators = item.Formators,
                    StageOfFormation = formationnames.Name,
                    Description = item.Description,
                    FileName = item.FileName
                });
            }
            return Json(allFormationD, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllAcademicsById1(string id)
        {
            var personalDetails = dbcont.tbl_Academy.FirstOrDefault(x => x.acaid.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllAppoinmentById1(string id)
        {
            var personalDetails = dbcont.Appointments.Where(x => x.Id.ToString() == id).ToList();
            List<Appointments> AllDatas = new List<Appointments>();

            foreach (var item in personalDetails)
            {
                AllDatas.Add(new Appointments
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    DesignationType = item.DesignationType,
                    Diocese = GetDioceseData(item.Diocese),
                    ParisData = GetParisData(item.ParisData),
                    InstitutionType = GetParisInstitutionDetailsNames(item.InstitutionType),
                    CommunityType = item.CommunityType,
                    OSProvince = GetOutSideProvinceData(item.OSProvince),
                    OSCongName = GetOutSideCongData(item.OSCongName),
                    OSCongProvince = GetOutSideProvData(item.OSCongProvince),
                    Description = item.Description,
                    doc = item.doc,
                });
            }
            return Json(AllDatas, JsonRequestBehavior.AllowGet);
        }
        public string GetParisInstitutionDetailsNames(string institutiontype)
        {
            List<string> insNames = new List<string>();
            var ParisInstitutionDetails = dbcont.Tbl_ParisInstitutionDetails;
            string[] institutiontypes = institutiontype.Split(',');
            foreach (var insttype in institutiontypes)
            {
                var data = ParisInstitutionDetails.FirstOrDefault(x => x.Id.ToString() == insttype);
                if (data != null)
                {
                    insNames.Add(data.Name);
                }
            }
            return String.Join(",", insNames);
        }
        public string GetParisData(string parishname)
        {
            List<string> ParishNames = new List<string>();
            var tbl_DioceseParish = dbcont.tbl_DioceseParish;
            if (parishname != null)
            {
                string[] parishname1 = parishname.Split(',');
                foreach (var parish in parishname1)
                {
                    var data = tbl_DioceseParish.FirstOrDefault(x => x.Id.ToString() == parish);
                    if (data != null)
                    {
                        ParishNames.Add(data.ParishName);
                    }
                }
            }
            return String.Join(",", ParishNames);
        }
        public string GetDioceseData(string diocesename)
        {
            List<string> DioceseNames = new List<string>();
            var tbl_Diocese = dbcont.tbl_Diocese;
            string[] diocesename1 = diocesename.Split(',');
            foreach (var parish in diocesename1)
            {
                var data = tbl_Diocese.FirstOrDefault(x => x.Id.ToString() == parish);
                if (data != null)
                {
                    DioceseNames.Add(data.DioceseName);
                }
            }
            return String.Join(",", DioceseNames);
        }
        public string GetOutSideProvinceData(string outsideprovname)
        {
            List<string> ProvinceNames = new List<string>();
            var tbl_Province = dbcont.tbl_Province;
            string[] outsideprovname1 = outsideprovname.Split(',');
            foreach (var province in outsideprovname1)
            {
                var data = tbl_Province.FirstOrDefault(x => x.Id.ToString() == province);
                if (data != null)
                {
                    ProvinceNames.Add(data.ProvinceName);
                }
            }
            return String.Join(",", ProvinceNames);
        }
        public string GetOutSideCongData(string outsidecongname)
        {
            List<string> OutSideCongNames = new List<string>();
            var ComOutSide = dbcont.ComOutSide;
            string[] outsidecongname1 = outsidecongname.Split(',');
            foreach (var community in outsidecongname1)
            {
                var data = ComOutSide.FirstOrDefault(x => x.Id.ToString() == community);
                if (data != null)
                {
                    OutSideCongNames.Add(data.CommunityName);
                }
            }
            return String.Join(",", OutSideCongNames);
        }
        public string GetOutSideProvData(string outsideproviname)
        {
            List<string> ProvinceNames1 = new List<string>();
            var ComOSProvince = dbcont.ComOSProvince;
            string[] outsideproviname1 = outsideproviname.Split(',');
            foreach (var province in outsideproviname1)
            {
                var data = ComOSProvince.FirstOrDefault(x => x.id.ToString() == province);
                if (data != null)
                {
                    ProvinceNames1.Add(data.ProvinceName);
                }
            }
            return String.Join(",", ProvinceNames1);
        }
        public JsonResult GetAllRemarksById1(string id)
        {
            var personalDetails = dbcont.Tbl_Complains.FirstOrDefault(x => x.Id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllRetirementById1(string id)
        {
            var personalDetails = dbcont.tbl_Retirement.FirstOrDefault(x => x.RetirementId.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllInsuranceById1(string id)
        {
            var personalDetails = dbcont.tbl_Insurance.FirstOrDefault(x => x.Id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllSaprationById1(string id)
        {
            var personalDetails = dbcont.tbl_SeperationFromTheCongregation.FirstOrDefault(x => x.SeperationId.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllPassedById1(string id)
        {
            var personalDetails = dbcont.tbl_Passed.FirstOrDefault(x => x.PassedId.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllArchiveById1(string id)
        {
            var personalDetails = dbcont.tbl_Archive.FirstOrDefault(x => x.Id.ToString() == id);
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllAppoinmentByDesignation(string name, string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                //var personalDetails = dbcont.Appointments.Where(x => x.DesignationType.ToLower().Contains(name.ToLower())).ToList();
                //var personalDetails = dbcont.Appointments.Where(x => x.DesignationType.ToLower().Contains(name.ToLower())).ToList();
                var personalDetails = dbcont.Appointments.Where(x => x.DesignationType.ToLower() == (name.ToLower())).ToList();
                if (province != "0")
                {
                    personalDetails = personalDetails.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    personalDetails = personalDetails.ToList();
                }

                var allPertionalecords = dbcont.tbl_PersonalDetails;
                var AllData = new List<BasedOnDesignationDataViewModel>();
                foreach (var item in personalDetails)
                {
                    var name1 = allPertionalecords.FirstOrDefault(x => x.MemberID == item.MemberId);
                    if (name1 != null)
                    {
                        AllData.Add(new BasedOnDesignationDataViewModel()
                        {
                            Name = name1.Name,
                            SurName = name1.SirName,
                            Institutions = item.InstitutionType,
                            FromDate = item.FromDate,
                            ToDate = item.ToDate
                        });
                    }


                }
                return Json(AllData, JsonRequestBehavior.AllowGet);
            }
            else
            {
                //var personalDetails = dbcont.Appointments.Where(x => x.ProvinceName == currentUser && x.DesignationType.ToLower().Contains(name.ToLower())).ToList();
                var personalDetails = dbcont.Appointments.Where(x => x.DesignationType.ToLower() == (name.ToLower())).ToList();
                var allPertionalecords = dbcont.tbl_PersonalDetails;
                var AllData = new List<BasedOnDesignationDataViewModel>();
                foreach (var item in personalDetails)
                {

                    var personelname = allPertionalecords.FirstOrDefault(x => x.MemberID == item.MemberId);
                    if (personelname != null)
                    {
                        if (personelname.ProvinceName == currentUser)
                        {
                            AllData.Add(new BasedOnDesignationDataViewModel()
                            {
                                Name = personelname.Name,
                                SurName = personelname.SirName,
                                Institutions = item.InstitutionType,
                                FromDate = item.FromDate,
                                ToDate = item.ToDate
                            });
                        }

                    }


                }
                return Json(AllData, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllInstitutionByInstitution(string name)
        {
            var personalDetails = dbcont.Appointments.Where(x => x.InstitutionType.ToLower().Contains(name.ToLower())).ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();
            var alldata = new List<getAllInstitution>();
            foreach (var item in personalDetails)
            {
                string Name = null;
                string SirName = null;
                foreach (var obj in primarydetails)
                {
                    if (obj.MemberId == item.MemberId)
                    {
                        Name = obj.Knowname == null ? string.Empty : obj.Knowname;
                    }
                    if (obj.MemberId == item.MemberId)
                    {
                        SirName = obj.Baptismialname == null ? string.Empty : obj.Baptismialname;
                    }
                }

                alldata.Add(new getAllInstitution()
                {
                    Name = Name,
                    SirName = SirName,
                    Designation = item.DesignationType
                });
            }
            return Json(alldata.Where(x => x.Name != null && x.Name != "").ToList(), JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllSeprationById(string name)
        {
            var personalDetails = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID.ToLower().Contains(name.ToLower())).ToList();
            return Json(personalDetails, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetMembersInfo(string radioButton, string fromdate, string todate, string age)
        {
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var membersDetail = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Sapcheck == null && x.Diedcheck == null).ToList();
                return Json(membersDetail, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var membersDetail = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser && x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.Sapcheck == null && x.Diedcheck == null).ToList();
                return Json(membersDetail, JsonRequestBehavior.AllowGet);
            }
        }
        public object MemberID { get; private set; }
        public ActionResult AddMember()
        {
            string currentuser = Convert.ToString(Session["username"]);
            string currentprovinceId = Convert.ToString(Session["provinceId"]);
            string currentloginID = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentuser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            if (Session["username"].ToString() == "admin")
            {
                var MemberId = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentuser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            List<tbl_PersonalDetails> AllMemberData = new List<tbl_PersonalDetails>();
            List<tbl_PersonalDetails> AllMemberDataOut = new List<tbl_PersonalDetails>();
            var allProvince = dbcont.tbl_Province.ToList();

            if (Session["username"].ToString() == "admin")
            {
                AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
            }
            else
            {
                AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && x.ProvinceName == currentuser).ToList();
            }
            foreach (var item in AllMemberData)
            {
                var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                AllMemberDataOut.Add(new tbl_PersonalDetails
                {
                    MemberID = item.MemberID,
                    Name = item.Name,
                    SirName = item.SirName,
                    Spare1 = item.Spare1,
                    ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                    PersonalDetailsId = item.PersonalDetailsId

                });
            }
            ViewBag.AllMemberData = AllMemberDataOut;

            return View();
        }

        [HttpGet]
        public async Task<ActionResult> GetMember(string provinceId = null)
        {
            if (Session["username"].ToString() == "admin")
            {
                if (provinceId == "0")
                {
                    provinceId = null;
                }
                ViewBag.ProvinceList = await dbcont.tbl_Province.Select(x => new SelectListItem
                {
                    Value = x.Id.ToString(),
                    Text = x.ProvinceName
                }).ToListAsync();

                ViewBag.ProvinceId = provinceId;
            }
            else
            {
                string currentuser = Convert.ToString(Session["username"]);
                ViewBag.ProvinceList = await dbcont.tbl_Province.Where(x => x.Id.ToString() == currentuser).Select(x => new SelectListItem
                {
                    Value = x.Id.ToString(),
                    Text = x.ProvinceName
                }).ToListAsync();

                ViewBag.ProvinceId = currentuser;
            }

            return View();
        }
        [HttpPost]
        public ActionResult AddMember(tbl_PersonalDetails tbl_PersonalDetails, HttpPostedFileBase Spare1)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var provinceInfo = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == tbl_PersonalDetails.ProvinceName);
                if (Spare1 != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(Spare1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Primarydetails"), fileName);
                        Spare1.SaveAs(path);
                        tbl_PersonalDetails.Spare1 = fileName;
                    }
                }
                tbl_PersonalDetails.MemberUnicId = Convert.ToString(Guid.NewGuid());

                //
                // var newMyId = tbl_ParisInstitutionDetails.MyId;
                var myId = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == tbl_PersonalDetails.ProvinceName).Any() ? dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.ProvinceName == tbl_PersonalDetails.ProvinceName).MemberID : "01";
                if (myId != "01")
                {
                    myId = myId.Split('/')[1];
                    long z = Convert.ToInt64(myId) + 1;
                    myId = (z < 10) ? provinceInfo.Place + "/0" + z.ToString() : provinceInfo.Place + "/" + z.ToString();
                }
                else
                {
                    myId = provinceInfo.Place + "/" + myId.ToString();
                }
                //

                tbl_PersonalDetails.MemberID = myId;
                //tbl_PersonalDetails.MemberID = provinceInfo.Place + tbl_PersonalDetails.MemberID;

                tbl_PersonalDetails.ProvinceCode = provinceInfo.Place;
                tbl_PersonalDetails.ProvinceName = Convert.ToString(provinceInfo.Id);
                tbl_PersonalDetails.CreatedBy = Convert.ToString(Session["loginuserid"]);

                dbcont.tbl_PersonalDetails.Add(tbl_PersonalDetails);
                dbcont.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> ViewAllMemberDetails()
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            try
            {
                List<tbl_PersonalDetails> AllMemberData = new List<tbl_PersonalDetails>();
                string currentUser = Convert.ToString(Session["username"]);
                if (Session["username"].ToString() == "admin")
                {
                    AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                }
                else
                {
                    AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && x.ProvinceName == currentUser).ToList();
                }
                ViewBag.AllMemberCount = AllMemberData.Count();
                return View();
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return RedirectToAction("Login");
            }
        }
        [HttpPost]
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGrid(string name, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails)
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
            string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            List<tbl_PersonalDetails> AllMemberData = new List<tbl_PersonalDetails>();
            List<tbl_PersonalDetails> AllMemberDataOut = new List<tbl_PersonalDetails>();
            var allProvince = dbcont.tbl_Province.ToList();
            string currentloginuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {

                List<Tbl_Cong> alldata = new List<Tbl_Cong>();

                AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.ProvinceName.Contains(SearchTxt) || x.Name.Contains(SearchTxt) || x.MemberID.Contains(SearchTxt) || x.SirName.Contains(SearchTxt) || x.FileNo.Contains(SearchTxt))).ToList();
                foreach (var item in AllMemberData)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllMemberDataOut.Add(new tbl_PersonalDetails
                    {
                        MemberID = item.MemberID,
                        Name = item.Name,
                        SirName = item.SirName,
                        Spare1 = item.Spare1,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        PersonalDetailsId = item.PersonalDetailsId,
                        FileNo = item.FileNo

                    });

                }
                var allins = AllMemberDataOut;
                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    allins = filteredData.ToList();
                }

                ViewBag.allinstitution = allins;
            }
            else
            {
                List<Tbl_Cong> alldata = new List<Tbl_Cong>();

                AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.ProvinceName == currentUser && x.Archivecheck == null && (x.ProvinceName.Contains(SearchTxt) || x.Mobile.Contains(SearchTxt))).ToList();
                foreach (var item in AllMemberData)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllMemberDataOut.Add(new tbl_PersonalDetails
                    {
                        MemberID = item.MemberID,
                        Name = item.Name,
                        SirName = item.SirName,
                        Spare1 = item.Spare1,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        PersonalDetailsId = item.PersonalDetailsId,
                        FileNo = item.FileNo

                    });

                }
                var allins = AllMemberDataOut;
                if (firstItem != null && lastItem != null)
                {
                    sbyte from = Convert.ToSByte(firstItem);
                    sbyte To = Convert.ToSByte(lastItem);
                    var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    allins = filteredData.ToList();
                }

                ViewBag.allinstitution = allins;
            }
            return PartialView("_AllMemberDetails");
            //return Json(new { Url = Url.Action("_InstitutionCreatedList", ViewBag.allinstitution) });
        }
        public JsonResult getAllMemberDetails(JqueryDatatableParam param, string provinceName)
        {
            if (provinceName == "0" || provinceName == "-- Select Name --")
            {
                provinceName = null;
            }
            try
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                List<tbl_PersonalDetails> AllMemberData = new List<tbl_PersonalDetails>();
                List<tbl_PersonalDetails> AllMemberDataOut = new List<tbl_PersonalDetails>();
                var allProvince = dbcont.tbl_Province.ToList();

                if (Session["username"].ToString() == "admin")
                {
                    AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                }
                else
                {
                    AllMemberData = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && x.ProvinceName == currentUser).ToList();
                }



                foreach (var item in AllMemberData)
                {
                    var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                    AllMemberDataOut.Add(new tbl_PersonalDetails
                    {
                        MemberID = item.MemberID,
                        Name = item.Name,
                        SirName = item.SirName,
                        Spare1 = item.Spare1,
                        ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                        PersonalDetailsId = item.PersonalDetailsId,
                        FileNo = item.FileNo

                    });

                }
                if (!string.IsNullOrEmpty(provinceName))
                {
                    AllMemberDataOut = AllMemberDataOut.Where(x => x.ProvinceName.Contains(provinceName)).ToList();
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    AllMemberDataOut = AllMemberDataOut.Where(x => !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.MemberID) && x.MemberID.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  ).ToList();
                }

                switch (param.iSortCol_0)
                {
                    case 0:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            AllMemberDataOut = AllMemberDataOut.OrderByDescending(x => x.ProvinceName).ToList();
                        else
                            AllMemberDataOut = AllMemberDataOut.OrderBy(x => x.ProvinceName).ToList();

                        break;
                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            AllMemberDataOut = AllMemberDataOut.OrderByDescending(x => x.MemberID).ToList();
                        else
                            AllMemberDataOut = AllMemberDataOut.OrderBy(x => x.MemberID).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            AllMemberDataOut = AllMemberDataOut.OrderByDescending(x => x.Name).ToList();
                        else
                            AllMemberDataOut = AllMemberDataOut.OrderBy(x => x.Name).ToList();

                        break;
                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            AllMemberDataOut = AllMemberDataOut.OrderByDescending(x => x.SirName).ToList();
                        else
                            AllMemberDataOut = AllMemberDataOut.OrderBy(x => x.SirName).ToList();

                        break;
                    case 4:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            AllMemberDataOut = AllMemberDataOut.OrderByDescending(x => x.FileNo).ToList();
                        else
                            AllMemberDataOut = AllMemberDataOut.OrderBy(x => x.FileNo).ToList();

                        break;

                    default:
                        break;
                }

                var data = AllMemberDataOut.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = AllMemberDataOut.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                // throw;
            }

        }
        public JsonResult GetAllNovandPP(JqueryDatatableParam param, string province, string NovitiateId)
        {
            try
            {
                if (province == "null")
                {
                    province = "0";
                }

                GeneralDBContext db = new GeneralDBContext();
                string currentUser = Convert.ToString(Session["username"]);
                string currentuserid = Convert.ToString(Session["loginuserid"]);
                var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
                var allRecords = new List<PersonalDetailsViewModel>();
                var allRecordsResponse = new List<PersonalDetailsViewModel>();
                var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
               .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

                //var memberIds = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();

                //if (Session["username"].ToString() == "admin")
                //{
                //    var data1 = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                //    var data = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "17" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                //    .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();


                if (Session["username"].ToString() == "admin")
                {
                    if (NovitiateId == "1")
                    {
                        var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                        var data21 = dbcont.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "13" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                        .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct().ToList();

                        foreach (var item in data21)
                        {
                            item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                            item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                            allRecords.Add(item);
                        }
                    }
                    else if (NovitiateId == "2")
                    {
                        var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                        var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && x.StageOfFormation == "14" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                        .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct().ToList();

                        foreach (var item in data21)
                        {
                            item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                            item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                            allRecords.Add(item);
                        }

                    }

                    else
                    {
                        var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                        //var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "13" || x.StageOfFormation == "14") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                        //.Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct().ToList();

                        SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                        con.Open();
                        SqlCommand cmd = new SqlCommand("Sp_AllNovitiate", con);
                        cmd.CommandType = CommandType.StoredProcedure;

                        SqlDataAdapter da = new SqlDataAdapter();
                        da.SelectCommand = cmd;
                        DataTable dt = new DataTable();
                        da.Fill(dt);
                        con.Close();
                        cmd.Dispose();
                        var data21 = (from DataRow dr in dt.Rows
                                      select new PersonalDetailsViewModel()
                                      {
                                          Name = dr["Name"].ToString(),
                                          MemberID = dr["MemberId"].ToString(),
                                          ProvinceName = dr["ProvinceName"].ToString()
                                      }).ToList();
                        foreach (var item in data21)
                        {
                            item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                            item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                            allRecords.Add(item);
                        }

                    }


                    if (province != "0")
                    {
                        allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                    }
                    else if (province == "0")
                    {
                        allRecords = allRecords.ToList();
                    }
                    else
                    {
                        allRecords = allRecords.ToList();
                    }
                    var allPro = db.tbl_Province;
                    foreach (var item in allRecords)
                    {
                        var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                        item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                        allRecordsResponse.Add(item);
                    }

                    if (!string.IsNullOrEmpty(param.sSearch))
                    {
                        allRecords = allRecords.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                      || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                    }
                    switch (param.iSortCol_0)
                    {
                        case 3:
                            if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                                allRecords = allRecords.OrderByDescending(x => x.ProvinceName).ToList();
                            else
                                allRecords = allRecords.OrderBy(x => x.ProvinceName).ToList();

                            break;

                        case 1:
                            if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                                allRecords = allRecords.OrderByDescending(x => x.Name).ToList();
                            else
                                allRecords = allRecords.OrderBy(x => x.Name).ToList();

                            break;
                        case 2:
                            if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                                allRecords = allRecords.OrderByDescending(x => x.SurName).ToList();
                            else
                                allRecords = allRecords.OrderBy(x => x.SurName).ToList();
                            break;

                        default:
                            break;
                    }
                    //var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                    var result = allRecords.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                    //return Json(data, JsonRequestBehavior.AllowGet);
                    var totalRecords = allRecords.Count();
                    return Json(new
                    {
                        param.sEcho,
                        iTotalRecords = totalRecords,
                        iTotalDisplayRecords = totalRecords,
                        aaData = result
                    }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    foreach (var memberid in data)
                    {
                        var check = allTbl_formationsDetails
                            .Where(x => x.MemberId == memberid.MemberId)
                            .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                            .ToList();
                        if (check.Count() > 0)
                        {
                            var check2 = allTbl_formationsDetails
                            .Where(x => x.MemberId == memberid.MemberId)
                            .Where(x => x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")
                            .ToList();
                            if (check2.Count() == 0)
                            {
                                var data1 = allTbl_formationsDetails
                               .Where(x => x.MemberId == memberid.MemberId)
                               .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName })
                               .FirstOrDefault();

                                data1.Name = !string.IsNullOrEmpty(data1.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == data1.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                                data1.SurName = !string.IsNullOrEmpty(data1.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == data1.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;

                                allRecords.Add(data1);
                            }
                        }
                    }
                    var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();
                    var allPro = db.tbl_Province;
                    foreach (var item in allRecords1)
                    {
                        var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                        item.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                        allRecordsResponse.Add(item);
                    }
                    if (!string.IsNullOrEmpty(param.sSearch))
                    {
                        allRecordsResponse = allRecordsResponse.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                      || x.Name.ToLower().Contains(param.sSearch.ToLower())).ToList();
                    }

                    if (!string.IsNullOrEmpty(param.sSearch))
                    {
                        allRecordsResponse = allRecords.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                      || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                    }

                    //var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();

                    switch (param.iSortCol_0)
                    {
                        case 1:
                            if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                                allRecords = allRecords.OrderByDescending(x => x.Name).ToList();
                            else
                                allRecords = allRecords.OrderBy(x => x.Name).ToList();

                            break;
                        case 2:
                            if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                                allRecords = allRecords.OrderByDescending(x => x.SurName).ToList();
                            else
                                allRecords = allRecords.OrderBy(x => x.SurName).ToList();
                            break;

                        default:
                            break;
                    }
                    var result = allRecordsResponse.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                    //return Json(data, JsonRequestBehavior.AllowGet);
                    var totalRecords = allRecordsResponse.Count();
                    return Json(new
                    {
                        param.sEcho,
                        iTotalRecords = totalRecords,
                        iTotalDisplayRecords = totalRecords,
                        aaData = result
                    }, JsonRequestBehavior.AllowGet);
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {

                throw;
            }
        }
        public JsonResult GetAllEternalViewData1(JqueryDatatableParam param, string province)
        {
            if (province == "null")
            {
                province = "0";
            }
            GeneralDBContext db = new GeneralDBContext();
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var response = new List<PersonalDetailsViewModel>();
            if (Session["username"].ToString() == "admin")
            {
                var data = db.tbl_Passed.Select(x => new PersonalDetailsViewModel() { ProvinceName = x.ProvinceName, Name = x.Name, SurName = x.SirName, CurrentStatusFor = x.CurrentStatusFor, MemberID = x.MemberID, }).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    response.Add(new PersonalDetailsViewModel()
                    {
                        MemberID = item.MemberID,
                        CurrentStatusFor = item.CurrentStatusFor,
                        SurName = item.SurName,
                        Name = item.Name,
                        ProvinceName = !string.IsNullOrEmpty(item.ProvinceName) ? dbcont.tbl_Province.Where(x => x.Id.ToString() == item.ProvinceName).Select(x => x.ProvinceName).FirstOrDefault() : string.Empty

                    });
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                switch (param.iSortCol_0)
                {
                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            response = response.OrderByDescending(x => x.ProvinceName).ToList();
                        else
                            response = response.OrderBy(x => x.ProvinceName).ToList();
                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            response = response.OrderByDescending(x => x.Name).ToList();
                        else
                            response = response.OrderBy(x => x.Name).ToList();

                        break;
                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            response = response.OrderByDescending(x => x.SurName).ToList();
                        else
                            response = response.OrderBy(x => x.SurName).ToList();

                        break;

                    default:
                        break;
                }

                var result = response.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = response.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = db.tbl_Passed.Where(x => x.ProvinceName == currentUser).Select(x => new PersonalDetailsViewModel()
                { Name = x.Name, SurName = x.SirName, CurrentStatusFor = x.CurrentStatusFor, MemberID = x.MemberID, }).ToList();


                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    data = data.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();

                }

                switch (param.iSortCol_0)
                {

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            response = response.OrderByDescending(x => x.Name).ToList();
                        else
                            response = response.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            response = response.OrderByDescending(x => x.SurName).ToList();
                        else
                            response = response.OrderBy(x => x.SurName).ToList();

                        break;

                    default:
                        break;
                }

                var result = data.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = data.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllOrdinViewData(JqueryDatatableParam param, string province, string page)
        {
            if (province == "null")
            {
                province = "0";
            }
            GeneralDBContext db = new GeneralDBContext();
            string currentUser = Convert.ToString(Session["username"]);
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            var allData = new List<PersonalDetailsViewModel>();

            var formationsDetails = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).AsQueryable();
            var memberIds = formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();
            if (Session["username"].ToString() == "admin")
            {
                var data1 = formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/)).ToList();
                var data = formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" || x.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();

                if (page == "TemporaryVows2")
                {
                    data1 = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                    data = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "15" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                  .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();

                }
                else if (page == "Profession2")
                {
                    memberIds = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();
                    data1 = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "17" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                    data = db.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && (x.StageOfFormation == "17" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                  .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();

                }
                else if (page == "Ordinations2")
                {
                    //memberIds = db.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();
                    data1 = db.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "19" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                    data = db.Tbl_formationsDetails.Where(x => (x.StageOfFormation == "19" /*|| x.StageOfFormation == "17"*/) && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                  .Select(x => new { x.ProvinceName, x.ToDate, x.Name, x.MemberId, }).Distinct();

                }
                // .Select(x => new { x.ProvinceName, x.FromDate, x.ToDate, x.Name, x.MemberId, }).Distinct();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).Distinct();
                }
                else if (province == "0")
                {
                    data = data.Distinct();
                }
                else
                {
                    data = data.Distinct();
                }
                var Prodata = db.tbl_Province.ToList();

                foreach (var item in data)
                {
                    var pro = Prodata.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);

                    allData.Add(new PersonalDetailsViewModel
                    {
                        ProvinceName = pro == null ? "Not Exist" : pro.ProvinceName,
                        SurName = !string.IsNullOrEmpty(item.MemberId) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberId).Select(x => x.SirName).FirstOrDefault() : string.Empty,
                        // FromDate = item.FromDate == null ? "" : item.FromDate,
                        FromDate = data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate == null ? "" : data1.FirstOrDefault(x => x.MemberId == item.MemberId).FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = !string.IsNullOrEmpty(item.MemberId) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberId).Select(x => x.Name).FirstOrDefault() : string.Empty,
                        MemberID = item.MemberId
                    });
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allData = allData.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                switch (param.iSortCol_0)
                {
                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.ProvinceName).ToList();
                        else
                            allData = allData.OrderBy(x => x.ProvinceName).ToList();

                        break;
                    case 4:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.FromDate).ToList();
                        else
                            allData = allData.OrderBy(x => x.FromDate).ToList();

                        break;
                    case 5:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.ToDate).ToList();
                        else
                            allData = allData.OrderBy(x => x.ToDate).ToList();

                        break;

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.Name).ToList();
                        else
                            allData = allData.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.SurName).ToList();
                        else
                            allData = allData.OrderBy(x => x.SurName).ToList();
                        break;

                    default:
                        break;
                }
                var result = allData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = allData.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                con.Open();
                SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberFormationDetails", con);
                cmd.Parameters.AddWithValue("@username", currentUser);
                cmd.Parameters.AddWithValue("@page", page);
                cmd.CommandType = CommandType.StoredProcedure;

                SqlDataAdapter da = new SqlDataAdapter();
                da.SelectCommand = cmd;
                DataTable dt = new DataTable();
                da.Fill(dt);
                con.Close();
                cmd.Dispose();
                var data = (from DataRow dr in dt.Rows
                            select new GetAllPrileView
                            {
                                ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                Name = Convert.ToString(dr["Name"]),
                                MemberId = Convert.ToString(dr["MemberID"]),
                                FromDate = Convert.ToString(dr["FromDate"]),
                                ToDate = Convert.ToString(dr["ToDate"]),
                            }).ToList();

                //var data = db.Tbl_formationsDetails
                //    .Join(db.tbl_Province, f => f.ProvinceName.ToString().Trim(), pTbl => pTbl.Id.ToString().Trim(),
                //     (f, pTbl) => new { f, pTbl })
                //    .Where(x => !memberIds.Contains(x.f.MemberId) && x.f.StageOfFormation == "15" || x.f.StageOfFormation == "16" /*|| x.StageOfFormation == "17"*/ && x.f.Diedcheck == null && x.f.Sapcheck == null && x.f.ProvinceName == currentUser)
                //    .Select(x => new { x.f.Name, x.pTbl.ProvinceName, x.f.FromDate, x.f.ToDate, x.f.MemberId, }).Distinct().ToList();

                //if (page == "TemporaryVows2")
                //{
                //    data = db.Tbl_formationsDetails
                //        .Join(db.tbl_Province, f => f.ProvinceName.ToString().Trim(), pTbl => pTbl.Id.ToString().Trim(),
                //     (f, pTbl) => new { f, pTbl })
                //        .Where(x => !memberIds.Contains(x.f.MemberId) && x.f.StageOfFormation == "15"   /*|| x.StageOfFormation == "17"*/ && x.f.Diedcheck == null && x.f.Sapcheck == null && x.f.ProvinceName == currentUser)
                //     .Select(x => new { x.f.Name, x.pTbl.ProvinceName, x.f.FromDate, x.f.ToDate, x.f.MemberId, }).Distinct().ToList();
                //}
                //else if (page == "Profession2")
                //{
                //    memberIds = db.Tbl_formationsDetails
                //        .Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "18" || x.StageOfFormation == "19")).Select(x => x.MemberId).ToList();

                //    data = db.Tbl_formationsDetails
                //        .Join(db.tbl_Province, f => f.ProvinceName.ToString().Trim(), pTbl => pTbl.Id.ToString().Trim(),
                //     (f, pTbl) => new { f, pTbl })
                //        .Where(x => !memberIds.Contains(x.f.MemberId) && x.f.StageOfFormation == "17" /*|| x.StageOfFormation == "17"*/ && x.f.Diedcheck == null && x.f.Sapcheck == null && x.f.ProvinceName == currentUser)
                //    .Select(x => new { x.f.Name, x.pTbl.ProvinceName, x.f.FromDate, x.f.ToDate, x.f.MemberId, }).Distinct().ToList();
                //}


                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    data = data.Where(x => x.Name.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                foreach (var item in data)
                {
                    allData.Add(new PersonalDetailsViewModel
                    {
                        ProvinceName = item.ProvinceName,
                        SurName = !string.IsNullOrEmpty(item.MemberId) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberId).FirstOrDefault().SirName : string.Empty,
                        // FromDate = item.FromDate == null ? "" : item.FromDate,
                        ToDate = item.ToDate == null ? "" : item.ToDate,
                        Name = !string.IsNullOrEmpty(item.MemberId) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberId).Select(x => x.Name).FirstOrDefault() : string.Empty,
                        FromDate = item.FromDate,
                        MemberID = item.MemberId
                    });
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allData = allData.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.FromDate) && x.FromDate.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.ToDate) && x.ToDate.ToLower().Contains(param.sSearch.ToLower())
                                                  ).ToList();
                }

                switch (param.iSortCol_0)
                {

                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.FromDate).ToList();
                        else
                            allData = allData.OrderBy(x => x.FromDate).ToList();

                        break;
                    case 4:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.ToDate).ToList();
                        else
                            allData = allData.OrderBy(x => x.ToDate).ToList();

                        break;

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.Name).ToList();
                        else
                            allData = allData.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allData = allData.OrderByDescending(x => x.SurName).ToList();
                        else
                            allData = allData.OrderBy(x => x.SurName).ToList();
                        break;

                    default:
                        break;
                }

                var result = allData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = data.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllbeforprofessById1(JqueryDatatableParam param, string id)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            var response = new List<PersonalDetailsViewModel>();
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                .Where(x => x.StageOFFormation == "11" || x.StageOFFormation == "12" || x.StageOFFormation == "13" || x.StageOFFormation == id)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();

                foreach (var item in personalDetails)
                {
                    response.Add(new PersonalDetailsViewModel()
                    {
                        Name = item.Name,
                        MemberID = item.MemberID,
                        ProvinceName = item.ProvinceName,
                        SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).FirstOrDefault().SirName : string.Empty
                    });
                }
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                 || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var data = response.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = personalDetails.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                .Where(x => (x.StageOFFormation == "11" || x.StageOFFormation == "12" || x.StageOFFormation == "13" || x.StageOFFormation == id) && x.ProvinceName == currentUser)
                .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    personalDetails = personalDetails.Where(x => x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                var data = personalDetails.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = personalDetails.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllSaprationList(JqueryDatatableParam param)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            var response = new List<PersonalDetailsViewModel>();
            var personalDetails = dbcont.tbl_SeperationFromTheCongregation
            .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();

            foreach (var item in personalDetails)
            {
                response.Add(new PersonalDetailsViewModel()
                {
                    Name = item.Name,
                    MemberID = item.MemberID,
                    ProvinceName = !string.IsNullOrEmpty(item.ProvinceName) ? dbcont.tbl_Province.Where(x => x.Id.ToString() == item.ProvinceName).FirstOrDefault().ProvinceName : string.Empty,
                    SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).FirstOrDefault().SirName : string.Empty
                });
            }
            if (!string.IsNullOrEmpty(param.sSearch))
            {
                response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                             || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())
                                              || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())).ToList();
            }

            switch (param.iSortCol_0)
            {
                case 0:
                    if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                        response = response.OrderByDescending(x => x.ProvinceName).ToList();
                    else
                        response = response.OrderBy(x => x.ProvinceName).ToList();

                    break;
                case 1:
                    if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                        response = response.OrderByDescending(x => x.MemberID).ToList();
                    else
                        response = response.OrderBy(x => x.MemberID).ToList();

                    break;
                case 2:
                    if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                        response = response.OrderByDescending(x => x.Name).ToList();
                    else
                        response = response.OrderBy(x => x.Name).ToList();

                    break;
                case 3:
                    if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                        response = response.OrderByDescending(x => x.SurName).ToList();
                    else
                        response = response.OrderBy(x => x.SurName).ToList();

                    break;

                default:
                    break;
            }

            var data = response.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
            //return Json(data, JsonRequestBehavior.AllowGet);
            var totalRecords = personalDetails.Count();
            return Json(new
            {
                param.sEcho,
                iTotalRecords = totalRecords,
                iTotalDisplayRecords = totalRecords,
                aaData = data
            }, JsonRequestBehavior.AllowGet);

        }
        public JsonResult GetAllPrileViewData(JqueryDatatableParam param, string province)
        {
            if (province == "null")
            {
                province = "0";
            }
            GeneralDBContext db = new GeneralDBContext();
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            if (Session["username"].ToString() == "admin")
            {
                var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                if (province != "0")
                {
                    allPersionalDetails = allPersionalDetails.Where(x => x.ProvinceName == province && x.IsDeleted == false).ToList();
                }
                else if (province == "0")
                {
                    allPersionalDetails = allPersionalDetails.ToList();
                }
                else
                {
                    allPersionalDetails = allPersionalDetails.ToList();
                }
                var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();

                var dataPrimary = viewAllPrimaryDetails.ToList();
                var provinceName = db.tbl_Province.ToList();
                var getAllData = (from m in allPersionalDetails
                                  from n in provinceName
                                  where m.ProvinceName == n.Id.ToString()
                                  // from o in dataPrimary
                                  //where m.MemberID == o.MemberId
                                  select new GetAllPrileView
                                  {
                                      ProvinceName = n.ProvinceName,
                                      Name = m.Name,
                                      FileNo = m.FileNo,
                                      Sirname = m.SirName,
                                      MemberId = (m.MemberID != null) ? m.MemberID : null
                                  });
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    getAllData = getAllData.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                switch (param.iSortCol_0)
                {
                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            getAllData = getAllData.OrderByDescending(x => x.ProvinceName).ToList();
                        else
                            getAllData = getAllData.OrderBy(x => x.ProvinceName).ToList();

                        break;
                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            getAllData = getAllData.OrderByDescending(x => x.Name).ToList();
                        else
                            getAllData = getAllData.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            getAllData = getAllData.OrderByDescending(x => x.Sirname).ToList();
                        else
                            getAllData = getAllData.OrderBy(x => x.Sirname).ToList();

                        break;
                    case 4:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            getAllData = getAllData.OrderByDescending(x => x.FileNo).ToList();
                        else
                            getAllData = getAllData.OrderBy(x => x.FileNo).ToList();

                        break;

                    default:
                        break;
                }

                var data = getAllData.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = getAllData.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser && x.CurrentStatus != null && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                var viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();
                var data = new List<GetAllPrileView>();
                foreach (var item in allPersionalDetails)
                {
                    var name = item.Name;
                    var fileno = item.FileNo;
                    var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    data.Add(new GetAllPrileView()
                    {
                        Name = name,
                        FileNo = fileno,
                        Sirname = item.SirName,
                        MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                    });
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    data = data.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }
                //return Json(data, JsonRequestBehavior.AllowGet);
                data = data.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                var totalRecords = data.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllEnterToNov(JqueryDatatableParam param, string province, string typeId)
        {
            if (province == "null")
            {
                province = "0";
            }
            GeneralDBContext db = new GeneralDBContext();
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);


            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            var allRecords = new List<PersonalDetailsViewModel>();
            List<PersonalDetailsViewModel> allRecordsResponse = new List<PersonalDetailsViewModel>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

            if (Session["username"].ToString() == "admin")
            {
                if (typeId == "1")
                {
                    var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "12" || x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "11" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new PersonalDetailsViewModel() { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    foreach (var item in data21.ToList())
                    {
                        item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                        item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                        allRecords.Add(item);

                    }
                }
                else if (typeId == "2")
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && x.StageOfFormation == "12" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    foreach (var item in data21.ToList())
                    {
                        item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                        item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                        allRecords.Add(item);
                    }

                }
                else
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "11") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    //var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct().ToList();
                    //var data210 = data21.ToList();
                    foreach (var item in data21)
                    {
                        item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                        item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                        allRecords.Add(item);
                    }

                }
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var pro in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
                    pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(pro);
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allRecords = allRecords.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                switch (param.iSortCol_0)
                {
                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.ProvinceName).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.ProvinceName).ToList();

                        break;

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.Name).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.SurName).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.SurName).ToList();
                        break;

                    default:
                        break;
                }

                var result = allRecords.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = allRecords.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.StageOfFormation == "11" || x.StageOfFormation == "12")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName })
                           .FirstOrDefault();
                            data1.SurName = !string.IsNullOrEmpty(data1.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == data1.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                            data1.Name = !string.IsNullOrEmpty(data1.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == data1.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;

                            allRecords.Add(data1);
                        }

                    }
                }

                var allRecords1 = allRecords.Where(x => x.ProvinceName == currentUser).ToList();

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allRecords1 = allRecords1.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                switch (param.iSortCol_0)
                {

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.Name).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.SurName).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.SurName).ToList();
                        break;

                    default:
                        break;
                }

                var result = allRecords1.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = allRecords.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllEnterToPostulancy(JqueryDatatableParam param, string province, string typeId)
        {
            if (province == "null")
            {
                province = "0";
            }
            GeneralDBContext db = new GeneralDBContext();
            string currentUser = Convert.ToString(Session["username"]);
            string currentuserid = Convert.ToString(Session["loginuserid"]);


            var allTbl_formationsDetails = dbcont.Tbl_formationsDetails;
            //if(Session["username"].ToString() != "admin")
            //{
            //    allTbl_formationsDetails = allTbl_formationsDetails.Where(x => x.ProvinceName == currentuserid);
            //}
            var allRecords = new List<PersonalDetailsViewModel>();
            List<PersonalDetailsViewModel> allRecordsResponse = new List<PersonalDetailsViewModel>();
            var data = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
           .ToList().Select(x => new { x.MemberId }).Distinct().ToList();

            if (Session["username"].ToString() == "admin")
            {
                if (typeId == "1")
                {
                    var memberIds = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "12" || x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !memberIds.Contains(x.MemberId) && x.StageOfFormation == "12" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new PersonalDetailsViewModel() { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    foreach (var item in data21.ToList())
                    {
                        item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                        item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                        allRecords.Add(item);

                    }
                }
                else if (typeId == "2")
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && x.StageOfFormation == "12" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct();

                    foreach (var item in data21.ToList())
                    {
                        item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                        item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                        allRecords.Add(item);
                    }

                }
                else
                {
                    var Ids = dbcont.Tbl_formationsDetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && (x.StageOfFormation == "13" || x.StageOfFormation == "14" || x.StageOfFormation == "15" || x.StageOfFormation == "16" || x.StageOfFormation == "17" || x.StageOfFormation == "18" || x.StageOfFormation == "19" || x.StageOfFormation == "20")).Select(x => x.MemberId).ToList();
                    var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    //var data21 = dbcont.Tbl_formationsDetails.Where(x => !Ids.Contains(x.MemberId) && (x.StageOfFormation == "11" || x.StageOfFormation == "12") && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null)
                    .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName }).Distinct().ToList();
                    //var data210 = data21.ToList();
                    foreach (var item in data21)
                    {
                        item.Name = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                        item.SurName = !string.IsNullOrEmpty(item.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == item.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                        allRecords.Add(item);
                    }

                }
                if (province != "0")
                {
                    allRecords = allRecords.Where(x => x.ProvinceName == province).Distinct().ToList();
                }
                else if (province == "0")
                {
                    allRecords = allRecords.ToList();
                }
                else
                {
                    allRecords = allRecords.ToList();
                }
                var allPro = db.tbl_Province;
                foreach (var pro in allRecords)
                {
                    var Prodata = allPro.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
                    pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                    allRecordsResponse.Add(pro);
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allRecords = allRecords.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                switch (param.iSortCol_0)
                {
                    case 3:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.ProvinceName).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.ProvinceName).ToList();

                        break;

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.Name).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.SurName).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.SurName).ToList();
                        break;

                    default:
                        break;
                }

                var result = allRecords.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = allRecords.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                foreach (var memberid in data)
                {
                    var check = allTbl_formationsDetails
                        .Where(x => x.MemberId == memberid.MemberId)
                        .Where(x => x.ProvinceName == currentUser && x.StageOfFormation == "12")
                        .ToList();
                    if (check.Count() > 0)
                    {
                        var check2 = allTbl_formationsDetails
                       .Where(x => x.MemberId == memberid.MemberId)
                       .Where(x => x.StageOfFormation == "13" || x.StageOfFormation == "14")
                       .ToList();
                        if (check2.Count == 0)
                        {
                            var data1 = allTbl_formationsDetails
                           .Where(x => x.MemberId == memberid.MemberId)
                           .Select(x => new PersonalDetailsViewModel { Name = x.Name, MemberID = x.MemberId, ProvinceName = x.ProvinceName == "" ? "" : x.ProvinceName })
                           .FirstOrDefault();
                            data1.SurName = !string.IsNullOrEmpty(data1.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == data1.MemberID).Select(x => x.SirName).FirstOrDefault() : string.Empty;
                            data1.Name = !string.IsNullOrEmpty(data1.MemberID) ? dbcont.tbl_PersonalDetails.Where(x => x.MemberID == data1.MemberID).Select(x => x.Name).FirstOrDefault() : string.Empty;
                            var Prodata = db.tbl_Province.FirstOrDefault(x => x.Id.ToString() == data1.ProvinceName);
                            data1.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                            allRecords.Add(data1);
                        }

                    }
                }

                var allRecords1 = allRecords.ToList();
                //foreach (var pro in allRecords1)
                //{
                //    var Prodata = db.tbl_Province.FirstOrDefault(x => x.Id.ToString() == pro.ProvinceName);
                //    pro.ProvinceName = Prodata == null ? "No Province" : Prodata.ProvinceName;
                //    allRecords1.Add(pro);
                //}
                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allRecords1 = allRecords1.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(param.sSearch.ToLower())).ToList();
                }

                switch (param.iSortCol_0)
                {

                    case 1:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.Name).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.Name).ToList();

                        break;
                    case 2:
                        if (!string.IsNullOrEmpty(param.sSortDir_0) && param.sSortDir_0.ToLower() == "desc")
                            allRecords = allRecords.OrderByDescending(x => x.SurName).ToList();
                        else
                            allRecords = allRecords.OrderBy(x => x.SurName).ToList();
                        break;

                    default:
                        break;
                }

                var result = allRecords1.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = allRecords.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = result
                }, JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult UpdateMember(tbl_PersonalDetails tbl_PersonalDetails, HttpPostedFileBase Spare1)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                tbl_PersonalDetails existingobj = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId == tbl_PersonalDetails.PersonalDetailsId);
                if (Spare1 != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(Spare1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Primarydetails"), fileName);
                        Spare1.SaveAs(path);
                        tbl_PersonalDetails.Spare1 = fileName;
                    }
                }
                else
                {
                    tbl_PersonalDetails.Spare1 = existingobj.Spare1;
                }

                if (existingobj != null)
                {
                    var provinceInfo = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == tbl_PersonalDetails.ProvinceName);
                    string Id = Regex.Match(existingobj.MemberID, @"\d+").Value;
                    //  tbl_PersonalDetails.MemberID = provinceInfo.Place + Id;
                    tbl_PersonalDetails.MemberID = existingobj.MemberID;
                    //tbl_PersonalDetails.MemberID = provinceInfo.Place + tbl_PersonalDetails.MemberID;

                    tbl_PersonalDetails.ProvinceCode = provinceInfo.Place;
                    tbl_PersonalDetails.ProvinceName = Convert.ToString(provinceInfo.Id);

                    tbl_PersonalDetails.CreatedBy = existingobj.CreatedBy;
                    tbl_PersonalDetails.MemberUnicId = existingobj.MemberUnicId;
                    tbl_PersonalDetails.CurrentStatus = existingobj.CurrentStatus;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_PersonalDetails);
                    dbcont.SaveChanges();

                    var dataUpdate = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == tbl_PersonalDetails.MemberID);
                    if (dataUpdate != null)
                    {
                        dataUpdate.Knowname = tbl_PersonalDetails.Name;
                        dataUpdate.SurName = tbl_PersonalDetails.SirName;
                        dbcont.SaveChanges();
                    }

                    var dataUpdateOfficial = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateOfficial != null)
                    {
                        foreach (var item in dataUpdateOfficial)
                        {
                            item.NameAndNo1 = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }

                    var dataUpdatefamily = dbcont.FamilyDetails.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdatefamily != null)
                    {
                        foreach (var item in dataUpdatefamily)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdatesacrament = dbcont.Sacraments.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdatesacrament != null)
                    {
                        foreach (var item in dataUpdatesacrament)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateAcademy = dbcont.tbl_Academy.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateAcademy != null)
                    {
                        foreach (var item in dataUpdateAcademy)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateappoinment = dbcont.Appointments.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateappoinment != null)
                    {
                        foreach (var item in dataUpdateappoinment)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateSaprate = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateSaprate != null)
                    {
                        foreach (var item in dataUpdateSaprate)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdatepassed = dbcont.tbl_Passed.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdatepassed != null)
                    {
                        foreach (var item in dataUpdatepassed)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateArchive = dbcont.tbl_Archive.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateArchive != null)
                    {
                        foreach (var item in dataUpdateArchive)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateInsurance = dbcont.tbl_Insurance.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateInsurance != null)
                    {
                        foreach (var item in dataUpdateInsurance)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateFor = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateFor != null)
                    {
                        foreach (var item in dataUpdateFor)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateRetire = dbcont.tbl_Retirement.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateRetire != null)
                    {
                        foreach (var item in dataUpdateRetire)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdateRenewal = dbcont.Tbl_RenewalVows.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdateRenewal != null)
                    {
                        foreach (var item in dataUpdateRenewal)
                        {
                            item.Name = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                    var dataUpdatetransfer = dbcont.Tbl_Transfer.Where(x => x.NewMemberId == tbl_PersonalDetails.MemberID).ToList();
                    if (dataUpdatetransfer != null)
                    {
                        foreach (var item in dataUpdatetransfer)
                        {
                            item.BrotherName = tbl_PersonalDetails.Name;
                            dbcont.SaveChanges();
                        }
                    }
                }

                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetMemberById(int id)
        {
            try
            {
                var genDeath = dbcont.tbl_PersonalDetails.FirstOrDefault(e => e.PersonalDetailsId == id);
                if (genDeath != null)
                {
                    return Json(genDeath, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult DeleteGetMemberById(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_PersonalDetails.FirstOrDefault(e => e.PersonalDetailsId == id);
                if (data != null)
                {
                    dbcont.tbl_PersonalDetails.Remove(data);
                    var isDelete = dbcont.SaveChanges();
                    if (isDelete == 1)
                    {
                        var tbl_Primarydetails = dbcont.tbl_Primarydetails.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Primarydetails.Count > 0)
                        {
                            dbcont.tbl_Primarydetails.RemoveRange(tbl_Primarydetails);
                            dbcont.SaveChanges();
                        }

                        var tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_OfficialDocument.Count > 0)
                        {
                            dbcont.tbl_OfficialDocument.RemoveRange(tbl_OfficialDocument);
                            dbcont.SaveChanges();
                        }

                        var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
                        if (FamilyDetails.Count > 0)
                        {
                            dbcont.FamilyDetails.RemoveRange(FamilyDetails);
                            dbcont.SaveChanges();
                        }
                        var Sacraments = dbcont.Sacraments.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Sacraments.Count > 0)
                        {
                            dbcont.Sacraments.RemoveRange(Sacraments);
                            dbcont.SaveChanges();
                        }
                        var tbl_Health = dbcont.tbl_Health.Where(e => e.MemberID == data.MemberID).ToList();
                        if (tbl_Health.Count > 0)
                        {
                            dbcont.tbl_Health.RemoveRange(tbl_Health);
                            dbcont.SaveChanges();
                        }
                        var Tbl_formationsDetails = dbcont.Tbl_formationsDetails.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Tbl_formationsDetails.Count > 0)
                        {
                            dbcont.Tbl_formationsDetails.RemoveRange(Tbl_formationsDetails);
                            dbcont.SaveChanges();
                        }
                        var tbl_Academy = dbcont.tbl_Academy.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Academy.Count > 0)
                        {
                            dbcont.tbl_Academy.RemoveRange(tbl_Academy);
                            dbcont.SaveChanges();
                        }
                        var Appointments = dbcont.Appointments.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Appointments.Count > 0)
                        {
                            dbcont.Appointments.RemoveRange(Appointments);
                            dbcont.SaveChanges();
                        }
                        var Tbl_Complains = dbcont.Tbl_Complains.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Tbl_Complains.Count > 0)
                        {
                            dbcont.Tbl_Complains.RemoveRange(Tbl_Complains);
                            dbcont.SaveChanges();
                        }
                        var tbl_Retirement = dbcont.tbl_Retirement.Where(e => e.MemberID == data.MemberID).ToList();
                        if (tbl_Retirement.Count > 0)
                        {
                            dbcont.tbl_Retirement.RemoveRange(tbl_Retirement);
                            dbcont.SaveChanges();
                        }
                        var tbl_Insurance = dbcont.tbl_Insurance.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Insurance.Count > 0)
                        {
                            dbcont.tbl_Insurance.RemoveRange(tbl_Insurance);
                            dbcont.SaveChanges();
                        }
                        var saprate = dbcont.tbl_SeperationFromTheCongregation.Where(e => e.MemberID == data.MemberID).ToList();
                        if (saprate.Count > 0)
                        {
                            dbcont.tbl_SeperationFromTheCongregation.RemoveRange(saprate);
                            dbcont.SaveChanges();
                        }
                        var tbl_Passed = dbcont.tbl_Passed.Where(e => e.MemberID == data.MemberID).ToList();
                        if (tbl_Passed.Count > 0)
                        {
                            dbcont.tbl_Passed.RemoveRange(tbl_Passed);
                            dbcont.SaveChanges();
                        }
                        var tbl_Archive = dbcont.tbl_Archive.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Archive.Count > 0)
                        {
                            dbcont.tbl_Archive.RemoveRange(tbl_Archive);
                            dbcont.SaveChanges();
                        }
                        var Tbl_RenewalVows = dbcont.Tbl_RenewalVows.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Tbl_RenewalVows.Count > 0)
                        {
                            dbcont.Tbl_RenewalVows.RemoveRange(Tbl_RenewalVows);
                            dbcont.SaveChanges();
                        }
                        var tbltransfer = dbcont.Tbl_Transfer.Where(e => e.NewMemberId == data.MemberID).ToList();
                        if (tbltransfer.Count > 0)
                        {
                            dbcont.Tbl_Transfer.RemoveRange(tbltransfer);
                            dbcont.SaveChanges();
                        }

                    }
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public ActionResult DeleteMemberById(string id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_PersonalDetails.FirstOrDefault(e => e.MemberID == id);
                if (data != null)
                {
                    dbcont.tbl_PersonalDetails.Remove(data);
                    var isDelete = dbcont.SaveChanges();
                    if (isDelete == 1)
                    {
                        var tbl_Primarydetails = dbcont.tbl_Primarydetails.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Primarydetails.Count > 0)
                        {
                            dbcont.tbl_Primarydetails.RemoveRange(tbl_Primarydetails);
                            dbcont.SaveChanges();
                        }

                        var tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_OfficialDocument.Count > 0)
                        {
                            dbcont.tbl_OfficialDocument.RemoveRange(tbl_OfficialDocument);
                            dbcont.SaveChanges();
                        }

                        var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
                        if (FamilyDetails.Count > 0)
                        {
                            dbcont.FamilyDetails.RemoveRange(FamilyDetails);
                            dbcont.SaveChanges();
                        }
                        var Sacraments = dbcont.Sacraments.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Sacraments.Count > 0)
                        {
                            dbcont.Sacraments.RemoveRange(Sacraments);
                            dbcont.SaveChanges();
                        }
                        var tbl_Health = dbcont.tbl_Health.Where(e => e.MemberID == data.MemberID).ToList();
                        if (tbl_Health.Count > 0)
                        {
                            dbcont.tbl_Health.RemoveRange(tbl_Health);
                            dbcont.SaveChanges();
                        }
                        var Tbl_formationsDetails = dbcont.Tbl_formationsDetails.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Tbl_formationsDetails.Count > 0)
                        {
                            dbcont.Tbl_formationsDetails.RemoveRange(Tbl_formationsDetails);
                            dbcont.SaveChanges();
                        }
                        var tbl_Academy = dbcont.tbl_Academy.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Academy.Count > 0)
                        {
                            dbcont.tbl_Academy.RemoveRange(tbl_Academy);
                            dbcont.SaveChanges();
                        }
                        var Appointments = dbcont.Appointments.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Appointments.Count > 0)
                        {
                            dbcont.Appointments.RemoveRange(Appointments);
                            dbcont.SaveChanges();
                        }
                        var Tbl_Complains = dbcont.Tbl_Complains.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Tbl_Complains.Count > 0)
                        {
                            dbcont.Tbl_Complains.RemoveRange(Tbl_Complains);
                            dbcont.SaveChanges();
                        }
                        var tbl_Retirement = dbcont.tbl_Retirement.Where(e => e.MemberID == data.MemberID).ToList();
                        if (tbl_Retirement.Count > 0)
                        {
                            dbcont.tbl_Retirement.RemoveRange(tbl_Retirement);
                            dbcont.SaveChanges();
                        }
                        var tbl_Insurance = dbcont.tbl_Insurance.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Insurance.Count > 0)
                        {
                            dbcont.tbl_Insurance.RemoveRange(tbl_Insurance);
                            dbcont.SaveChanges();
                        }
                        var saprate = dbcont.tbl_SeperationFromTheCongregation.Where(e => e.MemberID == data.MemberID).ToList();
                        if (saprate.Count > 0)
                        {
                            dbcont.tbl_SeperationFromTheCongregation.RemoveRange(saprate);
                            dbcont.SaveChanges();
                        }
                        var tbl_Passed = dbcont.tbl_Passed.Where(e => e.MemberID == data.MemberID).ToList();
                        if (tbl_Passed.Count > 0)
                        {
                            dbcont.tbl_Passed.RemoveRange(tbl_Passed);
                            dbcont.SaveChanges();
                        }
                        var tbl_Archive = dbcont.tbl_Archive.Where(e => e.MemberId == data.MemberID).ToList();
                        if (tbl_Archive.Count > 0)
                        {
                            dbcont.tbl_Archive.RemoveRange(tbl_Archive);
                            dbcont.SaveChanges();
                        }
                        var Tbl_RenewalVows = dbcont.Tbl_RenewalVows.Where(e => e.MemberId == data.MemberID).ToList();
                        if (Tbl_RenewalVows.Count > 0)
                        {
                            dbcont.Tbl_RenewalVows.RemoveRange(Tbl_RenewalVows);
                            dbcont.SaveChanges();
                        }
                        var tbltransfer = dbcont.Tbl_Transfer.Where(e => e.NewMemberId == data.MemberID).ToList();
                        if (tbltransfer.Count > 0)
                        {
                            dbcont.Tbl_Transfer.RemoveRange(tbltransfer);
                            dbcont.SaveChanges();
                        }




                    }
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public ActionResult MemberInfoById(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "Blood Group").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            //if (pertionalPrimaryInfo1.Count > 0)
            //{
            //    var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            //    if (personalDetails != null)
            //    {
            //        AllPrimData.UploadPhoto = personalDetails.Spare1;
            //    }
            //    dbcont.SaveChanges();
            //}
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.MotherTongue = AllPrimData.mothertounge != null ? AllPrimData.mothertounge : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.Pincode != null ? AllPrimData.Pincode : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Remarks = AllPrimData.Remarks != null ? AllPrimData.Remarks : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId.ToString() == memberId).ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            //var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);----previous code
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId.ToString() == memberId).ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            //var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);--previous code
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).GroupBy(x => x.Name).Select(x => x.FirstOrDefault()).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;

            return View();
        }

        #region New Saparate Member Pages

        public ActionResult MemberInfoById_Primary(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            var tblpersoneldetails = dbcont.tbl_PersonalDetails.ToList();
            var tblprimarydetails = dbcont.tbl_Primarydetails.ToList();
            var tbldatalist = dbcont.DataLists.ToList();
            var tbldatalistitem = dbcont.DataListItems.ToList();
            var tblcong = dbcont.Tbl_Cong.ToList();
            var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
            var tblpassed = dbcont.tbl_Passed.ToList();
            var tblsepration = dbcont.tbl_SeperationFromTheCongregation.ToList();
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in tblpersoneldetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in tblpersoneldetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = tbldatalist.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = tbldatalist.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = tbldatalist.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = tbldatalist.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = tbldatalist.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = tbldatalist.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = tbldatalist.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "Blood Group").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = tblpersoneldetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = tblcong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = tblpersoneldetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = tblprimarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = tblprimarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = tblprimarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = tblprimarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;
                ViewBag.personeldata = pertionalInfo;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = tblprimarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            //if (pertionalPrimaryInfo1.Count > 0)
            //{
            //    var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            //    if (personalDetails != null)
            //    {
            //        AllPrimData.UploadPhoto = personalDetails.Spare1;
            //    }
            //    dbcont.SaveChanges();
            //}
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.MotherTongue = AllPrimData.mothertounge != null ? AllPrimData.mothertounge : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";
                    ViewBag.Photo = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.Pincode != null ? AllPrimData.Pincode : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Remarks = AllPrimData.Remarks != null ? AllPrimData.Remarks : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.primarydata = AllPrimData;
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = tblpersoneldetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = tblprimarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = tblformationdetails.Where(x => x.MemberId.ToString() == memberId).ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            //var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);----previous code
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = tblpassed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = tblpassed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = tblsepration.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tblsepration.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = tblsepration.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = tblpersoneldetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = tblpersoneldetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = tblpersoneldetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = tblpersoneldetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = tblformationdetails.Where(x => x.MemberId.ToString() == memberId).ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            //var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);--previous code
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = tblformationdetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = tblformationdetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = tblformationdetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = tbldatalist.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = tblpersoneldetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).GroupBy(x => x.Name).Select(x => x.FirstOrDefault()).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = tblcong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = tblcong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = tblpersoneldetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = tblpersoneldetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = tblpersoneldetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = tblpersoneldetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = tblpersoneldetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "PRIMARY";
            return View();



        }
        public ActionResult MemberInfoById_Document(string memberId)
        {
            ViewBag.MemberId = memberId;
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Document", "Name_/_Number", "Upload_Document", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = " Document";
            return View();
        }
        public ActionResult MemberInfoById_Family(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();
            ViewBag.AllNationality = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "nationality").ToList();
            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Name", "Relationship", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Family";
             return View();
        }
        public ActionResult MemberInfoById_Sacrament(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName == "Diocese").ToList();


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Sacrament", "Date", "Place", "Document", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Sacrament";
            return View();
        }
        public ActionResult MemberInfoById_Health(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Doctor", "Diagnosis", "Hospital", "File", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Health";
            return View();
        }
        public ActionResult MemberInfoById_Formation(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId.ToString() == memberId).ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            //var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);---previous code
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "Stage of Formation" || x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Stage_formation", "FromDate", "ToDate", "Community", "Document", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Formation";
            return View();
          
        }
        public ActionResult MemberInfoById_Profession(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            if (Session["username"].ToString() == "admin")
            {
                var provincename = dbcont.tbl_Province.ToList();
                ViewBag.Province = provincename;
            }
            else
            {
                var provincename = dbcont.tbl_Province.Where(x => x.Id.ToString() == currentUser).ToList();
                ViewBag.Province = provincename;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;
            ViewBag.Places = dbcont.Tbl_ProfessionPlace.ToList();
            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Stage_formation", "Date", "Community", "Place", "Duration", "Witness", "Document", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Profession";
            return View();
        }
        public ActionResult MemberInfoById_Academics(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Course", "University", "FromDate", "ToDate", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Academics";
            return View();
        }
        public ActionResult MemberInfoById_Appointment(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            string currentUserid = Convert.ToString(Session["loginuserid"]);
            ViewBag.MemberId = memberId;
            //string memberId
            ViewBag.memberId = "AutoGen";
            ViewBag.name = "";

            ViewBag.ProvinceName = "";
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;
                var provdata = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == pertionalInfo.ProvinceName)
                                  .Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
                ViewBag.ProvDataId = provdata[0].Id + "|" + provdata[0].ProvinceName;

            }
            //var provdata = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active")
            //.Select(x => new { x.ProvinceName, x.Id, x.Place }).ToList();
            //if (provdata != null)
            {
                //ViewBag.ProvDataId = provdata.Where(x=> x.mem)
            }

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            var allDesignation1 = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            var allDesignation2 = dbcont.Tbl_InstitutionAppointmentDetails.OrderBy(x => x.Name).ToList();
            var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;
            ViewBag.DesignationType1 = allDesignation1;
            ViewBag.DesignationType2 = allDesignation2;
            ViewBag.Place = allPlace;
            //Institution
            // var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            //var proId = dbcont.tbl_PersonalDetails.Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault().ProvinceName : "";
            //Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            //var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            var allCongPro = dbcont.ComOutSide.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;

            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;



            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }


            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            //if (memberunicNumber != null)
            //{
            //    var allallformations = dbcont.Appointments.ToList();
            //    foreach (var MemberId1 in allprememberids)
            //    {
            //        var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
            //        foreach (var item in allallformationsdata)
            //        {
            //            allAppointments.Add(item);
            //        }
            //    }
            //}
            //else
            //{
            allAppointments = dbcont.Appointments.ToList();


            ViewBag.allApoinments = allAppointments;


            List<InstutionAppointments> allInsAppointments = new List<InstutionAppointments>();
            allInsAppointments = dbcont.InstutionAppointments.ToList();
            ViewBag.allInsApoinments = allInsAppointments;

            string[] tableHeading = { "FromDate", "ToDate", "Name", "Community", "Designation", "Place", "Status", "Update", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Appointment";
            return View();
        }
        public ActionResult MemberInfoById_Claustration(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Purpose", "FromDate", "ToDate", "Place", "Community", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Exclaustration";
            return View();
        }
        public ActionResult MemberInfoById_Retirement(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Retirement_Date", "Age", "Reason", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Retirement";
            return View();
        }
        public ActionResult MemberInfoById_Separation(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Title", "Date", "Document", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Separation";
            return View();
        }
        public ActionResult MemberInfoById_EternalLife(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Date", "Death_Certificate", "View_Documents", "Obitury_Notice", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Eternal Life";
            return View();
        }
        public ActionResult MemberInfoById_Archive(string memberId)
        {
            string currentloginid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            ViewBag.MemberId = memberId;
            if (Session["username"].ToString() == "admin")
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                //  ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";
            }
            else
            {
                var MemberId_new = (from c in dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser) select new { c.PersonalDetailsId }).Count() + 100 + 1;
                string id = string.Format("{0:000}", MemberId_new);
                // ViewBag.MemberId = id;
                ViewBag.MemberId = "AutoGen";

            }
            if (Session["username"].ToString() == "admin")
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(n => n.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }
            else
            {
                var AllMemberdata = dbcont.Tbl_RenewalVows.Where(x => x.ProvinceName == currentUser && x.MemberId == memberId).ToList();
                ViewBag.AllMemberdata2 = AllMemberdata;
            }

            var countryDataListItems = dbcont.DataLists.Where(x => x.Name.ToLower() == "country").ToList();
            ViewBag.CoutryDataListItems = countryDataListItems;
            var LanguageList = dbcont.DataLists.Where(x => x.Name.ToLower() == "language").ToList();
            ViewBag.Language = LanguageList;

            ViewBag.Designation = dbcont.DataLists.Where(x => x.Name.ToLower() == "designation").ToList();
            ViewBag.DegreeLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "degree").ToList();
            ViewBag.CourseLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "course").ToList();
            ViewBag.SacramentLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "sacrament").ToList();
            ViewBag.DiocesLst = dbcont.DataLists.Where(x => x.Name.ToLower() == "dioces").ToList();

            var bloodgroup = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "bloodgroup").ToList();
            ViewBag.BloodGroupList = bloodgroup;
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
            ViewBag.Personal = pertionalInfo;

            var AllActivities = dbcont.DataListItems.Where(x => x.DataListName == "Activities").ToList();
            ViewBag.AllActivities = AllActivities;
            if (pertionalInfo != null)
            {
                ViewBag.PersonalDetailsId = pertionalInfo.PersonalDetailsId;
            }
            else
            {
                ViewBag.PersonalDetailsId = 0;
            }

            var allInstitutions = dbcont.DataListItems.Where(x => x.DataListName == "Institution").ToList();
            ViewBag.InstitutionType = allInstitutions;

            var AllRegType = dbcont.DataListItems.Where(x => x.DataListName == "RegistrationType").ToList();
            ViewBag.AllRegType = AllRegType;

            //Adding Place
            ViewBag.CommId = dbcont.Tbl_Cong.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.InstitutionId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").Count() + 1;
            ViewBag.PerisId = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Paris").Count() + 1;
            ViewBag.SocietyId = dbcont.Societys.Where(x => x.ActiveCkeck == "Active").Count() + 1;
            ViewBag.StaffId = dbcont.StaffDetails.Count() + 1;

            ViewBag.DioceseNameSacra = dbcont.DataListItems.Where(x => x.DataListName.ToLower() == "dioces").ToList(); ;


            List<tbl_Primarydetails> pertionalPrimaryInfo = new List<tbl_Primarydetails>();
            var memberunicNumber = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == memberId);
            if (memberunicNumber != null)
            {
                var PersonalDetail = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberUnicId == memberunicNumber.MemberUnicId);
                if (PersonalDetail != null)
                {
                    pertionalPrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == PersonalDetail.MemberID).ToList();
                    ViewBag.Primarydetails = pertionalPrimaryInfo;
                }
            }
            else
            {
                var PrimaryInfo = dbcont.tbl_Primarydetails.Where(x => x.MemberId.ToString() == memberId).ToList();
                ViewBag.Primarydetails = PrimaryInfo;
            }

            List<tbl_OfficialDocument> tbl_OfficialDocument = new List<tbl_OfficialDocument>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allOfficialDocument = dbcont.tbl_OfficialDocument.ToList();
                foreach (var member in allprememberids1)
                {
                    var allOfficialDocumentdataforMember = allOfficialDocument.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allOfficialDocumentdataforMember)
                    {
                        tbl_OfficialDocument.Add(item);
                    }
                }
            }
            else
            {
                //tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
                tbl_OfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.allOfficialDocument = tbl_OfficialDocument;

            List<FamilyDetails> FamilyDetails = new List<FamilyDetails>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allFamilyDetailsdata = dbcont.FamilyDetails.ToList();
                foreach (var member in allprememberids1)
                {
                    var allFamilyDetailsdataforMember = allFamilyDetailsdata.Where(x => x.MemberId == member).ToList();
                    foreach (var item in allFamilyDetailsdataforMember)
                    {
                        FamilyDetails.Add(item);
                    }
                }
            }
            else
            {
                FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == memberId).ToList();
            }
            ViewBag.FamilyDetails = FamilyDetails;

            var pertionalPrimaryInfo1 = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId).ToList();
            var allins = dbcont.tbl_Primarydetails.ToList();
            ViewBag.isdisplayAddBtnPrimary = pertionalPrimaryInfo1.ToList().Count > 0 ? "none" : "block";
            ViewBag.isdisplayAddBtnDeathpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList().Count > 0 ? "none" : "block";
            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;
                ViewBag.ProFileNo = pertionalInfo.FileNo;
                ViewBag.GenFileNo = pertionalInfo.GenFileNo;
                ViewBag.ProvinceName = pertionalInfo.ProvinceName;

            }
            //var FamilyDetails = dbcont.FamilyDetails.Where(e => e.MemberId == data.MemberID).ToList();
            //if (FamilyDetails.Count > 0)
            //{
            //    dbcont.FamilyDetails.RemoveRange(FamilyDetails);
            //    dbcont.SaveChanges();
            //}
            var AllPrimData = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (pertionalPrimaryInfo1.Count > 0)
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                if (personalDetails != null)
                {
                    AllPrimData.UploadPhoto = personalDetails.Spare1;
                }
                dbcont.SaveChanges();
            }
            if (pertionalPrimaryInfo1.Count > 0)
            {
                if (AllPrimData != null)
                {
                    ViewBag.Baptismialname = AllPrimData.Baptismialname != null ? AllPrimData.Baptismialname : "";
                    ViewBag.Congregation = AllPrimData.Congregation != null ? AllPrimData.Congregation : "";
                    ViewBag.country = AllPrimData.country != null ? AllPrimData.country : "";
                    ViewBag.placeofbirth = AllPrimData.placeofbirth != null ? AllPrimData.placeofbirth : "";
                    ViewBag.Continent = AllPrimData.Continent != null ? AllPrimData.Continent : "";
                    ViewBag.LangSpocken = AllPrimData.LangSpocken != null ? AllPrimData.LangSpocken : "";
                    ViewBag.DOB = AllPrimData.DOB != null ? AllPrimData.DOB : "";
                    ViewBag.ReligiousTitle = AllPrimData.ReligiousTitle != null ? AllPrimData.ReligiousTitle : "";
                    ViewBag.Will = AllPrimData.Will != null ? AllPrimData.Will : "";
                    ViewBag.Feastday = AllPrimData.Feastday != null ? AllPrimData.Feastday : "";
                    ViewBag.Bloodgroup = AllPrimData.Bloodgroup != null ? AllPrimData.Bloodgroup : "";
                    ViewBag.emailid = AllPrimData.emailid != null ? AllPrimData.emailid : "";
                    ViewBag.placeinfamily = AllPrimData.placeinfamily != null ? AllPrimData.placeinfamily : "";
                    ViewBag.Ordination = AllPrimData.Ordination != null ? AllPrimData.Ordination : "";
                    ViewBag.Nationality = AllPrimData.Nationality != null ? AllPrimData.Nationality : "";
                    ViewBag.mobilenumber = AllPrimData.mobilenumber != null ? AllPrimData.mobilenumber : "";
                    ViewBag.noofbrother = AllPrimData.noofbrother != null ? AllPrimData.noofbrother : "";
                    ViewBag.noofsisters = AllPrimData.noofsisters != null ? AllPrimData.noofsisters : "";
                    ViewBag.homeparish = AllPrimData.homeparish != null ? AllPrimData.homeparish : "";
                    ViewBag.homediocese = AllPrimData.homediocese != null ? AllPrimData.homediocese : "";

                    ViewBag.UploadPhoto = AllPrimData.UploadPhoto != null ? AllPrimData.UploadPhoto : "";
                    ViewBag.pin = AllPrimData.pin != null ? AllPrimData.pin : "";
                    ViewBag.city = AllPrimData.city != null ? AllPrimData.city : "";
                    ViewBag.district = AllPrimData.district != null ? AllPrimData.district : "";
                    ViewBag.state = AllPrimData.state != null ? AllPrimData.state : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                    ViewBag.Knowname = AllPrimData.Knowname != null ? AllPrimData.Knowname : "";
                    ViewBag.DOBInTheCertificate = AllPrimData.DOBInTheCertificate != null ? AllPrimData.DOBInTheCertificate : "";
                    ViewBag.Telephone = AllPrimData.Telephone != null ? AllPrimData.Telephone : "";
                    ViewBag.NameInTheCertificate = AllPrimData.NameInTheCertificate != null ? AllPrimData.NameInTheCertificate : "";
                    ViewBag.Address = AllPrimData.Address != null ? AllPrimData.Address : "";
                }
                //else
                //{
                //    ViewBag.Baptismialname = null;
                //    ViewBag.Congregation = null;
                //    ViewBag.country = null;
                //    ViewBag.placeofbirth = null;
                //    ViewBag.Continent = null;
                //    ViewBag.LangSpocken = null;
                //    ViewBag.DOB = null;
                //    ViewBag.Feastday = null;
                //    ViewBag.Bloodgroup = null;
                //    ViewBag.emailid = null;
                //    ViewBag.placeinfamily = null;
                //    ViewBag.Ordination = null;
                //    ViewBag.Nationality = null;
                //    ViewBag.mobilenumber = null;
                //    ViewBag.noofbrother = null;
                //    ViewBag.noofsisters = null;
                //    ViewBag.homeparish = null;
                //    ViewBag.homediocese = null;

                //    ViewBag.UploadPhoto = null;
                //    ViewBag.pin = null;
                //    ViewBag.city = null;
                //    ViewBag.district = null;
                //    ViewBag.state = null;
                //    ViewBag.Address = null;
                //}

            }
            else
            {
                var personalDetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId);
                ViewBag.UploadPhoto = personalDetails != null ? personalDetails.Spare1 : "";

            }
            var FileNo = dbcont.GeneralateFileNo.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (FileNo != null)
            {
                ViewBag.GenFileNo = FileNo.GenFileNo;
                ViewBag.ProFileNo = FileNo.ProFileNo;
            }

            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => Convert.ToString(x.MemberId) == memberId);
            int age = 0;
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "d/M/yyyy", CultureInfo.InvariantCulture);
            if (data2 != null && !string.IsNullOrEmpty(data2.DOB))
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "d/M/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age1 = age;

            var datafor = dbcont.Tbl_RenewalVows.FirstOrDefault(x => x.MemberId.ToString() == memberId && x.CurrentStatus == "14");
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            if (datafor != null && !string.IsNullOrEmpty(datafor.Surname))
            {
                DateTime dt1 = DateTime.ParseExact(datafor.Surname, "d/M/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((currentdate1 - dt1).Ticks).Year;
            }
            ViewBag.WorkingYear = Year;

            var Formation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (Formation != null)
            {
                ViewBag.StageOfFormation = Formation.StageOfFormation;
            }

            //  var Appointment = dbcont.Appointments.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            var Appointment = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (Appointment != null)
            {
                Appointment = dbcont.Appointments.Where(x => x.MemberId.ToString() == memberId).OrderByDescending(x => x.Id).FirstOrDefault();
                ViewBag.InstitutionType1 = Appointment.InstitutionType;
                ViewBag.CommunityType = Appointment.CommunityType;
            }

            //Work for the REport
            MemberReportViewModel memberReportViewModel = new MemberReportViewModel();
            memberReportViewModel.PersonalDetial = pertionalInfo;
            //var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();

            List<tbl_Health> allhealths = new List<tbl_Health>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Healthdata = dbcont.tbl_Health.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_HealthforMember = alltbl_Healthdata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_HealthforMember)
                    {
                        allhealths.Add(item);
                    }
                }
            }
            else
            {
                allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allhealths = allhealths;

            //var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            List<tbl_Passed> allpassed = new List<tbl_Passed>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Passeddata = dbcont.tbl_Passed.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_PassedforMember = alltbl_Passeddata.Where(x => x.MemberID == member);
                    foreach (var item in alltbl_PassedforMember)
                    {
                        allpassed.Add(item);
                    }
                }
            }
            else
            {
                allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            }

            ViewBag.allpassed = allpassed;

            var allSacrament = dbcont.DataListItems.Where(x => x.DataListName == "Sacrament").OrderBy(x => x.Name).ToList();
            ViewBag.allSacrament = allSacrament;

            //var scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            List<Sacraments> scrament = new List<Sacraments>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var allSacramentsdata = dbcont.Sacraments.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = allSacramentsdata.Where(x => x.MemberId == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        scrament.Add(item);
                    }
                }
            }
            else
            {
                scrament = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            }


            ViewBag.scrament = scrament;

            //var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            List<tbl_SeperationFromTheCongregation> Sepration = new List<tbl_SeperationFromTheCongregation>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var tbl_SeperationFromTheCongregationsdata = dbcont.tbl_SeperationFromTheCongregation.ToList();
                foreach (var member in allprememberids1)
                {
                    var allSacramentsdataforMember = tbl_SeperationFromTheCongregationsdata.Where(x => x.MemberID == member);
                    foreach (var item in allSacramentsdataforMember)
                    {
                        Sepration.Add(item);
                    }
                }
            }
            else
            {
                Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.Sepration = Sepration;

            //var Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            List<tbl_Insurance> Insurance = new List<tbl_Insurance>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Insurancesdata = dbcont.tbl_Insurance.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_InsurancesdataforMember = alltbl_Insurancesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_InsurancesdataforMember)
                    {
                        Insurance.Add(item);
                    }
                }
            }
            else
            {
                Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Insurance = Insurance;

            List<tbl_Archive> Archive = new List<tbl_Archive>();
            if (memberunicNumber != null)
            {
                var allprememberids1 = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();

                var alltbl_Archivesdata = dbcont.tbl_Archive.ToList();
                foreach (var member in allprememberids1)
                {
                    var alltbl_ArchivesdataforMember = alltbl_Archivesdata.Where(x => x.MemberId == member);
                    foreach (var item in alltbl_ArchivesdataforMember)
                    {
                        Archive.Add(item);
                    }
                }
            }
            else
            {
                Archive = dbcont.tbl_Archive.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.Archive = Archive;

            //Details
            var AllCongregation = dbcont.tbl_Congregation.ToList();
            ViewBag.AllCongregation = AllCongregation;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            var pertiondetails = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == memberId);



            if (Session["username"].ToString() == "admin")
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes").ToList();
                ViewBag.AllMembers = allRecords;
            }
            else
            {
                var allRecords = dbcont.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser).ToList();
                ViewBag.AllMembers = allRecords;
            }

            string MemberId = pertiondetails == null ? "" : pertiondetails.MemberID;
            string SirName = pertiondetails == null ? "" : pertiondetails.SirName;
            string Name = pertiondetails == null ? "" : pertiondetails.Name;
            string Spare1 = pertiondetails == null ? "" : pertiondetails.Spare1;
            string ProvinceName = pertiondetails == null ? "" : pertiondetails.ProvinceName;

            var memberunicNumber1 = dbcont.Tbl_Transfer.FirstOrDefault(x => x.NewMemberId == MemberId);
            List<string> allprememberids = new List<string>();

            if (memberunicNumber1 != null)
            {
                allprememberids = dbcont.tbl_PersonalDetails.Where(x => x.MemberUnicId == memberunicNumber.MemberUnicId).Select(x => x.MemberID).ToList();
            }

            var Appointment1 = dbcont.Appointments.FirstOrDefault(x => x.MemberId.ToString() == MemberId);
            if (Appointment1 != null)
            {
                Appointment1 = dbcont.Appointments.Where(x => x.MemberId.ToString() == MemberId).OrderByDescending(x => x.Id).FirstOrDefault();

                ViewBag.InstitutionType1 = Appointment1.InstitutionType;
                ViewBag.CommunityType = Appointment1.CommunityType;
            }

            var dataFormation = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == memberId);
            if (dataFormation != null)
            {
                ViewBag.CurentStatus = dataFormation.StageOfFormation;
            }

            List<Tbl_Complains> allComplains = new List<Tbl_Complains>();
            if (memberunicNumber != null)
            {
                var allComplainsalldata = dbcont.Tbl_Complains.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allComplainsforMember = allComplainsalldata.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allComplainsforMember)
                    {
                        allComplains.Add(item);
                    }
                }
            }
            else
            {
                allComplains = dbcont.Tbl_Complains.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allComplains = allComplains;

            List<tbl_Retirement> alltbl_Retirement = new List<tbl_Retirement>();
            if (memberunicNumber != null)
            {
                var alltbl_Retirementdata = dbcont.tbl_Retirement.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var alltbl_RetirementdataforMember = alltbl_Retirementdata.Where(x => x.MemberID == MemberId1);
                    foreach (var item in alltbl_RetirementdataforMember)
                    {
                        alltbl_Retirement.Add(item);
                    }
                }
            }
            else
            {
                alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == memberId).ToList();
            }
            ViewBag.allRetire = alltbl_Retirement;

            List<FormationViewModel> formationViewsList = new List<FormationViewModel>();
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();
            if (memberunicNumber != null)
            {
                foreach (var MemberId1 in allprememberids)
                {
                    var memberAllFor = allformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in memberAllFor)
                    {
                        var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation && x.DataListName == "StageOfFormation");
                        //FormationViewModel formationViewModel = new FormationViewModel()
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = item.StageOfFormation,
                            Title = item.Title,
                            Description = item.Description,
                            Id = item.Id,
                            Community = item.Community,
                            FileName = item.FileName
                        });
                        //  allFormationD.Add(item);
                    }
                }
            }
            else
            {
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == memberId).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate
                    });
                    //  allFormationD.Add(item);
                }
            }
            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();//Condition terminated
            ViewBag.allFormationD = allFormationD.ToList();

            ViewBag.allVows = allVows;
            var allFormationTypes = dbcont.Tbl_FormationTypes.ToList();
            ViewBag.FormationTypes = allFormationTypes;
            //Academy Details
            List<tbl_Academy> allAcedemy = new List<tbl_Academy>();
            if (memberunicNumber != null)
            {
                var alltbl_Academys = dbcont.tbl_Academy.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var tbl_Academydata = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId1);
                    foreach (var item in tbl_Academydata)
                    {
                        allAcedemy.Add(item);
                    }
                }
            }
            else
            {
                allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == memberId).ToList();
            }
            ViewBag.allAcedemy = allAcedemy;
            //AppoinmenallAcedemyt
            var allTypes = dbcont.DataLists.ToList();
            ViewBag.AppointmentType = allTypes;
            //Designation
            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            //var allDesignation = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;

            //Stageofformation
            var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
            ViewBag.allStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
            ViewBag.allStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

            //Course
            var allCourse = dbcont.DataListItems.Where(x => x.DataListName == "Course").OrderBy(x => x.Name).ToList();
            ViewBag.allCourse = allCourse;

            //Degree
            var allDegree = dbcont.DataListItems.Where(x => x.DataListName == "Degree").OrderBy(x => x.Name).ToList();
            ViewBag.allDegree = allDegree;

            //country
            var country = dbcont.DataListItems.Where(x => x.DataListName == "Country").OrderBy(x => x.Name).ToList();
            ViewBag.AllCountry = country;

            var Language = dbcont.DataListItems.Where(x => x.DataListName == "Language").OrderBy(x => x.Name).ToList();
            ViewBag.AllLanguage = Language;

            //Institution
            var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;


            //if (Session["username"].ToString() == "admin")
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}
            //else
            //{
            //    var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Place == currentUser).ToList();
            //    ViewBag.AllProvinceData = AllProvince;
            //}

            var AllMemData = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == memberId).ToList();
            foreach (var item in AllMemData)
            {
                ProvinceName = item.ProvinceName;
            }
            ViewBag.PresentProvinceName = ProvinceName;
            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() != ProvinceName).OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.EnterbyId.ToString() != ProvinceName && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;

            //var allCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() != ProvinceName).ToList();
            //ViewBag.CommunityTypeList1 = allCommunity;
            // ViewBag.CommunityTypeList = dbcont.Tbl_Cong.Where(x => x.EnterbyId.ToString() == ProvinceName).ToList();
            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName.ToString() != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == ProvinceName).ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.Where(x => x.ProvinceName != ProvinceName).ToList();
                var tbl_comhouse = dbcont.ComHouse.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allFormators = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Formators = allFormators;
            }
            else
            {
                var allFormators = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Formators = allFormators;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allSupirior = dbcont.tbl_PersonalDetails.ToList();
                ViewBag.Superior = allSupirior;
            }
            else
            {
                var allSupirior = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == currentUser).ToList();
                ViewBag.Superior = allSupirior;
            }
            var DataListItems = dbcont.DataListItems
                       .Where(x => x.Name == Name).ToList();
            ViewBag.DataListItems = DataListItems;

            if (Session["username"].ToString() == "admin")
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").ToList();
                ViewBag.AllProvince = AllProvince;
            }
            else
            {
                var AllProvince = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active" && x.Id.ToString() == currentUser).ToList();
                ViewBag.AllProvince = AllProvince;
            }

            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            if (memberunicNumber != null)
            {
                var allallformations = dbcont.Appointments.ToList();
                foreach (var MemberId1 in allprememberids)
                {
                    var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
                    foreach (var item in allallformationsdata)
                    {
                        allAppointments.Add(item);
                    }
                }
            }
            else
            {
                allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId).ToList();
            }

            ViewBag.allApoinments = allAppointments;
            // All Summary
            var allSummary = GetALlSummary(MemberId);
            ViewBag.allSummary = allSummary;
            string[] tableHeading = { "Registration_No", "File_No", "Archive_No", "Description", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            var userName = Session["username"].ToString();
            string GetCurrentUserName = dbcont.Tbl_UserLogins.Where(x => x.UserName.ToUpper() == userName.ToUpper()).Select(x => x.UserRole).FirstOrDefault().ToString();
            int GetCurrentUserRoleId = Convert.ToInt32(dbcont.Tbl_UserRole.Where(x => x.Role_Name.ToUpper() == GetCurrentUserName.ToUpper()).Select(x => x.Userrole_Id).FirstOrDefault());
            string CurrentPageName = "Members";
            int Submenu_Id = dbcont.Tbl_Submenuhead.Where(x => x.Submenu_Name.ToUpper() == CurrentPageName.ToUpper()).Select(x => x.Submenu_Id).FirstOrDefault();
            var RolePermissionTage = (from m in dbcont.Tbl_TopMenuPermission.ToList()
                                      from n in dbcont.Tbl_Submenuhead.ToList()
                                      where m.ParentId == n.Submenu_Id && Convert.ToInt32(m.RoleId) == GetCurrentUserRoleId && m.ParentId == Submenu_Id
                                      && Convert.ToUInt32(m.HasPermission) == 1
                                      select new Tbl_RolePermission
                                      {
                                          TagName = m.PageName,
                                          Url = m.PageViewName
                                      }).ToList();
            Session["RolePermissionTage"] = RolePermissionTage.ToList();
            ViewBag.CurrentPageName = "Archieve";
            return View();
        }

        #endregion
        public JsonResult GetAllPlace()
        {
            string currentlogin = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);

            try
            {
                var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
                var personDetails = allPlace;
                var allRecords = new
                {
                    PersonDetails = personDetails,
                };
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }
        public ActionResult Appointment2()
        {

            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentUser = Convert.ToString(Session["username"]);
            //string memberId
            ViewBag.memberId = "";
            ViewBag.name = "";

            ViewBag.ProvinceName = "";

            var allDesignation = dbcont.DataListItems.Where(x => x.DataListName == "Designation").OrderBy(x => x.Name).ToList();
            var allDesignation1 = dbcont.Tbl_CommunityAppointmentDetails.OrderBy(x => x.Name).ToList();
            var allDesignation2 = dbcont.Tbl_InstitutionAppointmentDetails.OrderBy(x => x.Name).ToList();
            var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
            ViewBag.DesignationType = allDesignation;
            ViewBag.DesignationType1 = allDesignation1;
            ViewBag.DesignationType2 = allDesignation2;
            ViewBag.Place = allPlace;
            //Institution
            // var proId = dbcont.tbl_PersonalDetails.Where(x => x.MemberID.ToString() == memberId).Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == memberId).ProvinceName : "";
            //var proId = dbcont.tbl_PersonalDetails.Any() ? dbcont.tbl_PersonalDetails.FirstOrDefault().ProvinceName : "";
            //Session["proId"] = proId;
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }
            else
            {
                // var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution"&& x.ProvinceName == proId && x.ProvinceName == currentUser).ToList();
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName = allInstitution;
            }

            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate").OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.Enterby == "Generalate" && x.ProvinceName == currentUser).OrderBy(x => x.Name).ToList();
                ViewBag.InstitutionName14 = allInstitution;
            }
            ViewBag.SGGeneralate = dbcont.tbl_Congregation.Where(x => x.FamilyBelongsTo != "Yes").OrderBy(x => x.CongregationName).ToList();

            if (Session["username"].ToString() == "admin")
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate").ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            else
            {
                var allGenCommunity = dbcont.Tbl_Cong.Where(x => x.Enterby == "Generalate" && x.ProvinceName == currentUser).ToList();
                ViewBag.allGenCommunity4 = allGenCommunity;
            }
            var allCongname = dbcont.ComOutSide.ToList();
            ViewBag.allOSCongname = allCongname;

            //var allCongPro = dbcont.ComOSProvince.OrderBy(x => x.ProvinceName).ToList();
            var allCongPro = dbcont.ComOutSide.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.allCongPro = allCongPro;

            var allComOSCommunity = dbcont.tbl_ComOSCommunity.OrderBy(x => x.DioName).ToList();
            ViewBag.allComOSCommunity = allComOSCommunity;

            var allComOSInstitute = dbcont.tbl_ComOSInstitute.OrderBy(x => x.InstName).ToList();
            ViewBag.allComOSInstitute = allComOSInstitute;

            var allDiocesename = dbcont.tbl_Diocese.OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).OrderBy(x => x.DioceseName).ToList();
            ViewBag.allDiocesename = allDiocesename;

            var allDioParish = dbcont.tbl_DioceseParish.ToList();
            ViewBag.allDioParish = allDioParish;

            var allDioInst = dbcont.tbl_DioceseInst.OrderBy(x => x.InstName).OrderBy(x => x.InstName).ToList();
            ViewBag.InstitutionNameDio = allDioInst;

            var allDioComunity = dbcont.tbl_DioceseCom.OrderBy(x => x.DioName).OrderBy(x => x.ComName).ToList();
            ViewBag.CommunityNameDio = allDioComunity;

            var AllProvinceData = dbcont.tbl_Province.Where(x => x.ActiveCkeck == "Active").OrderBy(x => x.ProvinceName).OrderBy(x => x.ProvinceName).ToList();
            ViewBag.AllProvinceData = AllProvinceData;

            var InstitutionName1 = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").OrderBy(x => x.Name).ToList();
            ViewBag.InstitutionName1 = InstitutionName1;



            //Parish
            var allParish = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Paris").OrderBy(x => x.Name).ToList();
            ViewBag.ParishType = allParish;
            //Community
            List<string> alldata = new List<string>();
            List<string> alldata1 = new List<string>();

            if (Session["username"].ToString() == "admin")
            {
                // var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                //foreach (var item in tbl_comoutside)
                //{
                //    alldata.Add(item.CommunityName);
                //    alldata1.Add(item.CommunityName);
                //}

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }
            else
            {
                //   var tbl_congdata = dbcont.Tbl_Cong.Where(x => x.ProvinceName == currentUser).ToList();
                var tbl_congdata = dbcont.Tbl_Cong.ToList();
                var tbl_congdata1 = dbcont.Tbl_Cong.ToList();
                var tbl_comhouse = dbcont.ComHouse.ToList();
                var tbl_comoutside = dbcont.ComOutSide.Where(x => x.ProvinceName == currentUser).ToList();
                foreach (var item in tbl_congdata)
                {
                    alldata.Add(item.CongregationName);
                }
                foreach (var item in tbl_congdata1)
                {
                    alldata1.Add(item.CongregationName);
                }
                foreach (var item in tbl_comhouse)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }
                foreach (var item in tbl_comoutside)
                {
                    alldata.Add(item.CommunityName);
                    alldata1.Add(item.CommunityName);
                }

                ViewBag.CommunityTypeList = alldata;
                ViewBag.CommunityTypeList1 = alldata1;
            }


            // Community
            var AllCommunity = dbcont.Tbl_Cong.ToList();
            ViewBag.AllCommunity = AllCommunity;
            List<Appointments> allAppointments = new List<Appointments>();
            //Superior
            //if (memberunicNumber != null)
            //{
            //    var allallformations = dbcont.Appointments.ToList();
            //    foreach (var MemberId1 in allprememberids)
            //    {
            //        var allallformationsdata = allallformations.Where(x => x.MemberId == MemberId1);
            //        foreach (var item in allallformationsdata)
            //        {
            //            allAppointments.Add(item);
            //        }
            //    }
            //}
            //else
            //{
            allAppointments = dbcont.Appointments.ToList();


            ViewBag.allApoinments = allAppointments;


            List<InstutionAppointments> allInsAppointments = new List<InstutionAppointments>();
            allInsAppointments = dbcont.InstutionAppointments.ToList();
            ViewBag.allInsApoinments = allInsAppointments;
            return View();
        }
        public JsonResult GetAllAppointmentsServerSidePagination(JqueryDatatableParam param, string provincename, string memberid)
        {
            string currentUser = Convert.ToString(Session["username"]);
            try
            {
                if (provincename == "null")
                {
                    provincename = null;
                }
                if (memberid == "null")
                {
                    memberid = null;
                }

                var allInsAppointments = new List<InstutionAppointments>();
                if (Session["username"].ToString() == "admin")
                {
                    allInsAppointments = dbcont.InstutionAppointments.ToList();
                }
                else
                {
                    allInsAppointments = dbcont.InstutionAppointments.ToList().Where(x => x.ProvinceName.Contains(currentUser)).ToList();

                }


                if (!string.IsNullOrEmpty(provincename) && !string.IsNullOrEmpty(memberid) && memberid != "0")
                {
                    allInsAppointments = allInsAppointments.Where(x => x.ProvinceName == provincename && x.MemberId == memberid).ToList();
                }
                else if (!string.IsNullOrEmpty(provincename))
                {
                    allInsAppointments = allInsAppointments.Where(x => x.ProvinceName == provincename).ToList();
                }
                else if (!string.IsNullOrEmpty(memberid))
                {
                    allInsAppointments = allInsAppointments.Where(x => x.MemberId == memberid).ToList();
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allInsAppointments = allInsAppointments.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.InsDesignationType) && x.InsDesignationType.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.InstitutionType) && x.InstitutionType.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  ).ToList();
                }

                var data = allInsAppointments.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                var totalRecords = allInsAppointments.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }

#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                //throw;
            }
        }
        public JsonResult GetAllCommAppointmentServerSidePagination(JqueryDatatableParam param, string provincename, string memberid)
        {
            string currentUser = Convert.ToString(Session["username"]);
            try
            {
                if (provincename == "null")
                {
                    provincename = null;
                }
                if (memberid == "null")
                {
                    memberid = null;
                }
                var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
                List<Appointments> allAppointments = new List<Appointments>();
                if (Session["username"].ToString() == "admin")
                {
                    allAppointments = dbcont.Appointments.ToList();
                }
                else
                {
                    allAppointments = dbcont.Appointments.Where(x => x.ProvinceName == currentUser).ToList();

                }


                //return Json(data, JsonRequestBehavior.AllowGet);
                if (!string.IsNullOrEmpty(provincename) && !string.IsNullOrEmpty(memberid) && memberid != "0")
                {
                    allAppointments = allAppointments.Where(x => x.ProvinceName == provincename && x.MemberId == memberid).ToList();
                }
                else if (!string.IsNullOrEmpty(provincename))
                {
                    allAppointments = allAppointments.Where(x => x.ProvinceName == provincename).ToList();
                }
                else if (!string.IsNullOrEmpty(memberid))
                {
                    allAppointments = allAppointments.Where(x => x.MemberId == memberid).ToList();
                }

                if (!string.IsNullOrEmpty(param.sSearch))
                {
                    allAppointments = allAppointments.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(param.sSearch.ToLower())
                                                  || !string.IsNullOrEmpty(x.CommunityType) && x.CommunityType.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.DesignationType) && x.DesignationType.ToLowerInvariant().Contains(param.sSearch.ToLowerInvariant())
                                                  ).ToList();
                }
                var allAppointmentsFinal = allAppointments.ToList();

                allAppointmentsFinal.RemoveAll(x => x.MemberId != "");
                foreach (var item in allAppointments)
                {
                    item.Place = item.Place == "" || item.Place == null || item.Place == "0" ? "" : Convert.ToString(allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault() == null ? "" : allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault());
                    allAppointmentsFinal.Add(item);
                }

                var data = allAppointmentsFinal.Skip(param.iDisplayStart).Take(param.iDisplayLength).ToList();
                var totalRecords = allAppointmentsFinal.Count();
                return Json(new
                {
                    param.sEcho,
                    iTotalRecords = totalRecords,
                    iTotalDisplayRecords = totalRecords,
                    aaData = data
                }, JsonRequestBehavior.AllowGet);
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                //throw;
            }
        }
        public JsonResult GetContinent(string Name)
        {
            if (Name != "" && Name != "0" && Name != "---Select Country---")
            {
                var continent = dbcont.DataListItems.FirstOrDefault(x => x.DataListName == "Country" && (x.Name == Name || x.Name_French == Name)).Continent;
                return Json(continent);
            }
            else
            {
                return Json("");
            }
        }
        public List<DetailsSummaryViewModel> GetFormation(string memberId)
        {
            List<DetailsSummaryViewModel> allSummary = new List<DetailsSummaryViewModel>();
            var allTbl_Primarydetails = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId);
            foreach (var item in allTbl_Primarydetails)
            {
                allSummary.Add(new DetailsSummaryViewModel
                {
                    Title = item.Knowname,
                    Date = item.DOB,
                    Description = item.DOB
                });
            }

            return allSummary.ToList();
        }
        public List<DetailsSummaryViewModel> GetALlSummary(string memberId)
        {
            List<DetailsSummaryViewModel> allSummary = new List<DetailsSummaryViewModel>();

            var allTbl_Primarydetails = dbcont.tbl_Primarydetails.Where(x => x.MemberId == memberId);
            var allFamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId == memberId);
            var alltbl_Health = dbcont.tbl_Health.Where(x => x.MemberID == memberId);
            var allAppointments = dbcont.Appointments.Where(x => x.MemberId == memberId);
            foreach (var item in allTbl_Primarydetails)
            {
                allSummary.Add(new DetailsSummaryViewModel
                {
                    Title = item.Knowname,
                    Date = item.DOB,
                    Description = item.DOB
                });
            }
            foreach (var item in allFamilyDetails)
            {
                allSummary.Add(new DetailsSummaryViewModel
                {
                    Title = item.Name,
                    Date = item.YearOfBirth,
                    Description = item.Address
                });
            }
            foreach (var item in alltbl_Health)
            {
                allSummary.Add(new DetailsSummaryViewModel
                {
                    Title = item.Name,
                    Date = item.CreatedDate,
                    Description = "No Description"
                });
            }
            foreach (var item in allAppointments)
            {
                allSummary.Add(new DetailsSummaryViewModel
                {
                    Title = item.Title,
                    Date = item.Date,
                    Description = item.Description
                });
            }
            return allSummary.ToList();
        }
        public JsonResult GetAll()
        {
            try
            {
                var result = dbcont.tbl_unknow.ToList();
                return Json(result, JsonRequestBehavior.AllowGet);
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                throw;
            }
        }
        public JsonResult Add12(tbl_unknow newobj)
        {
            try
            {
                dbcont.tbl_unknow.Add(newobj);
                dbcont.SaveChanges();
                return Json("Success");
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
                return Json("Failed");
            }
        }
        [AcceptVerbs(HttpVerbs.Post)]
        public JsonResult UploadFile()
        {
            var memid = "";
            var comPath = "";
            var fileName = "";
            if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
            {
                var pic = System.Web.HttpContext.Current.Request.Files["MyImages"];
                memid = System.Web.HttpContext.Current.Request["Memid"];
                if (pic.ContentLength > 0)
                {
                    var _ext = Path.GetExtension(pic.FileName);
                    fileName = Guid.NewGuid().ToString() + _ext;
                    comPath = Server.MapPath("~/Images/Adhar/") + fileName;
                    pic.SaveAs(comPath);
                }
            }
            return Json(fileName, JsonRequestBehavior.AllowGet);
        }
        [AcceptVerbs(HttpVerbs.Post)]
        public JsonResult UploadFile1()
        {
            var memid = "";
            var comPath = "";
            var fileName = "";
            if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
            {
                var pic = System.Web.HttpContext.Current.Request.Files["MyImages"];
                memid = System.Web.HttpContext.Current.Request["Memid"];

                if (pic.ContentLength > 0)
                {
                    var _ext = Path.GetExtension(pic.FileName);
                    fileName = Guid.NewGuid().ToString() + _ext;
                    comPath = Server.MapPath("~/Images/Pan/") + fileName;
                    pic.SaveAs(comPath);
                }
            }
            return Json(fileName, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetFormationById(int id)
        {
            try
            {
                var genFormation = dbcont.tbl_unknow.FirstOrDefault(e => e.memid == id);
                if (genFormation != null)
                {
                    return Json(genFormation, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllPrimaryByAge(int age, int Toage, string province)
        {
            var currentyear = System.DateTime.Now.Year;
            List<tbl_Primarydetails> alldata = new List<tbl_Primarydetails>();
            var allPrimaryMan = dbcont.tbl_Primarydetails.Where(x => !string.IsNullOrEmpty(x.DOB)).ToList();
            if (province != "0")
            {
                allPrimaryMan = allPrimaryMan.Where(x => x.ProvinceName == province).ToList();
            }
            else if (province == "0")
            {
                allPrimaryMan = allPrimaryMan.ToList();
            }
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            if (age > 0 && Toage == 0)
            {
                foreach (var item in allPrimaryMan)
                {
                    DateTime dt = DateTime.ParseExact(item.DOB, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                    int Age = new DateTime((currentdate - dt).Ticks).Year;
                    if (Age == age)
                    {
                        alldata.Add(item);
                    }
                }
            }
            if (Toage > 0)
            {
                alldata = (from s in allPrimaryMan
                           where (datecal(s.DOB) >= age && datecal(s.DOB) <= Toage)
                           select s).ToList();

                //allPrimaryMan.Where(x => Convert.ToDateTime((currentdate - Convert.ToDateTime(x.DOB)).Ticks).Year >= age && Convert.ToDateTime((currentdate - Convert.ToDateTime(x.DOB)).Ticks).Year <= Toage).ToList();
            }

            return Json(alldata, JsonRequestBehavior.AllowGet);
        }
        public int datecal(string date)
        {
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            DateTime dt = DateTime.ParseExact(date, "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Age = new DateTime((currentdate - dt).Ticks).Year;
            return Age;
        }


        //ConfigSettings
        //public string Configsettings()
        //{
        //    var 
        //}

        public string GetConfingSetting(string Configkey)
        {
            List<tblConfigSetting> settings = new HomeController().GetConfingSettings();
            return settings.Where(x => x.strPurpose == "MemberReportStatistic" && x.strConfigKey == Configkey).FirstOrDefault().strConfigValue;
        }

        //    var tempvow = new tblConfigSetting();
        //    var ConfigSettings = dbcont.tblConfigSetting.Where(x => x.strPurpose == "MemberReportStatistic").ToList();
        //    tempvow = ConfigSettings.FirstOrDefault(x => x.strConfigKey == Configkey);
        //                var finalvow = ConfigSettings.FirstOrDefault(x => x.strConfigKey == "DyKey2");

        //                return tempvow.strConfigValue;
        //            }

        public JsonResult BasedOnSeniority(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string CurrentUser = Convert.ToString(Session["username"]);
            var BasedonSeniority = new List<GetAllPrileView>();
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");


            if (Session["username"].ToString() == "admin")
            {
                var currentyear = System.DateTime.Now.Year;
                if (province != "0")
                {
                    //allPrimaryMan = allPrimaryMan.Where(x => x.ProvinceName == province).ToList();
                    personeldetails = personeldetails.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    //allPrimaryMan = allPrimaryMan.ToList();
                    personeldetails = personeldetails.ToList();
                }

                foreach (var item in personeldetails)
                {
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }
                    if (primarydata != null && Firstvow != null && FinalVow != null)
                    {
                        if (primarydata.DOB != null || primarydata.DOB != "NULL")
                        {

                            var age = GetAge1(primarydata.DOB);

                            BasedonSeniority.Add(new GetAllPrileView
                            {
                                Name = item.Name,
                                Sirname = item.SirName,
                                DOB = primarydata.DOB,
                                Age = Convert.ToString(age)
                            });
                        }

                    }
                }

                var data = BasedonSeniority.OrderByDescending(x => x.Age).ToList();
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentyear = System.DateTime.Now.Year;
                if (province != "0")
                {
                    personeldetails = personeldetails.Where(x => x.ProvinceName == CurrentUser).ToList();
                }
                else if (province == "0")
                {
                    personeldetails = personeldetails.ToList();
                }

                foreach (var item in personeldetails)
                {
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;
                    }
                    if (primarydata != null && Firstvow != null && FinalVow != null)
                    {
                        if (primarydata.DOB != null)
                        {

                            var age = GetAge1(primarydata.DOB);

                            BasedonSeniority.Add(new GetAllPrileView
                            {
                                Name = item.Name,
                                Sirname = item.SirName,
                                DOB = primarydata.DOB,
                                Age = Convert.ToString(age)
                            });
                        }

                    }
                }

                return Json(BasedonSeniority.OrderBy(x => x.Age).ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult DeathAnnivers(string province, string FromDate, string ToDate)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string CurrentUser = Convert.ToString(Session["username"]);

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            DateTime FDate, TDate;
            if (Session["username"].ToString() == "admin")
            {
                var fromdate = FromDate.Split('-');
                var todate = ToDate.Split('-');

                FDate = Convert.ToDateTime(FromDate);
                TDate = Convert.ToDateTime(ToDate);

                var data = dbcont.tbl_Passed.ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }

                var alldata = new List<tbl_Passed>();
                foreach (var item in data)
                {
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0")
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1")
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }

                    if (item.Date != null && Firstvow != null && FinalVow != null)
                    {

                        DateTime Edate = Convert.ToDateTime(item.Date);
                        if (Edate.Month >= FDate.Month && Edate.Month <= TDate.Month)
                        {
                            alldata.Add(new tbl_Passed()
                            {
                                Name = item.Name,
                                SirName = item.SirName,
                                Date = item.Date,
                                Time = item.Time,
                                Age = item.Age,
                                WorkingYear = item.WorkingYear == "0" || item.WorkingYear == null ? "" : item.WorkingYear,
                                LastCommunity = item.LastCommunity,
                                LastPlaceRites = item.LastPlaceRites
                            });
                        }

                        //var eternaldate = item.Date.Split('/');
                        //if (Convert.ToInt32(eternaldate[1].TrimStart('0')) >= Convert.ToInt32(fromdate[1].TrimStart('0')) && Convert.ToInt32(eternaldate[1].TrimStart('0')) <= Convert.ToInt32(todate[1].TrimStart('0')))
                        //{
                        //    alldata.Add(new tbl_Passed()
                        //    {
                        //        Name = item.Name,
                        //        SirName = item.SirName,
                        //        Date = item.Date,
                        //        Time = item.Time,
                        //        Age = item.Age,
                        //        WorkingYear = item.WorkingYear,
                        //        LastCommunity = item.LastCommunity,
                        //        LastPlaceRites = item.LastPlaceRites
                        //    });
                        //}
                    }
                }
                return Json(alldata.OrderBy(x => x.Date), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = dbcont.tbl_Passed.Where(x => x.ProvinceName == CurrentUser).ToList();
                FDate = Convert.ToDateTime(FromDate);
                TDate = Convert.ToDateTime(ToDate);
                //if (FromDate != "")
                //{
                //    data = data.Where(x => Convert.ToDateTime(x.Date) >= Convert.ToDateTime(FromDate)).ToList();
                //}
                //if (ToDate != "")
                //{
                //    data = data.Where(x => Convert.ToDateTime(x.Date) <= Convert.ToDateTime(ToDate)).ToList();
                //}
                var alldata = new List<tbl_Passed>();
                foreach (var item in data)
                {
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0")
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1")
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }
                    if (item.Date != null && Firstvow != null && FinalVow != null)
                    {
                        DateTime Edate = Convert.ToDateTime(item.Date);
                        if (Edate.Month >= FDate.Month && Edate.Month <= TDate.Month)
                        {
                            alldata.Add(new tbl_Passed()
                            {
                                Name = item.Name,
                                SirName = item.SirName,
                                Date = item.Date,
                                Time = item.Time,
                                Age = item.Age,
                                WorkingYear = item.WorkingYear,
                                LastCommunity = item.LastCommunity,
                                LastPlaceRites = item.LastPlaceRites
                            });
                        }

                    }

                }

                return Json(alldata.OrderBy(x => x.Date), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult Birthday(string province, string FromDate, string ToDate)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var primarydetails = dbcont.tbl_Primarydetails.ToList();
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var fromdate = FromDate.Split('-');
            var todate = ToDate.Split('-');

            if (Session["username"].ToString() == "admin")
            {

                var data = dbcont.tbl_PersonalDetails.Where(x => x.IsTransfer == null).ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    data = data.ToList();
                }
                var primarydata = new List<GetAllPrileView>();
                foreach (var item in data)
                {
                    {
                        Tbl_formationsDetails Firstvow = null;
                        Tbl_formationsDetails FinalVow = null;
                        var dob = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberID);


                        foreach (var obj in formationdetails)
                        {
                            if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                            {
                                Firstvow = obj;
                            }
                            if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                            {
                                FinalVow = obj;
                            }
                            if (Firstvow != null && FinalVow != null)
                                break;

                        }

                        if (Firstvow != null && FinalVow != null)
                        {
                            if (dob.DOB != null)
                            {
                                var dataofbirth = dob.DOB.Split('/');
                                if (Convert.ToInt32(dataofbirth[1].TrimStart('0')) >= Convert.ToInt32(fromdate[1].TrimStart('0')) && Convert.ToInt32(dataofbirth[1].TrimStart('0')) <= Convert.ToInt32(todate[1].TrimStart('0')))
                                {
                                    primarydata.Add(new GetAllPrileView()
                                    {
                                        Name = item.Name,
                                        Sirname = item.SirName,
                                        DOB = dob.DOB,
                                        Age = GetAge1(dob.DOB).ToString()
                                    });
                                }
                            }

                        }

                    }


                }

                return Json(primarydata.OrderBy(x => x.DOB), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = dbcont.tbl_PersonalDetails.Where(x => x.IsTransfer == null).ToList();


                var primarydata = new List<GetAllPrileView>();

                foreach (var item in data)
                {
                    {
                        Tbl_formationsDetails Firstvow = null;
                        Tbl_formationsDetails FinalVow = null;

                        var dob = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberID);

                        foreach (var obj in formationdetails)
                        {
                            if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                            {
                                Firstvow = obj;
                            }
                            if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                            {
                                FinalVow = obj;
                            }
                            if (Firstvow != null && FinalVow != null)
                                break;

                        }
                        if (Firstvow != null && FinalVow != null)
                        {
                            if (dob.DOB != null)
                            {
                                var dataofbirth = dob.DOB.Split('/');
                                if (Convert.ToInt32(dataofbirth[1].TrimStart('0')) >= Convert.ToInt32(fromdate[1].TrimStart('0')) && Convert.ToInt32(dataofbirth[1].TrimStart('0')) <= Convert.ToInt32(todate[1].TrimStart('0')))
                                {
                                    primarydata.Add(new GetAllPrileView()
                                    {
                                        Name = item.Name,
                                        Sirname = item.SirName,
                                        DOB = dob.DOB,
                                        Age = GetAge1(dob.DOB).ToString()
                                    });
                                }
                            }

                        }

                    }


                }
                return Json(primarydata.OrderBy(x => x.DOB), JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult Feastday(string province, string FromDate, string ToDate)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);


            if (Session["username"].ToString() == "admin")
            {
                var data = dbcont.tbl_Primarydetails.Where(x => x.Feastday != "" && x.Feastday != null).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                if (FromDate != "")
                {
                    data = data.Where(x => Convert.ToDateTime(x.DOB) >= Convert.ToDateTime(FromDate)).ToList();
                }
                if (ToDate != "")
                {
                    data = data.Where(x => Convert.ToDateTime(x.DOB) <= Convert.ToDateTime(ToDate)).ToList();
                }
                var alldata = new List<tbl_Primarydetails>();
                foreach (var item in data)
                {
                    alldata.Add(new tbl_Primarydetails()
                    {
                        Knowname = item.Knowname,
                        SurName = item.SurName,
                        Feastday = item.Feastday,
                    });
                }
                return Json(alldata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = dbcont.tbl_Primarydetails.Where(x => x.ProvinceName == currentuser && x.Feastday != "" && x.Feastday != null).ToList();
                if (FromDate != "")
                {
                    data = data.Where(x => Convert.ToDateTime(x.DOB) >= Convert.ToDateTime(FromDate)).ToList();
                }
                if (ToDate != "")
                {
                    data = data.Where(x => Convert.ToDateTime(x.DOB) <= Convert.ToDateTime(ToDate)).ToList();
                }
                var alldata = new List<tbl_Primarydetails>();
                foreach (var item in data)
                {
                    alldata.Add(new tbl_Primarydetails()
                    {
                        Knowname = item.Knowname,
                        SurName = item.SurName,
                        Feastday = item.Feastday,
                    });
                }
                return Json(alldata, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult Ordinationday(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var data = dbcont.tbl_Primarydetails.Where(x => x.Ordination != "" && x.Ordination != null).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                var alldata = new List<tbl_Primarydetails>();
                foreach (var item in data)
                {
                    alldata.Add(new tbl_Primarydetails()
                    {
                        Knowname = item.Knowname,
                        SurName = item.SurName,
                        Ordination = item.Ordination,
                    });
                }
                return Json(alldata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = dbcont.tbl_Primarydetails.Where(x => x.ProvinceName == currentuser
                && x.Ordination != "" && x.Ordination != null).ToList();
                var alldata = new List<tbl_Primarydetails>();
                foreach (var item in data)
                {
                    alldata.Add(new tbl_Primarydetails()
                    {
                        Knowname = item.Knowname,
                        SurName = item.SurName,
                        Ordination = item.Ordination,
                    });
                }
                return Json(alldata, JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult jubliiData(string province, string FromDate, string ToDate)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");

            DateTime Fdate;
            DateTime Tdate;

            DateTime.TryParse(FromDate, out Fdate);
            DateTime.TryParse(ToDate, out Tdate);

            var validYears = new List<string>();

            var fYear = Fdate.Year;

            while (fYear <= Tdate.Year)
            {
                validYears.Add((fYear - 25).ToString());
                validYears.Add((fYear - 50).ToString());
                validYears.Add((fYear - 60).ToString());
                validYears.Add((fYear - 70).ToString());
                validYears.Add((fYear - 75).ToString());
                validYears.Add((fYear - 80).ToString());
                fYear++;
            }


            var query = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == tempvow && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null &&
                validYears.Any(a => x.VowsDate.Contains(a)));

            if (province != "0")
            {
                if (currentuser != "admin")
                    query = query.Where(x => x.ProvinceName == currentuser);
                else
                    query = query.Where(x => x.ProvinceName == province);

            }


            var jubliiiData = query.Select(s => new GetAllPrileView
            {
                Name = s.Name,
                FromDate = s.VowsDate,
            }).ToList();

            foreach (var item in jubliiiData)
            {
                DateTime TempDate;

                DateTime.TryParse(item.FromDate, out TempDate);

                if (!(TempDate.Month >= Fdate.Month && TempDate.Month <= Tdate.Month))
                    continue;

                if (!(TempDate.Day >= Fdate.Day && TempDate.Day <= Tdate.Day))
                    continue;



                if (TempDate.Year == DateTime.Now.AddYears(-25).Year)
                    item.JubilyType = "Silver Jubilee";


                if (TempDate.Year == DateTime.Now.AddYears(-50).Year)
                    item.JubilyType = "Golden Jubilee";

                if (TempDate.Year == DateTime.Now.AddYears(-60).Year)
                    item.JubilyType = "Diament Jubilee";


                if (TempDate.Year == DateTime.Now.AddYears(-70).Year)
                    item.JubilyType = "Platinum Jubilee";


                if (TempDate.Year == DateTime.Now.AddYears(-75).Year)
                    item.JubilyType = "Alabaster Jubilee";

                if (TempDate.Year == DateTime.Now.AddYears(-80).Year)
                    item.JubilyType = "Oak Jubilee";

            }

            jubliiiData = jubliiiData.Where(w => !string.IsNullOrEmpty(w.JubilyType)).ToList();



            return Json(jubliiiData, JsonRequestBehavior.AllowGet);



        }
        [NonAction]
        public string GetJubliiType(string date, string fromdate)
        {
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);

            //DateTime dt = DateTime.ParseExact(date, "dd/MM/yyyy", CultureInfo.InvariantCulture);
            //int Age = new DateTime((currentdate - dt).Ticks).Year - 1;
            var dt = DateTime.Parse(date);
            var fromyear = DateTime.Parse(fromdate);
            int Age = fromyear.Year - dt.Year;
            // Console.WriteLine(dt.ToString("yyyy-MM-dd"));
            if (Age == 25)
            {
                return "Silver Jubilee";
            }
            else if (Age == 50)
            {
                return "Golden Jubilee";
            }
            else if (Age == 75)
            {
                return "Platinum Jubilee";
            }
            else
            {
                return "";
            }
        }
        public JsonResult Chronologicalorder(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");

            var data = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();
            var Formationdetails = dbcont.Tbl_formationsDetails.ToList();

            if (Session["username"].ToString() == "admin")
            {
                //var data = dbcont.tbl_PersonalDetails.OrderBy(x => x.Name).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                var alldata = new List<GetAllPrileView>();
                foreach (var item in data)
                {
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    foreach (var obj in Formationdetails)
                    {
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberID && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }

                        if (Firstvow != null && FinalVow != null)
                            break;

                        //var Firstvow = Formationdetails.FirstOrDefault(x => x.MemberId == item.MemberID && x.StageOfFormation == tempvow && x.Status == "0" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null);

                        //var FinalVow = Formationdetails.FirstOrDefault(x => x.MemberId == item.MemberID && x.StageOfFormation == finalvow && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null);
                    }
                    if (primarydata != null && Firstvow != null && FinalVow != null)
                    {
                        alldata.Add(new GetAllPrileView()
                        {
                            Name = item.Name,
                            Sirname = item.SirName,
                            DOB = primarydata.DOB,
                            EmailId = primarydata.emailid
                        });
                    }

                }
                return Json(alldata.OrderBy(x => x.Name), JsonRequestBehavior.AllowGet);
            }
            else
            {
                //var data = dbcont.tbl_Primarydetails.Where(x => x.ProvinceName == currentuser).OrderBy(x => x.Knowname).ToList();
                //var data = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == province).OrderBy(x => x.Name).ToList();

                var alldata = new List<GetAllPrileView>();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                foreach (var item in data)
                {
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                    var Firstvow = Formationdetails.FirstOrDefault(x => x.MemberId == item.MemberID && x.StageOfFormation == tempvow && x.Status == "0" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null);
                    var FinalVow = Formationdetails.FirstOrDefault(x => x.MemberId == item.MemberID && x.StageOfFormation == finalvow && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null);
                    if (primarydetails != null && Firstvow != null && FinalVow != null)
                    {
                        alldata.Add(new GetAllPrileView()
                        {
                            Name = item.Name,
                            Sirname = item.SirName,
                            DOB = primarydata.DOB,
                            EmailId = primarydata.emailid
                        });
                    }
                }
                return Json(alldata.OrderBy(x => x.Name), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult Basedonbatch(int year, string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var currentyear = System.DateTime.Now.Year;
                List<BasedOnSeniorityViewModel> alldata = new List<BasedOnSeniorityViewModel>();
                var allPrimaryMan = dbcont.tbl_Primarydetails
                                  .Where(x => x.Ordination != null).ToList();
                if (province != "0")
                {
                    allPrimaryMan = allPrimaryMan.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    allPrimaryMan = allPrimaryMan.ToList();
                }
                foreach (var item in allPrimaryMan)
                {
                    var perYear = item.Ordination.Substring(item.Ordination.Length - 4);
                    alldata.Add(new BasedOnSeniorityViewModel
                    {
                        Knowname = item.Knowname,
                        Date = item.Ordination,
                        emailid = item.emailid,
                        SurName = item.Baptismialname,
                        Ordination = item.Ordination,
                        Year = Convert.ToInt32(perYear)
                    });
                }
                return Json(alldata.Where(x => x.Year == year).ToList(), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var currentyear = System.DateTime.Now.Year;
                List<BasedOnSeniorityViewModel> alldata = new List<BasedOnSeniorityViewModel>();
                var allPrimaryMan = dbcont.tbl_Primarydetails
                                  .Where(x => x.ProvinceName == currentuser && x.Ordination != null).ToList();
                foreach (var item in allPrimaryMan)
                {
                    var perYear = item.Ordination.Substring(item.Ordination.Length - 4);
                    alldata.Add(new BasedOnSeniorityViewModel
                    {
                        Knowname = item.Knowname,
                        Date = item.Ordination,
                        emailid = item.emailid,
                        SurName = item.Baptismialname,
                        Ordination = item.Ordination,
                        Year = Convert.ToInt32(perYear)
                    });
                }
                return Json(alldata.Where(x => x.Year == year).ToList(), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult FirstVows(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            if (Session["username"].ToString() == "admin")
            {
                //var data = dbcont.Tbl_RenewalVows.Where(x => x.CurrentStatus == "14").ToList();
                var data = formationdetails.Where(x => x.StageOfFormation == tempvow && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                var alldata = new List<GetAllPrileView>();
                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    alldata.Add(new GetAllPrileView()
                    {
                        Name = item.Name,
                        FileNo = personeldata.FileNo,
                        Sirname = personeldata.SirName,
                        FromDate = item.VowsDate

                    });
                }
                return Json(alldata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = formationdetails.Where(x => x.StageOfFormation == tempvow && x.ProvinceName == currentuser && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                var alldata = new List<GetAllPrileView>();
                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);

                    alldata.Add(new GetAllPrileView()
                    {
                        Name = item.Name,
                        FileNo = personeldata.FileNo,
                        Sirname = personeldata.SirName,
                        FromDate = item.VowsDate

                    });
                }
                return Json(alldata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult FinalVows(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primardetails = dbcont.tbl_Primarydetails.ToList();

            if (Session["username"].ToString() == "admin")
            {
                var data = formationdetails.Where(x => x.StageOfFormation == finalvow && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }
                var alldata = new List<GetAllPrileView>();
                foreach (var item in data)
                {
                    var perosneldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primardetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    //var firstvowdata = dbcont.Tbl_formationsDetails.FirstOrDefault(x => x.MemberId == item.MemberId && x.StageOfFormation == tempvow && x.Diedcheck == null && x.Sapcheck == null && x.Sapcheck == null);
                    if (perosneldata != null && primarydata != null)
                    {
                        alldata.Add(new GetAllPrileView()
                        {
                            Name = item.Name,
                            FileNo = perosneldata.FileNo,
                            Sirname = perosneldata.SirName,
                            //FromDate = firstvowdata.VowsDate,
                            ToDate = item.VowsDate,
                            DOB = primarydata.DOB,
                            Age = GetAge1(primarydata.DOB).ToString()

                        });
                    }

                }
                return Json(alldata.OrderBy(x => x.ToDate), JsonRequestBehavior.AllowGet);
            }
            else
            {
                //var data = dbcont.Tbl_RenewalVows.Where(x => x.CurrentStatus == "15" && x.ProvinceName == currentuser).ToList();
                var data = formationdetails.Where(x => x.StageOfFormation == finalvow && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                var alldata = new List<GetAllPrileView>();
                foreach (var item in data)
                {
                    var perosneldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primardetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    //var firstvowdata = formationdetails.FirstOrDefault(x => x.MemberId == item.MemberId && x.StageOfFormation == tempvow && x.Diedcheck == null && x.Sapcheck == null && x.Sapcheck == null);
                    if (perosneldata != null && primarydata != null)
                    {
                        alldata.Add(new GetAllPrileView()
                        {
                            Name = item.Name,
                            FileNo = perosneldata.FileNo,
                            Sirname = perosneldata.SirName,
                            //FromDate = firstvowdata.VowsDate,
                            ToDate = item.VowsDate,
                            DOB = primarydata.DOB,
                            Age = GetAge1(primarydata.DOB).ToString()

                        });
                    }
                }
                return Json(alldata.OrderBy(x => x.ToDate), JsonRequestBehavior.AllowGet);
            }
        }

        //Archieve
        public JsonResult CheckArchieve(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);

            var ArchieveData = new List<GetAllPrileView>();

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();


            if (Session["username"].ToString() == "admin")
            {
                var data = dbcont.tbl_Archive.ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);

                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Archivecheck == "yes")
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Archivecheck == "yes")
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;
                    }

                    if (personeldata != null && Firstvow != null && FinalVow != null)
                    {
                        ArchieveData.Add(new GetAllPrileView
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = item.FileNo,
                            ArcheveNO = item.ArchiveNo
                        });
                    }

                }

                return Json(ArchieveData, JsonRequestBehavior.AllowGet);


            }
            else
            {
                var data = dbcont.tbl_Archive.ToList();
                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;

                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Archivecheck == "yes")
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Archivecheck == "yes")
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;
                    }
                    if (personeldata != null && Firstvow != null && FinalVow != null)
                    {
                        ArchieveData.Add(new GetAllPrileView
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = item.FileNo,
                            ArcheveNO = item.ArchiveNo
                        });
                    }

                }

                return Json(ArchieveData, JsonRequestBehavior.AllowGet);

            }



        }


        //Noviatiate
        public JsonResult Novitiate(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            var IstNovitiatedata = new List<GetAllPrileView>();

            var Novi1st = GetConfingSetting("DyKey3");
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();

            if (Session["username"].ToString() == "admin")
            {
                //var IstNovitiate = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "13" && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();
                //var IIndNovitiate = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "14" && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                var data = formationdetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && x.StageOfFormation == Novi1st && x.Status == "1").ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    if (personeldata != null)
                    {
                        IstNovitiatedata.Add(new GetAllPrileView()
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = personeldata.FileNo,
                            DOB = primarydata == null ? string.Empty : primarydata.DOB,
                            FromDate = item.FromDate,
                            Age = primarydata == null ? string.Empty : GetAge1(primarydata.DOB).ToString()

                        });
                    }
                }


                return Json(IstNovitiatedata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);

            }
            else
            {

                var data = formationdetails.Where(x => x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null && x.StageOfFormation == Novi1st && x.Status == "1").ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else if (province == "0")
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    if (personeldata != null && primarydata != null)
                    {
                        IstNovitiatedata.Add(new GetAllPrileView()
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = personeldata.FileNo,
                            DOB = primarydata.DOB,
                            FromDate = item.FromDate,
                            Age = GetAge1(primarydata.DOB).ToString()

                        });
                    }
                }

                return Json(IstNovitiatedata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);
            }
        }


        public JsonResult IIndNovitiate(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            var IIndnovitiatedata = new List<GetAllPrileView>();

            var Novi2nd = GetConfingSetting("DyKey4");
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();


            if (Session["username"].ToString() == "admin")
            {
                var IIndNovitiate = formationdetails.Where(x => x.StageOfFormation == Novi2nd && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                if (province != "0")
                {
                    IIndNovitiate = IIndNovitiate.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    IIndNovitiate = IIndNovitiate.ToList();
                }

                //if(FromDate != "")
                //{

                //    IIndNovitiate = IIndNovitiate.Where(x => Convert.ToDateTime(x.FromDate) >= Convert.ToDateTime(FromDate)).ToList();

                //}
                //if(ToDate != "")
                //{
                //    IIndNovitiate = IIndNovitiate.Where(x => Convert.ToDateTime(x.FromDate) <= Convert.ToDateTime(ToDate)).ToList();

                //}


                foreach (var item in IIndNovitiate)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    if (personeldata != null && primarydata != null)
                    {
                        IIndnovitiatedata.Add(new GetAllPrileView()
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = personeldata.FileNo,
                            DOB = primarydata.DOB,
                            FromDate = item.FromDate,
                            Age = GetAge1(primarydata.DOB).ToString()
                        });
                    }
                }

                return Json(IIndnovitiatedata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);

            }

            else
            {
                var IIndNovitiate = formationdetails.Where(x => x.StageOfFormation == Novi2nd && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                if (province != "0")
                {
                    IIndNovitiate = IIndNovitiate.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else if (province == "0")
                {
                    IIndNovitiate = IIndNovitiate.ToList();
                }

                //if (FromDate != "")
                //{

                //    IIndNovitiate = IIndNovitiate.Where(x => Convert.ToDateTime(x.FromDate) >= Convert.ToDateTime(FromDate)).ToList();

                //}
                //if (ToDate != "")
                //{
                //    IIndNovitiate = IIndNovitiate.Where(x => Convert.ToDateTime(x.FromDate) <= Convert.ToDateTime(ToDate)).ToList();

                //}


                foreach (var item in IIndNovitiate)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    if (personeldata != null && primarydata != null)
                    {
                        IIndnovitiatedata.Add(new GetAllPrileView()
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = personeldata.FileNo,
                            DOB = primarydata.DOB,
                            FromDate = item.FromDate,
                            Age = GetAge1(primarydata.DOB).ToString()
                        });
                    }
                }

                return Json(IIndnovitiatedata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);
            }


        }

        public JsonResult Prenovitiatereport(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            var prenovitiatedata = new List<GetAllPrileView>();

            var prenovitiateid = GetConfingSetting("DyKey5");
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();


            if (Session["username"].ToString() == "admin")
            {
                var prenovitiate = formationdetails.Where(x => x.StageOfFormation == prenovitiateid && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                if (province != "0")
                {
                    prenovitiate = prenovitiate.Where(x => x.ProvinceName == province).ToList();
                }
                else if (province == "0")
                {
                    prenovitiate = prenovitiate.ToList();
                }




                foreach (var item in prenovitiate)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    if (personeldata != null && primarydata != null)
                    {
                        prenovitiatedata.Add(new GetAllPrileView()
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = personeldata.FileNo,
                            DOB = primarydata.DOB,
                            FromDate = item.FromDate,
                            Age = GetAge1(primarydata.DOB).ToString()
                        });
                    }
                }

                return Json(prenovitiatedata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);

            }
            else
            {
                var prenovitiate = formationdetails.Where(x => x.StageOfFormation == prenovitiateid && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                //var prenovitiate = dbcont.Tbl_formationsDetails.Where(x => x.StageOfFormation == "12" && x.Status == "1" && x.Diedcheck == null && x.Sapcheck == null && x.Archivecheck == null).ToList();

                if (province != "0")
                {
                    prenovitiate = prenovitiate.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else if (province == "0")
                {
                    prenovitiate = prenovitiate.ToList();
                }



                foreach (var item in prenovitiate)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    var primarydata = primarydetails.FirstOrDefault(x => x.MemberId == item.MemberId);
                    if (personeldata != null && primarydata != null)
                    {
                        prenovitiatedata.Add(new GetAllPrileView()
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            FileNo = personeldata.FileNo,
                            DOB = primarydata.DOB,
                            FromDate = item.FromDate,
                            Age = GetAge1(primarydata.DOB).ToString()
                        });
                    }
                }


                return Json(prenovitiatedata.OrderBy(x => x.FromDate), JsonRequestBehavior.AllowGet);
            }
        }


        //Course
        public JsonResult Course(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);
            var Courselist = new List<GetAllPrileView>();

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();

            if (Session["username"].ToString() == "admin")
            {
                var data = dbcont.tbl_Academy.ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {

                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;

                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }


                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);
                    if (personeldata != null && Firstvow != null && FinalVow != null)
                    {
                        Courselist.Add(new GetAllPrileView
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            Course = item.course
                        });
                    }
                }
                return Json(Courselist, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = dbcont.tbl_Academy.ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);


                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;

                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }

                    if (personeldata != null && Firstvow != null && FinalVow != null)
                    {
                        Courselist.Add(new GetAllPrileView
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            Course = item.course
                        });
                    }
                }
                return Json(Courselist, JsonRequestBehavior.AllowGet);
            }

        }


        //Degree
        public JsonResult Degree(string province)
        {
            string currentUserid = Convert.ToString(Session["loginuserid"]);
            string currentuser = Convert.ToString(Session["username"]);

            var DegreeData = new List<GetAllPrileView>();

            var tempvow = GetConfingSetting("DyKey1");
            var finalvow = GetConfingSetting("DyKey2");
            var personeldetails = dbcont.tbl_PersonalDetails.ToList();
            var primarydetails = dbcont.tbl_Primarydetails.ToList();
            var formationdetails = dbcont.Tbl_formationsDetails.ToList();

            if (Session["username"].ToString() == "admin")
            {
                var data = dbcont.tbl_Academy.ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == province).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);


                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }

                    if (personeldata != null && Firstvow != null && FinalVow != null)
                    {
                        DegreeData.Add(new GetAllPrileView
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            Course = item.degree
                        });
                    }
                }

                return Json(DegreeData, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var data = dbcont.tbl_Academy.ToList();

                if (province != "0")
                {
                    data = data.Where(x => x.ProvinceName == currentuser).ToList();
                }
                else
                {
                    data = data.ToList();
                }

                foreach (var item in data)
                {
                    var personeldata = personeldetails.FirstOrDefault(x => x.MemberID == item.MemberId);

                    Tbl_formationsDetails Firstvow = null;
                    Tbl_formationsDetails FinalVow = null;
                    foreach (var obj in formationdetails)
                    {
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == tempvow && obj.Status == "0" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            Firstvow = obj;
                        }
                        if (obj.MemberId == item.MemberId && obj.StageOfFormation == finalvow && obj.Status == "1" && obj.Diedcheck == null && obj.Sapcheck == null && obj.Archivecheck == null)
                        {
                            FinalVow = obj;
                        }
                        if (Firstvow != null && FinalVow != null)
                            break;

                    }

                    if (personeldata != null && Firstvow != null && FinalVow != null)
                    {
                        DegreeData.Add(new GetAllPrileView
                        {
                            Name = personeldata.Name,
                            Sirname = personeldata.SirName,
                            Course = item.degree
                        });
                    }
                }

                return Json(DegreeData, JsonRequestBehavior.AllowGet);
            }
        }


        [HttpPost]
        public ActionResult AddPrimaryDetails(tbl_Primarydetails tbl_Primarydetails, string Name, string MotherTongue, string SirName, long? PersonalDetailsId, string FileNo, HttpPostedFileBase UploadPhoto, HttpPostedFileBase File1, HttpPostedFileBase File2, HttpPostedFileBase File3, HttpPostedFileBase DrivingLicense, string[] LangSpocken, string noofbrother, string noofsisters)
        {
            tbl_PersonalDetails tbl_PersonalDetails = new tbl_PersonalDetails();
            if (tbl_Primarydetails.MemberId == "AutoGen")
            {
                var provinceInfo = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == tbl_Primarydetails.ProvinceName);
                tbl_PersonalDetails.MemberUnicId = Convert.ToString(Guid.NewGuid());
                var myId = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == tbl_Primarydetails.ProvinceName).Any() ? dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.ProvinceName == tbl_Primarydetails.ProvinceName).MemberID : "01";
                if (myId != "01")
                {
                    myId = myId.Split('/')[1];
                    long z = Convert.ToInt64(myId) + 1;
                    myId = (z < 10) ? provinceInfo.Place + "/0" + z.ToString() : provinceInfo.Place + "/" + z.ToString();
                }
                else
                {
                    myId = provinceInfo.Place + "/" + myId.ToString();
                }
                tbl_PersonalDetails.MemberID = myId;
                tbl_PersonalDetails.ProvinceCode = provinceInfo.Place;
                tbl_PersonalDetails.ProvinceName = Convert.ToString(provinceInfo.Id);
                tbl_PersonalDetails.CreatedBy = Convert.ToString(Session["loginuserid"]);
                tbl_PersonalDetails.Name = Name;
                tbl_PersonalDetails.SirName = SirName;
                tbl_PersonalDetails.MotherTongue = MotherTongue;
                tbl_PersonalDetails.NoOfBrother = noofbrother;
                tbl_PersonalDetails.NoOfSister = noofsisters;
                tbl_PersonalDetails.FileNo = FileNo;
                dbcont.tbl_PersonalDetails.Add(tbl_PersonalDetails);
                dbcont.SaveChanges();
                tbl_Primarydetails.MemberId = myId;

            }
            else
            {
                tbl_PersonalDetails existingobj = null;
                if (PersonalDetailsId != null)
                {
                    existingobj = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId == (PersonalDetailsId));
                }

                if (existingobj != null)
                {
                    var provinceInfo = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == tbl_Primarydetails.ProvinceName);
                    string Id = Regex.Match(existingobj.MemberID, @"\d+").Value;
                    tbl_PersonalDetails.CreatedBy = existingobj.CreatedBy;
                    tbl_PersonalDetails.MemberUnicId = existingobj.MemberUnicId;
                    tbl_PersonalDetails.CurrentStatus = existingobj.CurrentStatus;
                    tbl_PersonalDetails.ProvinceCode = provinceInfo.Place;
                    tbl_PersonalDetails.ProvinceName = Convert.ToString(provinceInfo.Id);
                    tbl_PersonalDetails.MemberID = existingobj.MemberID;
                    tbl_PersonalDetails.Name = Name;
                    tbl_PersonalDetails.SirName = SirName;
                    tbl_PersonalDetails.MotherTongue = MotherTongue;
                    tbl_PersonalDetails.NoOfBrother = noofbrother;
                    tbl_PersonalDetails.NoOfSister = noofsisters;
                    tbl_PersonalDetails.FileNo = FileNo;
                    tbl_PersonalDetails.PersonalDetailsId = Convert.ToInt64(PersonalDetailsId);
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_PersonalDetails);
                    dbcont.SaveChanges();
                    tbl_Primarydetails.MemberId = tbl_PersonalDetails.MemberID;
                }
                var dataUpdate = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == tbl_PersonalDetails.MemberID);
                if (dataUpdate != null)
                {
                    dataUpdate.Knowname = tbl_PersonalDetails.Name;
                    dataUpdate.SurName = tbl_PersonalDetails.SirName;

                    dbcont.SaveChanges();
                }

                var dataUpdateOfficial = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateOfficial != null)
                {
                    foreach (var item in dataUpdateOfficial)
                    {
                        item.NameAndNo1 = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }

                var dataUpdatefamily = dbcont.FamilyDetails.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatefamily != null)
                {
                    foreach (var item in dataUpdatefamily)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdatesacrament = dbcont.Sacraments.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatesacrament != null)
                {
                    foreach (var item in dataUpdatesacrament)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateAcademy = dbcont.tbl_Academy.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateAcademy != null)
                {
                    foreach (var item in dataUpdateAcademy)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateappoinment = dbcont.Appointments.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateappoinment != null)
                {
                    foreach (var item in dataUpdateappoinment)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateSaprate = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateSaprate != null)
                {
                    foreach (var item in dataUpdateSaprate)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdatepassed = dbcont.tbl_Passed.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatepassed != null)
                {
                    foreach (var item in dataUpdatepassed)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateArchive = dbcont.tbl_Archive.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateArchive != null)
                {
                    foreach (var item in dataUpdateArchive)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateInsurance = dbcont.tbl_Insurance.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateInsurance != null)
                {
                    foreach (var item in dataUpdateInsurance)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateFor = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateFor != null)
                {
                    foreach (var item in dataUpdateFor)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateRetire = dbcont.tbl_Retirement.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateRetire != null)
                {
                    foreach (var item in dataUpdateRetire)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateRenewal = dbcont.Tbl_RenewalVows.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateRenewal != null)
                {
                    foreach (var item in dataUpdateRenewal)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdatetransfer = dbcont.Tbl_Transfer.Where(x => x.NewMemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatetransfer != null)
                {
                    foreach (var item in dataUpdatetransfer)
                    {
                        item.BrotherName = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
            }
            var memeberDetails = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == tbl_Primarydetails.MemberId);
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Primarydetails.MemberId;
            if (memeberDetails == null)
            {
                try
                {
                    var fileName = string.Empty;
                    if (tbl_Primarydetails != null)
                    {
                        if (UploadPhoto != null)
                        {
                            if (UploadPhoto.ContentLength > 0)
                            {
                                fileName = Path.GetFileName(UploadPhoto.FileName);
                                var path = Path.Combine(Server.MapPath("~/Image/Primarydetails"), fileName);
                                UploadPhoto.SaveAs(path);
                                tbl_Primarydetails.UploadPhoto = fileName;   //pan document file1 for the name
                            }
                        }

                        // var memeberdata1 = dbcont.DataListItems.FirstOrDefault(x => x.Name == tbl_Primarydetails.Continent);

                        tbl_Primarydetails.LangSpocken = LangSpocken == null ? "" : String.Join(",", LangSpocken);
                        tbl_Primarydetails.mothertounge = MotherTongue;
                        tbl_Primarydetails.noofsisters = noofsisters;
                        tbl_Primarydetails.noofbrother = noofbrother;
                        tbl_Primarydetails.CreatedBy = Convert.ToString(Session["loginuserid"]);
                        dbcont.tbl_Primarydetails.Add(tbl_Primarydetails);
                        dbcont.SaveChanges();

                        //
                        var objPersonalDet = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == tbl_Primarydetails.MemberId);
                        if (objPersonalDet != null && fileName != string.Empty)
                        {
                            objPersonalDet.Spare1 = fileName;
                            dbcont.SaveChanges();
                        }
                        //
                        //setcookies("200");
                        return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                    }
                    else
                    {

                        setcookies("204");
                        return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                    }
                }


                catch (Exception)
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                    throw;
                }

            }
            else
            {
                memeberDetails.LangSpocken = LangSpocken == null ? "" : String.Join(",", LangSpocken);
                memeberDetails.mothertounge = MotherTongue;
                memeberDetails.noofsisters = noofsisters;
                memeberDetails.noofbrother = noofbrother;
                memeberDetails.Address = tbl_Primarydetails.Address;
                memeberDetails.Baptismialname = tbl_Primarydetails.Baptismialname;
                memeberDetails.Bloodgroup = tbl_Primarydetails.Bloodgroup;
                memeberDetails.city = tbl_Primarydetails.city;
                memeberDetails.Congregation = tbl_Primarydetails.Congregation;
                memeberDetails.Continent = tbl_Primarydetails.Continent;
                memeberDetails.country = tbl_Primarydetails.country;
                memeberDetails.Diocese = tbl_Primarydetails.Diocese;
                memeberDetails.district = tbl_Primarydetails.district;
                memeberDetails.DOB = tbl_Primarydetails.DOB;
                memeberDetails.DOBInTheCertificate = tbl_Primarydetails.DOBInTheCertificate;
                memeberDetails.emailid = tbl_Primarydetails.emailid;
                memeberDetails.mobilenumber = tbl_Primarydetails.mobilenumber;
                memeberDetails.NameInTheCertificate = tbl_Primarydetails.NameInTheCertificate;
                memeberDetails.Nationality = tbl_Primarydetails.Nationality;
                memeberDetails.Ordination = tbl_Primarydetails.Ordination;
                memeberDetails.pin = tbl_Primarydetails.pin;
                memeberDetails.placeofbirth = tbl_Primarydetails.placeofbirth;
                memeberDetails.ProvinceName = tbl_Primarydetails.ProvinceName;
                memeberDetails.state = tbl_Primarydetails.state;
                memeberDetails.SurName = tbl_Primarydetails.SurName;
                memeberDetails.homediocese = tbl_Primarydetails.homediocese;
                memeberDetails.homeparish = tbl_Primarydetails.homeparish;
                memeberDetails.Telephone = tbl_Primarydetails.Telephone;
                memeberDetails.placeinfamily = tbl_Primarydetails.placeinfamily;
                tbl_Primarydetails.CreatedBy = Convert.ToString(Session["loginuserid"]);
                var primar = new tbl_Primarydetails();
                primar.mothertounge = MotherTongue;
                primar.noofsisters = noofsisters;
                primar.noofbrother = noofbrother;
                string fileName = "";

                if (UploadPhoto != null)
                {
                    if (UploadPhoto.ContentLength > 0)
                    {
                        fileName = Path.GetFileName(UploadPhoto.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Primarydetails"), fileName);
                        UploadPhoto.SaveAs(path);
                        tbl_Primarydetails.UploadPhoto = fileName;   //pan document file1 for the name
                    }
                }
                else
                {
                    //var filename1 = memeberDetails.UploadPhoto;

                    tbl_Primarydetails.UploadPhoto = memeberDetails.UploadPhoto;
                    //memeberDetails.UploadPhoto = tbl_Primarydetails.UploadPhoto;
                }
                //dbcont.tbl_Primarydetails.Attach(memeberDetails);
                tbl_Primarydetails.Primaryid = memeberDetails.Primaryid;
                tbl_Primarydetails.LangSpocken = memeberDetails.LangSpocken;
                dbcont.Entry(memeberDetails).CurrentValues.SetValues(tbl_Primarydetails);

                if (tbl_Primarydetails.MemberId != null && tbl_Primarydetails.MemberId != "")
                {
                    var objPersonalDet = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == tbl_Primarydetails.MemberId);
                    if (objPersonalDet != null && fileName != string.Empty)
                    {
                        objPersonalDet.Spare1 = fileName;
                    }
                }
                dbcont.SaveChanges();

                setcookies("200");
                //  return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }

            ObjectCache objectcache = MemoryCache.Default;
            objectcache.Remove("PersonelCache");
            var data = new HomeController().GetPersonelDetaisl();
            return RedirectToAction("MemberInfoById", new { memberId = tbl_Primarydetails.MemberId, name = "", sirname = "" });
        }
        public JsonResult GetPrimaryDetailById(int id)
        {
            try
            {
                var data = dbcont.tbl_Primarydetails.FirstOrDefault(e => e.Primaryid == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult UpdatePrimaryDetails(tbl_Primarydetails tbl_Primarydetails, string Name, string SirName, long? PersonalDetailsId, string FileNo, HttpPostedFileBase UploadPhoto, HttpPostedFileBase File1, HttpPostedFileBase File2, HttpPostedFileBase File3, HttpPostedFileBase DrivingLicense, string[] LangSpocken)
        {
            #region update personal detail
            tbl_PersonalDetails tbl_PersonalDetails = new tbl_PersonalDetails();
            if (tbl_Primarydetails.MemberId == "AutoGen")
            {
                var provinceInfo = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == tbl_Primarydetails.ProvinceName);
                tbl_PersonalDetails.MemberUnicId = Convert.ToString(Guid.NewGuid());
                var myId = dbcont.tbl_PersonalDetails.Where(x => x.ProvinceName == tbl_Primarydetails.ProvinceName).Any() ? dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.ProvinceName == tbl_Primarydetails.ProvinceName).MemberID : "01";
                if (myId != "01")
                {
                    myId = myId.Split('/')[1];
                    long z = Convert.ToInt64(myId) + 1;
                    myId = (z < 10) ? provinceInfo.Place + "/0" + z.ToString() : provinceInfo.Place + "/" + z.ToString();
                }
                else
                {
                    myId = provinceInfo.Place + "/" + myId.ToString();
                }
                tbl_PersonalDetails.MemberID = myId;
                tbl_PersonalDetails.ProvinceCode = provinceInfo.Place;
                tbl_PersonalDetails.ProvinceName = Convert.ToString(provinceInfo.Id);
                tbl_PersonalDetails.CreatedBy = Convert.ToString(Session["loginuserid"]);
                tbl_PersonalDetails.Name = Name;
                tbl_PersonalDetails.SirName = SirName;
                tbl_PersonalDetails.FileNo = FileNo;
                dbcont.tbl_PersonalDetails.Add(tbl_PersonalDetails);
                dbcont.SaveChanges();
                tbl_Primarydetails.MemberId = myId;

            }
            else
            {
                tbl_PersonalDetails existingobj = null;
                if (PersonalDetailsId != null)
                {
                    existingobj = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId == (PersonalDetailsId));
                }

                if (existingobj != null)
                {
                    var provinceInfo = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == tbl_Primarydetails.ProvinceName);
                    string Id = Regex.Match(existingobj.MemberID, @"\d+").Value;
                    tbl_PersonalDetails.CreatedBy = existingobj.CreatedBy;
                    tbl_PersonalDetails.MemberUnicId = existingobj.MemberUnicId;
                    tbl_PersonalDetails.CurrentStatus = existingobj.CurrentStatus;
                    tbl_PersonalDetails.ProvinceCode = provinceInfo.Place;
                    tbl_PersonalDetails.ProvinceName = Convert.ToString(provinceInfo.Id);
                    tbl_PersonalDetails.MemberID = existingobj.MemberID;
                    tbl_PersonalDetails.Name = Name;
                    tbl_PersonalDetails.SirName = SirName;
                    tbl_PersonalDetails.FileNo = FileNo;
                    tbl_PersonalDetails.PersonalDetailsId = Convert.ToInt64(PersonalDetailsId);
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_PersonalDetails);
                    dbcont.SaveChanges();
                    tbl_Primarydetails.MemberId = tbl_PersonalDetails.MemberID;
                }
                var dataUpdate = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == tbl_PersonalDetails.MemberID);
                if (dataUpdate != null)
                {
                    dataUpdate.Knowname = tbl_PersonalDetails.Name;
                    dataUpdate.SurName = tbl_PersonalDetails.SirName;
                    dbcont.SaveChanges();
                }

                var dataUpdateOfficial = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateOfficial != null)
                {
                    foreach (var item in dataUpdateOfficial)
                    {
                        item.NameAndNo1 = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }

                var dataUpdatefamily = dbcont.FamilyDetails.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatefamily != null)
                {
                    foreach (var item in dataUpdatefamily)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdatesacrament = dbcont.Sacraments.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatesacrament != null)
                {
                    foreach (var item in dataUpdatesacrament)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateAcademy = dbcont.tbl_Academy.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateAcademy != null)
                {
                    foreach (var item in dataUpdateAcademy)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateappoinment = dbcont.Appointments.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateappoinment != null)
                {
                    foreach (var item in dataUpdateappoinment)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateSaprate = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateSaprate != null)
                {
                    foreach (var item in dataUpdateSaprate)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdatepassed = dbcont.tbl_Passed.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatepassed != null)
                {
                    foreach (var item in dataUpdatepassed)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateArchive = dbcont.tbl_Archive.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateArchive != null)
                {
                    foreach (var item in dataUpdateArchive)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateInsurance = dbcont.tbl_Insurance.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateInsurance != null)
                {
                    foreach (var item in dataUpdateInsurance)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateFor = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateFor != null)
                {
                    foreach (var item in dataUpdateFor)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateRetire = dbcont.tbl_Retirement.Where(x => x.MemberID == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateRetire != null)
                {
                    foreach (var item in dataUpdateRetire)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateRenewal = dbcont.Tbl_RenewalVows.Where(x => x.MemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdateRenewal != null)
                {
                    foreach (var item in dataUpdateRenewal)
                    {
                        item.Name = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdatetransfer = dbcont.Tbl_Transfer.Where(x => x.NewMemberId == tbl_PersonalDetails.MemberID).ToList();
                if (dataUpdatetransfer != null)
                {
                    foreach (var item in dataUpdatetransfer)
                    {
                        item.BrotherName = tbl_PersonalDetails.Name;
                        dbcont.SaveChanges();
                    }
                }
            }
            #endregion
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Primarydetails.MemberId;
            try
            {
                tbl_Primarydetails data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.Primaryid == tbl_Primarydetails.Primaryid);
                var fileName = string.Empty;
                if (UploadPhoto != null)
                {
                    if (UploadPhoto.ContentLength > 0)
                    {
                        fileName = Path.GetFileName(UploadPhoto.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Primarydetails"), fileName);
                        UploadPhoto.SaveAs(path);
                        tbl_Primarydetails.UploadPhoto = fileName;
                    }
                }

                if (data != null)
                {
                    tbl_Primarydetails.CreatedBy = data.CreatedBy;
                    tbl_Primarydetails.LangSpocken = LangSpocken == null ? "" : String.Join(",", LangSpocken);
                    dbcont.Entry(data).CurrentValues.SetValues(tbl_Primarydetails);
                    dbcont.SaveChanges();

                    //
                    var objPersonalDet = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == tbl_Primarydetails.MemberId);
                    if (objPersonalDet != null && fileName != string.Empty)
                    {
                        objPersonalDet.Spare1 = fileName;
                        dbcont.SaveChanges();
                    }
                    //
                    setcookies("201");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }

            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult btnPrimaryDelete(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_Primarydetails.FirstOrDefault(e => e.Primaryid == id);
                if (data != null)
                {
                    dbcont.tbl_Primarydetails.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        //official edit
        public ActionResult UpdateFamilyEdit12(tbl_OfficialDocument tbl_OfficialDocument, HttpPostedFileBase UploadPhoto)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_OfficialDocument.MemberId;
            try
            {
                tbl_OfficialDocument data = dbcont.tbl_OfficialDocument.FirstOrDefault(x => x.Id == tbl_OfficialDocument.Id);
                if (UploadPhoto != null)
                {
                    if (UploadPhoto.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(UploadPhoto.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/OfficialDocument"), fileName);
                        UploadPhoto.SaveAs(path);
                        //tbl_OfficialDocument.UploadPhoto = fileName;
                    }
                }

                if (data != null)
                {
                    tbl_OfficialDocument.CreatedBy = data.CreatedBy;

                    dbcont.Entry(data).CurrentValues.SetValues(tbl_OfficialDocument);
                    dbcont.SaveChanges();
                    setcookies("201");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }

            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public ActionResult OfficialDelete12(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_OfficialDocument.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.tbl_OfficialDocument.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }




        [HttpPost]
        public ActionResult AddFamily(FamilyDetails family, string[] LangSpocken)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + family.MemberId;
            try
            {
                if (family.EmergencyContact == null)
                {
                    family.EmergencyContact = "No";
                }
                family.LangSpocken = LangSpocken == null ? "" : String.Join(",", LangSpocken);
                family.CreatedBy = Convert.ToString(Session["loginuserid"]);
                dbcont.FamilyDetails.Add(family);
                dbcont.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult FamilyUpdate(FamilyDetails family, string[] LangSpocken)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + family.MemberId;
            try
            {
                FamilyDetails data = dbcont.FamilyDetails.FirstOrDefault(x => x.Id == family.Id);
                if (data != null)
                {
                    family.LangSpocken = LangSpocken == null ? "" : String.Join(",", LangSpocken);
                    dbcont.Entry(data).CurrentValues.SetValues(family);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult FamilyDelete(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var genralobj = dbcont.FamilyDetails.FirstOrDefault(e => e.Id == id);
                if (genralobj != null)
                {
                    dbcont.FamilyDetails.Remove(genralobj);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetFamilyById(int Id)
        {
            try
            {
                var gid = dbcont.FamilyDetails.FirstOrDefault(e => e.Id == Id);
                if (gid != null)
                {
                    return Json(gid, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json(null, JsonRequestBehavior.AllowGet);
                }


            }
            catch (Exception)
            {

                throw;
            }
        }
        public JsonResult Update(tbl_PersonalDetails persnldtls)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var existingobj = dbcont.tbl_PersonalDetails.FirstOrDefault(e => (e.PersonalDetailsId == persnldtls.PersonalDetailsId && e.IsDeleted == false));
                dbcont.Entry(existingobj).CurrentValues.SetValues(persnldtls);
                dbcont.SaveChanges();
                setcookies("201");
                return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult DeletePertionalData(int Id)
        {
            string url = this.Request.UrlReferrer.AbsolutePath;
            try
            {
                var genralobj = dbcont.tbl_PersonalDetails.FirstOrDefault(e => e.PersonalDetailsId == Id);
                if (genralobj != null)
                {
                    genralobj.IsDeleted = true;
                    dbcont.Entry(genralobj).CurrentValues.SetValues(genralobj);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public async Task<ActionResult> AddClaustration(Claustration model)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + model.MemberId;
            try
            {

                model.CreatedBy = Convert.ToString(Session["loginuserid"]);
                model.Id = Guid.NewGuid().ToString();
                dbcont.Claustrations.Add(model);
                await dbcont.SaveChangesAsync();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public JsonResult GetClustrations(string Id)
        {
            var data = dbcont.Claustrations.FirstOrDefault(x => x.Id == Id);
            if (data != null)
            {
                return Json(data, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }

        public ActionResult UpdateClaustrations(Claustration claustration)
        {
            try
            {
                var data = dbcont.Claustrations.FirstOrDefault(x => x.Id == claustration.Id);
                var url = this.Request.UrlReferrer.AbsoluteUri;
                if (data != null)
                {
                    dbcont.Entry(data).CurrentValues.SetValues(claustration);
                    dbcont.SaveChanges();
                    setcookies("200");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public ActionResult DeleteClustrations(string Id)
        {
            var url = Request.UrlReferrer.AbsoluteUri;
            var data = dbcont.Claustrations.FirstOrDefault(x => x.Id == Id);
            if (data != null)
            {
                dbcont.Claustrations.Remove(data);
                dbcont.SaveChanges();
                setcookies("202");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            else
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
        }

        //For the Report data
        public JsonResult GetAllFormationById(string id)
        {
            string lang = Convert.ToString(Session["CurrentLang"]);
            var personalDetails = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id && x.StageOfFormation != "1" && x.StageOfFormation != "5" && x.StageOfFormation != "4" && x.StageOfFormation != "3" && x.StageOfFormation != "6").ToList();
            var allformationname = dbcont.DataListItems.Where(x => x.DataListName == "Stage Of Formation").ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            foreach (var item in personalDetails.OrderByDescending(x => Convert.ToDateTime(x.FromDate)))
            {
                string forms = string.Empty;
                var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                if (formationnames != null)
                {
                    forms = lang == "FN" ? formationnames.Name_French : formationnames.Name;
                }
                allFormationD.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    Community = item.Community,
                    Formators = item.Formators,
                    StageOfFormation = forms,
                    Description = item.Description,
                    FileName = item.FileName
                });
            }

            if (personalDetails.Count > 0)
            {

                return Json(allFormationD, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }

            //var allFOrmation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
            //return Json(allFOrmation, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllVowsById(string name)
        {
            var AllMemberdata = dbcont.Tbl_RenewalVows.ToList();
            string[] Name = name.Split();
            if (!string.IsNullOrEmpty(name))
            {
                AllMemberdata = AllMemberdata.Where(x => x.Name.Contains(Name[0])).ToList();
            }
            if (AllMemberdata.Count > 0)
            {
                return Json(AllMemberdata, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllProfessionById(string id)
        {
            string lang = Convert.ToString(Session["CurrentLang"]);
            var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id && x.IsDeleted == false).ToList();
            var allformationname = dbcont.DataListItems.ToList();
            var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
            List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
            var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();

            var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
            var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "1" || x.StageOfFormation == "5" || x.StageOfFormation == "4" || x.StageOfFormation == "6" || x.StageOfFormation == "3").ToList();
            allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
            foreach (var item in allFormationData)
            {
                string forms = string.Empty;
                var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                if (formationnames != null)
                {
                    forms = lang == "FN" ? formationnames.Name_French : formationnames.Name;
                }
                allFormationD.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    StageOfFormation = forms,
                    Title = item.Title,
                    Community = item.Community,
                    Description = item.Description,
                    Id = item.Id,
                    FileName = item.FileName,
                    VowsDate = item.VowsDate
                });
                //  allFormationD.Add(item);
            }
            foreach (var item in allProfesionalFormationData)
            {
                string forms = string.Empty;
                var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                if (formationnames != null)
                {
                    forms = lang == "FN" ? formationnames.Name_French : formationnames.Name;
                }
                allFormationDProfession.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    StageOfFormation = forms,
                    Title = item.Title,
                    Community = item.Community,
                    Description = item.Description,
                    Id = item.Id,
                    FileName = item.FileName,
                    VowsDate = item.VowsDate
                });
                //  allFormationD.Add(item);
            }

            // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
            allVows = allFormationDProfession.ToList();
            if (allVows.Count > 0)
            {
                return Json(allVows, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
            //var allFOrmation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
            //return Json(allFOrmation, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllClustrationById(string id)
        {
            var allCluster = dbcont.Claustrations.Where(x => x.MemberId == id).ToList();
            if (allCluster.Count > 0)
            {
                return Json(allCluster, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllRetirementById(string id)
        {
            var allRetirement = dbcont.tbl_Retirement.Where(x => x.MemberID == id).ToList();
            if (allRetirement.Count > 0)
            {
                return Json(allRetirement.OrderByDescending(x => Convert.ToDateTime(x.CreatedDate)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllAcademyById(string id)
        {
            try
            {
                var allAcademy = dbcont.tbl_Academy.Where(x => x.MemberId == id).ToList();
                List<tbl_Academy> tbl_Academy = new List<tbl_Academy>();
                foreach (var item in allAcademy)
                {
                    DateTime date;
                    if (item.fromdate.Length > 4)
                    {
                        date = Convert.ToDateTime(item.fromdate);
                        tbl_Academy.Add(item);
                    }
                }
                if (allAcademy.Count > 0)
                {
                    return Json(tbl_Academy.OrderByDescending(x => Convert.ToDateTime(x.fromdate)), JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }


        }
        public JsonResult GetAllAppinmentById(string id)
        {
            var Appointments = dbcont.Appointments.Where(x => x.MemberId == id).ToList();
            var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
            var allAppointmentsFinal = Appointments.ToList();

            allAppointmentsFinal.RemoveAll(x => x.MemberId != "");
            foreach (var item in Appointments)
            {
                item.Place = item.Place == "Add" || item.Place == null || item.Place == "0" ? "" : allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault().ToString();

                item.CommunityType = item.CommunityType == "--Select --" ? "" : item.CommunityType;

                allAppointmentsFinal.Add(item);
            }
            var obj = new Appointments();
            var PersonalDetailsIds = dbcont.tbl_PersonalDetails.Where(x => x.MemberID == id).Select(x => x.PersonalDetailsId);
            var objMemberData = dbcont.GeneralMember.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            //var objMemberData = dbcont.GeneralMember.Where(x => x.PersonalDetailsId != null);
            foreach (var item in objMemberData)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";

                allAppointmentsFinal.Add(obj);
            }

            var objGeneralCouncils = dbcont.Tbl_ProGeneralCouncil.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in objGeneralCouncils)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }

            var obj3 = dbcont.GeneralTreasurer.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in obj3)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }

            var obj4 = dbcont.GeneralSecretary.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in obj4)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }

            var obj5 = dbcont.Tbl_ProGeneralMember.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in obj5)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }

            var obj6 = dbcont.Tbl_ProGeneralCouncil.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in obj6)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }

            var obj7 = dbcont.Tbl_ProGeneralTreaserer.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in obj7)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }

            var obj8 = dbcont.Tbl_ProGeneralSecretary.Where(x => PersonalDetailsIds.Contains(x.PersonalDetailsId ?? 0));
            foreach (var item in obj8)
            {
                obj = new Appointments();
                obj.FromDate = item.FromDate;
                obj.ToDate = item.ToDate;
                obj.DesignationType = item.Designation;
                obj.CommunityType = "";
                obj.Place = "";
                obj.Description = item.Responsibility;
                obj.doc = "";
                allAppointmentsFinal.Add(obj);
            }
            ////////////////////
            if (Appointments.Count > 0 || allAppointmentsFinal.Count > 0)
            {
                return Json(allAppointmentsFinal.OrderByDescending(x => ((x.FromDate))), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
            // return Json(Appointments, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllInstitutionAppinmentById(string id)
        {
            var InstituteAppointment = dbcont.InstutionAppointments.Where(x => x.MemberId == id).ToList();
            if (InstituteAppointment.Count > 0)
            {
                return Json(InstituteAppointment.OrderByDescending(x => Convert.ToDateTime(x.FromDate)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetHomeVisit(string id)
        {
            var tbl_HomeVisit = dbcont.tbl_HomeVisit.Where(x => x.Name == id).ToList();

            var allProvince = dbcont.tbl_Province.ToList();
            List<tbl_HomeVisit> allSubData1 = new List<tbl_HomeVisit>();
            var allmembers = dbcont.tbl_PersonalDetails.ToList();
            foreach (var item in tbl_HomeVisit)
            {
                var provDetails = allProvince.FirstOrDefault(x => x.Id.ToString() == item.ProvinceName);
                var persionalDetail = allmembers.FirstOrDefault(x => x.PersonalDetailsId.ToString() == item.Name);
                allSubData1.Add(new tbl_HomeVisit
                {
                    Id = item.Id,
                    ProvinceName = provDetails == null ? "Not Exist" : provDetails.ProvinceName,
                    Name = persionalDetail == null ? "Not Exists" : persionalDetail.Name,
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    Purpose = item.Purpose,
                    Place = item.Place,
                    Description = item.Description
                });

            }
            if (tbl_HomeVisit.Count > 0)
            {

                return Json(allSubData1.OrderByDescending(x => Convert.ToDateTime(x.FromDate)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }

        }
        public JsonResult GetExclaustration(string id)
        {
            var allComplains = dbcont.Claustrations.Where(x => x.MemberId == id).ToList();
            if (allComplains.Count > 0)
            {
                return Json(allComplains, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetAllTravelById(string id)
        {
            var tbl_TravelRecord = dbcont.tbl_TravelRecord.Where(x => x.MemberID == id).ToList();
            return Json(tbl_TravelRecord, JsonRequestBehavior.AllowGet);
        }
        public JsonResult GetAllHealthById(string id)
        {
            var healths = dbcont.tbl_Health.Where(x => x.MemberID == id).ToList();
            if (healths.Count > 0)
            {
                return Json(healths.OrderByDescending(x => Convert.ToDateTime(x.FromDate)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllPassedById(string id)
        {
            var passed = dbcont.tbl_Passed.Where(x => x.MemberID == id).ToList();
            if (passed.Count > 0)
            {
                return Json(passed.OrderByDescending(x => Convert.ToDateTime(x.Date)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllSaprationById(string id)
        {
            var sapration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == id).ToList();
            if (sapration.Count > 0)
            {
                return Json(sapration.OrderByDescending(x => Convert.ToDateTime(x.SeperationDate)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllInsuranceById(string id)
        {
            var insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == id).ToList();
            if (insurance.Count > 0)
            {
                return Json(insurance.OrderByDescending(x => Convert.ToDateTime(x.Date)), JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json("", JsonRequestBehavior.AllowGet);
            }
        }
        public JsonResult GetAllSacramentdataById(string id)
        {
            var sapration = dbcont.Sacraments.Where(x => x.MemberId == id).ToList();
            return Json(sapration.OrderByDescending(x => Convert.ToDateTime(x.Date)), JsonRequestBehavior.AllowGet);
        }
        //Health
        #region Health
        [HttpPost]
        public ActionResult UpdateHealthDetail(tbl_Health tbl_Health, HttpPostedFileBase Spare1)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Health.MemberID;
            try
            {
                var existingobj = dbcont.tbl_Health.FirstOrDefault(e => e.HealthId == tbl_Health.HealthId);
                if (Spare1 != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(Spare1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Health"), fileName);
                        Spare1.SaveAs(path);
                        tbl_Health.Spare1 = fileName;   //pan document file1 for the name
                    }
                }
                else
                {
                    tbl_Health.Spare1 = existingobj.Spare1;
                }
                if (existingobj != null)
                {
                    tbl_Health.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_Health);
                    dbcont.SaveChanges();
                }

                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetHealthById(int id)
        {
            try
            {
                var genHealth = dbcont.tbl_Health.FirstOrDefault(e => e.HealthId == id);
                if (genHealth != null)
                {
                    return Json(genHealth, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult CreateHealth(tbl_Health tbl_Health, HttpPostedFileBase Spare1)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Health.MemberID;
            try
            {
                if (Spare1 != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(Spare1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Health"), fileName);
                        Spare1.SaveAs(path);
                        tbl_Health.Spare1 = fileName;   //pan document file1 for the name
                    }
                }
                tbl_Health.CreatedBy = Convert.ToString(Session["loginuserid"]);
                dbcont.tbl_Health.Add(tbl_Health);
                dbcont.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult HealthDelete(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_Health.FirstOrDefault(e => e.HealthId == id);
                if (data != null)
                {
                    dbcont.tbl_Health.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        #endregion
        #region Passed
        //tbl_Passed
        [HttpPost]
        public ActionResult CreatePassed(tbl_Passed tbl_Passed, HttpPostedFileBase obituary, HttpPostedFileBase DeathCertificate, HttpPostedFileBase Spare1)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Passed.MemberID;
            try
            {
                if (obituary != null)
                {
                    if (obituary.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(obituary.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Death"), fileName);
                        obituary.SaveAs(path);
                        tbl_Passed.obituary = fileName;   //pan document file1 for the name
                    }
                }
                if (DeathCertificate != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(DeathCertificate.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Death"), fileName);
                        DeathCertificate.SaveAs(path);
                        tbl_Passed.DeathCertificate = fileName;   //pan document file1 for the name
                    }
                }
                if (Spare1 != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(Spare1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Death"), fileName);
                        Spare1.SaveAs(path);
                        tbl_Passed.Spare1 = fileName;   //pan document file1 for the name
                    }
                }
                tbl_Passed.CreatedBy = Convert.ToString(Session["loginuserid"]);
                var Date = tbl_Passed.Date;
                if (Date != null)
                {
                    DateTime date = DateTime.ParseExact(Date, "dd/MM/yyyy", CultureInfo.CurrentCulture);
                    var year = date.Year.ToString();
                    tbl_Passed.Added_Year = year;
                }


                dbcont.tbl_Passed.Add(tbl_Passed);
                dbcont.SaveChanges();

                string[] names = tbl_Passed.Name.Trim().Split(' ');
                string name = names[0];
                //var PersonalCount = dbcont.tbl_PersonalDetails.Where(x=>x.MemberID == tbl_Passed.MemberID).ToList().Count();
                //var FormationCount = dbcont.Tbl_formationsDetails.Where(x=>x.MemberId == tbl_Passed.MemberID).ToList().Count();
                //var RetCount = dbcont.tbl_Retirement.Where(x=>x.MemberID == tbl_Passed.MemberID).ToList().Count();
                try
                {
                    var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.MemberID == tbl_Passed.MemberID);
                    if (dataUpdate != null)
                    {
                        dataUpdate.Diedcheck = tbl_Passed.Diedcheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }

                //var dataUpdateFor = dbcont.Tbl_formationsDetails.Where(x => x.Name.Contains(name)).ToList();
                //if (dataUpdateFor != null)
                //{
                //    foreach (var item in dataUpdateFor)
                //    {
                //        item.Diedcheck = tbl_Passed.Diedcheck;
                //        dbcont.SaveChanges();
                //    }
                //}
                try
                {
                    var dataUpdateFor = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId == tbl_Passed.MemberID);
                    if (dataUpdateFor != null)
                    {
                        dataUpdateFor.Diedcheck = tbl_Passed.Diedcheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }
                try
                {
                    var dataUpdateRetire = dbcont.tbl_Retirement.ToList().LastOrDefault(x => x.MemberID == tbl_Passed.MemberID);
                    if (dataUpdateRetire != null)
                    {
                        dataUpdateRetire.Diedcheck = tbl_Passed.Diedcheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }

                try
                {
                    var dataUpdateRenewal = dbcont.Tbl_RenewalVows.ToList().LastOrDefault(x => x.Name == name);//Previously it was contain
                    if (dataUpdateRenewal != null)
                    {
                        dataUpdateRenewal.DeathCheck = tbl_Passed.Diedcheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }

                ObjectCache objectcache = MemoryCache.Default;
                objectcache.Remove("PersonelCache");
                var data = new HomeController().GetPersonelDetaisl();

                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult UpdatePassedDetail(tbl_Passed tbl_Passed, HttpPostedFileBase Spare1, HttpPostedFileBase obituary, HttpPostedFileBase DeathCertificate)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Passed.MemberID;
            try
            {
                var existingobj = dbcont.tbl_Passed.FirstOrDefault(e => e.PassedId == tbl_Passed.PassedId);
                if (obituary != null)
                {
                    if (obituary.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(obituary.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Death"), fileName);
                        obituary.SaveAs(path);
                        tbl_Passed.obituary = fileName;   //pan document file1 for the name
                    }
                }
                else
                {
                    tbl_Passed.obituary = existingobj.obituary;
                }
                if (DeathCertificate != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(DeathCertificate.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Death"), fileName);
                        DeathCertificate.SaveAs(path);
                        tbl_Passed.DeathCertificate = fileName;   //pan document file1 for the name
                    }
                }
                else
                {
                    tbl_Passed.DeathCertificate = existingobj.DeathCertificate;
                }

                if (Spare1 != null)
                {
                    if (Spare1.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(Spare1.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Death"), fileName);
                        Spare1.SaveAs(path);
                        tbl_Passed.Spare1 = fileName;   //pan document file1 for the name
                    }
                }
                else
                {
                    tbl_Passed.Spare1 = existingobj.Spare1;
                }
                if (existingobj != null)
                {
                    tbl_Passed.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_Passed);
                    dbcont.SaveChanges();

                    string[] names = tbl_Passed.Name.Trim().Split(' ');
                    string name = names[0];
                    //var dataUpdate = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.Name.Contains(name));
                    //if (dataUpdate != null)
                    //{
                    //    dataUpdate.Diedcheck = tbl_Passed.Diedcheck;
                    //    dbcont.SaveChanges();
                    //}
                    try
                    {
                        var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.MemberID == tbl_Passed.MemberID);
                        if (dataUpdate != null)
                        {
                            dataUpdate.Diedcheck = tbl_Passed.Diedcheck;
                            dbcont.SaveChanges();
                        }
                    }
                    catch
                    {

                    }
                    //var dataUpdateFor = dbcont.Tbl_formationsDetails.FirstOrDefault(x => x.Name.Contains(name));
                    //if (dataUpdateFor != null)
                    //{
                    //    dataUpdateFor.Diedcheck = tbl_Passed.Diedcheck;
                    //    dbcont.SaveChanges();
                    //}
                    try
                    {
                        var dataUpdateFor = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId == tbl_Passed.MemberID);
                        if (dataUpdateFor != null)
                        {
                            dataUpdateFor.Diedcheck = tbl_Passed.Diedcheck;
                            dbcont.SaveChanges();
                        }
                    }
                    catch
                    {

                    }
                    try
                    {
                        var dataUpdateRetire = dbcont.tbl_Retirement.ToList().LastOrDefault(x => x.MemberID == tbl_Passed.MemberID);
                        if (dataUpdateRetire != null)
                        {
                            dataUpdateRetire.Diedcheck = tbl_Passed.Diedcheck;
                            dbcont.SaveChanges();
                        }
                    }
                    catch
                    {

                    }
                    try
                    {
                        var dataUpdateRenewal = dbcont.Tbl_RenewalVows.ToList().LastOrDefault(x => x.Name == name);//Previously it was contain
                        if (dataUpdateRenewal != null)
                        {
                            dataUpdateRenewal.DeathCheck = tbl_Passed.Diedcheck;
                            dbcont.SaveChanges();
                        }
                    }
                    catch
                    {

                    }

                    ObjectCache objectcache = MemoryCache.Default;
                    objectcache.Remove("PersonelCache");
                    var data1 = new HomeController().GetPersonelDetaisl();

                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }

        }

        public JsonResult GetPassedById(int id)
        {
            try
            {
                var genDeath = dbcont.tbl_Passed.FirstOrDefault(e => e.PassedId == id);
                if (genDeath != null)
                {
                    return Json(genDeath, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult PassedDeleteGetPassedById(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_Passed.FirstOrDefault(e => e.PassedId == id);
                if (data != null)
                {
                    dbcont.tbl_Passed.Remove(data);
                    dbcont.SaveChanges();

                    ObjectCache objectcache = MemoryCache.Default;
                    objectcache.Remove("PersonelCache");
                    var data1 = new HomeController().GetPersonelDetaisl();

                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        #endregion
        #region Insurance
        [HttpPost]
        public ActionResult Addinsurance(tbl_Insurance tbl_Insurance, HttpPostedFileBase File)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Insurance.MemberId;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Insurance"), fileName);
                        File.SaveAs(path);
                        tbl_Insurance.File = fileName;   //pan document file1 for the name
                    }
                }

                tbl_Insurance.CreatedBy = Convert.ToString(Session["loginuserid"]);
                dbcont.tbl_Insurance.Add(tbl_Insurance);
                dbcont.SaveChanges();

                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult Updateinsurance(tbl_Insurance tbl_Insurance, HttpPostedFileBase File)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Insurance.MemberId;
            try
            {
                var existingobj = dbcont.tbl_Insurance.FirstOrDefault(e => e.Id == tbl_Insurance.Id);
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Insurance"), fileName);
                        File.SaveAs(path);
                        tbl_Insurance.File = fileName;   //pan document file1 for the name
                    }
                }
                else
                {
                    tbl_Insurance.File = existingobj.File;
                }

                if (existingobj != null)
                {
                    tbl_Insurance.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_Insurance);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        public JsonResult GetinsuranceById(int Id)
        {
            try
            {
                var gid = dbcont.tbl_Insurance.FirstOrDefault(e => e.Id == Id);
                if (gid != null)
                {
                    return Json(gid, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json(null, JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {

                throw;
            }
        }
        public JsonResult Getinsurance(int id)
        {
            var Insurance = dbcont.tbl_Insurance.FirstOrDefault(x => x.Id == id);
            return Json(Insurance, JsonRequestBehavior.AllowGet);
        }

        public ActionResult Updateinsurance12(tbl_Insurance tbl_Insurance)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Insurance.MemberId;
            try
            {
                var existingobj = dbcont.tbl_Insurance.FirstOrDefault(e => e.Id == tbl_Insurance.Id);
                tbl_Insurance.CreatedBy = existingobj.CreatedBy;
                dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_Insurance);
                dbcont.SaveChanges();
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult Deleteinsurance(int id)
        {
            var data = dbcont.tbl_Insurance.FirstOrDefault(x => x.Id == id);
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + data.MemberId;
            try
            {
                dbcont.tbl_Insurance.Remove(data);
                dbcont.SaveChanges();
                setcookies("202");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        #endregion
        //Get All Summary Data
        public List<DetailsSummaryViewModel> GetAllSummaryData(string memberId)
        {
            List<DetailsSummaryViewModel> data = new List<DetailsSummaryViewModel>();
            var primaryDetails = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == memberId);
            if (primaryDetails != null)
            {
                data.Add(new DetailsSummaryViewModel
                {
                    Title = primaryDetails.Knowname,
                    Date = primaryDetails.DOB,
                    Description = primaryDetails.noofsisters
                });
            }

            var familyData = dbcont.FamilyDetails.Where(x => x.MemberId == memberId).ToList();
            if (familyData != null)
            {
                foreach (var item in familyData)
                {
                    data.Add(new DetailsSummaryViewModel
                    {
                        Title = item.Name,
                        Date = item.YearOfBirth,
                        Description = item.Address
                    });
                }
            }

            var allhealths = dbcont.tbl_Health.Where(x => x.MemberID == memberId).ToList();
            if (allhealths != null)
            {
                foreach (var item in allhealths)
                {
                    data.Add(new DetailsSummaryViewModel
                    {
                        Title = item.Title,
                        Date = item.FromDate,
                        Description = item.Description
                    });
                }
            }

            var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == memberId).ToList();
            if (allpassed != null)
            {
                foreach (var item in allpassed)
                {
                    data.Add(new DetailsSummaryViewModel
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Description
                    });
                }
            }


            var allScraments = dbcont.Sacraments.Where(x => x.MemberId == memberId).ToList();
            if (allScraments != null)
            {
                foreach (var item in allScraments)
                {
                    data.Add(new DetailsSummaryViewModel
                    {
                        Title = item.Title,
                        Date = item.Date,
                        Description = item.Remarks
                    });
                }
            }

            return data;
        }
        #region scrrament
        [HttpPost]
        public ActionResult AddScrament(Sacraments sacraments, HttpPostedFileBase File)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + sacraments.MemberId;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sacrament"), fileName);
                        File.SaveAs(path);
                        sacraments.File = fileName;
                    }
                }
                sacraments.CreatedBy = Convert.ToString(Session["loginuserid"]);
                dbcont.Sacraments.Add(sacraments);
                dbcont.SaveChanges();
                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetScrament(int id)
        {
            var scrament = dbcont.Sacraments.FirstOrDefault(x => x.Id == id);
            return Json(scrament, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        public ActionResult UpdateScrament(Sacraments sacraments, HttpPostedFileBase File)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + sacraments.MemberId;
            try
            {
                var data = dbcont.Sacraments.FirstOrDefault(x => x.Id == sacraments.Id);
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/Sacrament"), fileName);
                        File.SaveAs(path);
                        sacraments.File = fileName;
                    }
                }
                else
                {
                    sacraments.File = data.File;
                }
                if (data != null)
                {
                    sacraments.CreatedBy = data.CreatedBy;
                    dbcont.Entry(data).CurrentValues.SetValues(sacraments);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteScrament(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.Sacraments.FirstOrDefault(x => x.Id == id);
                dbcont.Sacraments.Remove(data);
                dbcont.SaveChanges();
                setcookies("202");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        #endregion
        #region sapration
        [HttpPost]
        public ActionResult AddSepration(tbl_SeperationFromTheCongregation SepFromCong, HttpPostedFileBase File)
        {
            string url = this.Request.UrlReferrer.PathAndQuery;
            try
            {
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Images/Separation"), fileName);
                        File.SaveAs(path);
                        SepFromCong.File = fileName;   //pan document file1 for the name
                    }
                }
                SepFromCong.CreatedBy = Convert.ToString(Session["loginuserid"]);
                var Date = SepFromCong.SeperationDate;
                if (Date != null)
                {
                    DateTime date = DateTime.ParseExact(Date, "dd/MM/yyyy", CultureInfo.CurrentCulture);
                    var year = date.Year.ToString();
                    SepFromCong.Added_Year = year;
                }

                dbcont.tbl_SeperationFromTheCongregation.Add(SepFromCong);
                dbcont.SaveChanges();

                string[] names = SepFromCong.Name.Split(' ');
                string name = names[0];
                var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.MemberID == SepFromCong.MemberID);
                if (dataUpdate != null)
                {
                    dataUpdate.Sapcheck = SepFromCong.Sapcheck;
                    dbcont.SaveChanges();
                }
                //Formation
                var dataUpdateFor = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == SepFromCong.MemberID).ToList();
                if (dataUpdateFor != null)
                {
                    foreach (var item in dataUpdateFor)
                    {
                        item.Sapcheck = SepFromCong.Sapcheck;
                        dbcont.SaveChanges();
                    }
                }
                var dataUpdateretire = dbcont.tbl_Retirement.ToList().LastOrDefault(x => x.Name.Contains(name));
                if (dataUpdateretire != null)
                {
                    dataUpdateretire.SapCheck = SepFromCong.Sapcheck;
                    dbcont.SaveChanges();
                }
                var dataUpdaterenewal = dbcont.Tbl_RenewalVows.ToList().LastOrDefault(x => x.Name.Contains(name));
                if (dataUpdaterenewal != null)
                {
                    dataUpdaterenewal.SapCheck = SepFromCong.Sapcheck;
                    dbcont.SaveChanges();
                }

                ObjectCache objectcache = MemoryCache.Default;
                objectcache.Remove("PersonelCache");
                var data = new HomeController().GetPersonelDetaisl();

                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        [HttpPost]
        public ActionResult SeprationUpdate(tbl_SeperationFromTheCongregation sapration, HttpPostedFileBase File)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + sapration.MemberID;
            try
            {
                var data = dbcont.tbl_SeperationFromTheCongregation.FirstOrDefault(x => x.SeperationId == sapration.SeperationId);
                if (File != null)
                {
                    if (File.ContentLength > 0)
                    {
                        var fileName = Path.GetFileName(File.FileName);
                        var path = Path.Combine(Server.MapPath("~/Images/Separation"), fileName);
                        File.SaveAs(path);
                        sapration.File = fileName;   //pan document file1 for the name
                    }
                }

                else
                {
                    sapration.File = data.File;
                }

                if (data != null)
                {
                    sapration.CreatedBy = data.CreatedBy;
                    dbcont.Entry(data).CurrentValues.SetValues(sapration);
                    dbcont.SaveChanges();

                    ObjectCache objectcache = MemoryCache.Default;
                    objectcache.Remove("PersonelCache");
                    var data1 = new HomeController().GetPersonelDetaisl();

                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetSeprationById(int Id)
        {
            try
            {
                var gid = dbcont.tbl_SeperationFromTheCongregation.FirstOrDefault(e => e.SeperationId == Id);
                if (gid != null)
                {
                    return Json(gid, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json(null, JsonRequestBehavior.AllowGet);
                }


            }
            catch (Exception)
            {

                throw;
            }
        }
        public ActionResult btnSeprationDelete(string SeperationId)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_SeperationFromTheCongregation.FirstOrDefault(e => e.SeperationId.ToString() == SeperationId);
                if (data != null)
                {
                    dbcont.tbl_SeperationFromTheCongregation.Remove(data);
                    dbcont.SaveChanges();

                    var personeldata = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == data.MemberID);
                    if (personeldata != null)
                    {
                        personeldata.Sapcheck = null;
                        dbcont.SaveChanges();
                    }
                    var formationdetails = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == data.MemberID).ToList();
                    if (formationdetails != null)
                    {
                        foreach (var item in formationdetails)
                        {

                            item.Sapcheck = null;
                            dbcont.SaveChanges();
                        }
                    }

                    ObjectCache objectcache = MemoryCache.Default;
                    objectcache.Remove("PersonelCache");
                    var data1 = new HomeController().GetPersonelDetaisl();

                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }

        #endregion

        [HttpGet]
        public JsonResult DatabaseBackup()
        {
            SqlConnection con = new SqlConnection();
            SqlCommand sqlcmd = new SqlCommand();
            SqlDataAdapter da = new SqlDataAdapter();
            DataTable dt = new DataTable();
            string message = string.Empty;
            con.ConnectionString = ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString;
            var path = Path.Combine(Server.MapPath("~/DatabaseBackupFiles"));
            string dbName = ConfigurationManager.AppSettings["DatabaseName"];
            if (!System.IO.Directory.Exists(path))
            {
                System.IO.Directory.CreateDirectory(path);
            }
            try
            {
                con.Open();
                sqlcmd = new SqlCommand("backup database " + dbName + " to disk='" + path + "\\" + DateTime.Now.ToString("ddMMyyyy_HHmmss") + ".Bak'", con);
                sqlcmd.ExecuteNonQuery();
                con.Close();
                message = "Backup database successfully";
            }
            catch (Exception ex)
            {
                message = "Error Occured During DB backup process !<br>" + ex.ToString();
            }
            return Json(message, JsonRequestBehavior.AllowGet);
        }
        public ActionResult GetBackupFiles()
        {
            var path = Path.Combine(Server.MapPath("~/DatabaseBackupFiles"));
            var files = Directory.GetFiles(path);
            List<string> filePaths = new List<string>();

            foreach (var item in files)
            {
                filePaths.Add(item);
            }
            ViewBag.Files = filePaths;
            return View();
        }
        [HttpPost]
        public ActionResult AddArachive(tbl_Archive tbl_Archive)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Archive.MemberId;
            try
            {
                tbl_Archive.CreatedBy = Convert.ToString(Session["loginuserid"]);
                dbcont.tbl_Archive.Add(tbl_Archive);
                dbcont.SaveChanges();

                string[] names = tbl_Archive.Name.Split(' ');
                string name = names[0];
                try
                {
                    var dataUpdate = dbcont.tbl_PersonalDetails.ToList().LastOrDefault(x => x.MemberID == tbl_Archive.MemberId);
                    if (dataUpdate != null)
                    {
                        dataUpdate.Archivecheck = tbl_Archive.Archivecheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }

                //Formation
                try
                {
                    var dataUpdateFor = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == tbl_Archive.MemberId).ToList();
                    if (dataUpdateFor != null)
                    {
                        foreach (var item in dataUpdateFor)
                        {
                            item.Archivecheck = tbl_Archive.Archivecheck;
                            dbcont.SaveChanges();
                        }
                    }
                }
                catch
                {

                }
                try
                {
                    var dataUpdateretire = dbcont.tbl_Retirement.ToList().LastOrDefault(x => x.MemberID == tbl_Archive.MemberId);
                    if (dataUpdateretire != null)
                    {
                        dataUpdateretire.Archivecheck = tbl_Archive.Archivecheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }
                try
                {
                    var dataUpdaterenewal = dbcont.Tbl_RenewalVows.ToList().LastOrDefault(x => x.Name == name);
                    if (dataUpdaterenewal != null)
                    {
                        dataUpdaterenewal.Archivecheck = tbl_Archive.Archivecheck;
                        dbcont.SaveChanges();
                    }
                }
                catch
                {

                }

                setcookies("200");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetArchiveById(int id)
        {
            try
            {
                var data = dbcont.tbl_Archive.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    return Json(data, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception)
            {
                return Json("Fail", JsonRequestBehavior.AllowGet);
            }
        }
        [HttpPost]
        public ActionResult ArchiveUpdate(tbl_Archive tbl_Archive)
        {
            string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + tbl_Archive.MemberId;
            try
            {
                var existingobj = dbcont.tbl_Archive.FirstOrDefault(e => e.Id == tbl_Archive.Id);
                if (existingobj != null)
                {
                    tbl_Archive.CreatedBy = existingobj.CreatedBy;
                    dbcont.Entry(existingobj).CurrentValues.SetValues(tbl_Archive);
                    dbcont.SaveChanges();
                }
                setcookies("201");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public ActionResult DeleteArchive(int id)
        {
            string url = this.Request.UrlReferrer.AbsoluteUri;
            try
            {
                var data = dbcont.tbl_Archive.FirstOrDefault(e => e.Id == id);
                if (data != null)
                {
                    dbcont.tbl_Archive.Remove(data);
                    dbcont.SaveChanges();
                    setcookies("202");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
                else
                {
                    setcookies("204");
                    return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                }
            }
            catch (Exception)
            {
                setcookies("204");
                return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
                throw;
            }
        }
        public JsonResult GetAllArchiveDetailsById()
        {
            string currentUser = Convert.ToString(Session["username"]);
            if (Session["username"].ToString() == "admin")
            {
                var personalDetails = dbcont.tbl_Archive.Select(x => new { x.ProvinceName, x.Name, x.Surname, x.MemberId, x.Id }).ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var personalDetails = dbcont.tbl_Archive.Select(x => new { x.ProvinceName, x.Name, x.Surname, x.MemberId, x.Id }).ToList();
                return Json(personalDetails, JsonRequestBehavior.AllowGet);
            }
        }
        public ActionResult MemberDetails(string id)
        {
            var data = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.PersonalDetailsId.ToString() == id);
            string MemberId = data == null ? "" : data.MemberID;

            var FamilyDatails = dbcont.FamilyDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.FamilyDetails1 = FamilyDatails;

            List<Appointments> Appointments = dbcont.Appointments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AppointmentsData = Appointments;

            List<tbl_Academy> tbl_Academy = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AcademyData = tbl_Academy;

            List<Sacraments> Sacraments = dbcont.Sacraments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.SacramentsData = Sacraments;

            List<Tbl_formationsDetails> Tbl_formationsDetails = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.formationsDetails = Tbl_formationsDetails;

            List<tbl_Health> tbl_Health = dbcont.tbl_Health.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.HealthDetails = tbl_Health;

            List<tbl_Passed> tbl_Passed = dbcont.tbl_Passed.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.PassedData = tbl_Passed;

            List<tbl_Insurance> tbl_Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.InsuranceDetails = tbl_Health;

            List<tbl_SeperationFromTheCongregation> tbl_SeperationFromTheCongregation = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.SeperationDetails = tbl_Health;

            return View(data);
        }
        public ActionResult MemberFullData(string id)
        {
            //tbl_Primarydetails data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == id);
            //string MemberId = data == null ? "" : data.MemberId;

            var data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == id);
            string MemberId = data == null ? "" : data.MemberId;

            ViewBag.allData = dbcont.tbl_Primarydetails.Where(x => x.MemberId == MemberId).ToList();


            var FamilyDatails = dbcont.FamilyDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.FamilyDetails1 = FamilyDatails;

            var Appointments = dbcont.Appointments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AppointmentsData = Appointments;

            var tbl_Academy = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AcademyData = tbl_Academy;

            var Sacraments = dbcont.Sacraments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.SacramentsData = Sacraments;

            var Tbl_formationsDetails = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.formationsDetails = Tbl_formationsDetails;

            var vowsrenewal = dbcont.Tbl_RenewalVows.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.HealthDetails = vowsrenewal;

            var tbl_Health = dbcont.tbl_Health.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.HealthDetails = tbl_Health;

            var tbl_Passed = dbcont.tbl_Passed.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.PassedData = tbl_Passed;

            var tbl_Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.InsuranceDetails = tbl_Insurance;

            var tbl_SeperationFromTheCongregation = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.SeperationDetails = tbl_SeperationFromTheCongregation;

            return View(data);
        }
        public ActionResult MemberFullData1(string id)
        {
            //tbl_Primarydetails data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == id);
            //string MemberId = data == null ? "" : data.MemberId;

            var data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == id);
            string MemberId = data == null ? "" : data.MemberId;

            ViewBag.allData = dbcont.tbl_Primarydetails.Where(x => x.MemberId == MemberId).ToList();


            var FamilyDatails = dbcont.FamilyDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.FamilyDetails1 = FamilyDatails;

            var Appointments = dbcont.Appointments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AppointmentsData = Appointments;

            var tbl_Academy = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AcademyData = tbl_Academy;

            var Sacraments = dbcont.Sacraments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.SacramentsData = Sacraments;

            var Tbl_formationsDetails = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId).ToList();
            var allformationname = dbcont.DataListItems.Where(x => x.DataListName == "StageOfFormation").ToList();
            List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
            foreach (var item in Tbl_formationsDetails.OrderByDescending(x => Convert.ToDateTime(x.FromDate)))
            {
                var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                allFormationD.Add(new Tbl_formationsDetails
                {
                    FromDate = item.FromDate,
                    ToDate = item.ToDate,
                    Community = item.Community,
                    Formators = item.Formators,
                    StageOfFormation = formationnames == null ? " " : formationnames.Name,
                    Description = item.Description,
                    FileName = item.FileName
                });
            }
            ViewBag.formationsDetails = allFormationD;

            var vowsrenewal = dbcont.Tbl_RenewalVows.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.HealthDetails = vowsrenewal;

            var tbl_Health = dbcont.tbl_Health.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.HealthDetails = tbl_Health;

            var tbl_Passed = dbcont.tbl_Passed.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.PassedData = tbl_Passed;

            var tbl_Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.InsuranceDetails = tbl_Insurance;

            var tbl_SeperationFromTheCongregation = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.SeperationDetails = tbl_SeperationFromTheCongregation;

            return View(data);
        }
        public ActionResult MemberFullData2(string id)
        {
            var data = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId.ToString() == id);
            string MemberId = data == null ? "" : data.MemberId;

            ViewBag.allData = dbcont.tbl_Primarydetails.Where(x => x.MemberId == MemberId).ToList();


            var FamilyDatails = dbcont.FamilyDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.FamilyDetails1 = FamilyDatails;

            var Appointments = dbcont.Appointments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AppointmentsData = Appointments;

            var tbl_Academy = dbcont.tbl_Academy.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.AcademyData = tbl_Academy;

            var Sacraments = dbcont.Sacraments.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.SacramentsData = Sacraments;

            var Tbl_formationsDetails = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.formationsDetails = Tbl_formationsDetails;

            var vowsrenewal = dbcont.Tbl_RenewalVows.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.HealthDetails = vowsrenewal;

            var tbl_Health = dbcont.tbl_Health.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.HealthDetails = tbl_Health;

            var tbl_Passed = dbcont.tbl_Passed.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.PassedData = tbl_Passed;

            var tbl_Insurance = dbcont.tbl_Insurance.Where(x => x.MemberId == MemberId).ToList();
            ViewBag.InsuranceDetails = tbl_Insurance;

            var tbl_SeperationFromTheCongregation = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == MemberId).ToList();
            ViewBag.SeperationDetails = tbl_SeperationFromTheCongregation;

            return View(data);
        }
        public ActionResult ObituryNotice(string id)
        {
            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == id);
            ViewBag.Personal = pertionalInfo;

            var tempvow = GetConfingSetting("DyKey1");


            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;

            }

            var province = dbcont.tbl_Province.ToList().LastOrDefault(x => x.Id.ToString() == pertionalInfo.ProvinceName);
            if (province != null)
            {
                ViewBag.ProvinceName = province.ProvinceName;
            }

            string MemberId = pertionalInfo == null ? "" : pertionalInfo.MemberID;
            var PrimariInfo = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == MemberId);
            ViewBag.Personal = pertionalInfo;
            if (PrimariInfo != null)
            {
                ViewBag.Country = PrimariInfo.country;
            }
            var CongData = dbcont.tbl_Congregation.ToList().LastOrDefault();
            if (CongData != null)
            {
                ViewBag.CongName = CongData.CongregationName;
                ViewBag.CongAddress = CongData.Address;
                ViewBag.CongTel = CongData.Phone;
                ViewBag.CongFax = CongData.Fax;
            }
            var Passed = dbcont.tbl_Passed.ToList().LastOrDefault(x => x.MemberID == MemberId);
            if (Passed != null)
            {
                ViewBag.Date = Passed.Date;
                ViewBag.LastPlaceRites = Passed.LastPlaceRites;
            }

            var SecretaryGeneral = dbcont.MeetingMinutes.ToList().LastOrDefault();
            if (SecretaryGeneral != null)
            {
                ViewBag.SecretaryGeneral = SecretaryGeneral.SecretaryGeneral;

            }
            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => x.MemberId.ToString() == id);
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int age = 0;
            if (data2 != null)
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age = age;

            var datafor = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == id && x.StageOfFormation == tempvow);
            var eternaldata = dbcont.tbl_Passed.ToList().LastOrDefault(x => x.MemberID.ToString() == id);
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            var strlenght = eternaldata.Date;
            var strlen = strlenght.Length;
            var edata = "";
            if (strlen > 10)
            {
                edata = eternaldata.Date.Remove(10);
            }
            else
            {
                edata = eternaldata.Date;
            }


            if (datafor != null && eternaldata != null)
            {
                DateTime dt = DateTime.ParseExact(datafor.VowsDate, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                DateTime dateTime = DateTime.ParseExact(edata, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((dateTime - dt).Ticks).Year;
            }
            ViewBag.Year = Year;
            var url = Request.UrlReferrer.AbsoluteUri;
            //Uri myUri = new Uri(this.Request.UrlReferrer.AbsoluteUri);
            string topid = HttpUtility.ParseQueryString(url).Get("id"); // current provinceid
            ViewBag.Id = topid;

            //return new Rotativa.ViewAsPdf("ObituryNotice")
            //{

            //};

            return View();
        }

        //print obitury notice  using rotativa 
        public ActionResult PrintOrbitury(string id)
        {

            var pertionalInfo = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID.ToString() == id);
            ViewBag.Personal = pertionalInfo;
            var tempvow = GetConfingSetting("DyKey1");

            if (pertionalInfo != null)
            {
                ViewBag.memberId = pertionalInfo.MemberID;
                ViewBag.name = pertionalInfo.Name;
                ViewBag.sirname = pertionalInfo.SirName;
                ViewBag.Photo = pertionalInfo.Spare1;
                ViewBag.FileNo = pertionalInfo.FileNo;

            }

            var province = dbcont.tbl_Province.ToList().LastOrDefault(x => x.Id.ToString() == pertionalInfo.ProvinceName);
            if (province != null)
            {
                ViewBag.ProvinceName = province.ProvinceName;
            }

            string MemberId = pertionalInfo == null ? "" : pertionalInfo.MemberID;
            var PrimariInfo = dbcont.tbl_Primarydetails.FirstOrDefault(x => x.MemberId == MemberId);
            ViewBag.Personal = pertionalInfo;
            if (PrimariInfo != null)
            {
                ViewBag.Country = PrimariInfo.country;
            }
            var CongData = dbcont.tbl_Congregation.ToList().LastOrDefault();
            if (CongData != null)
            {
                ViewBag.CongName = CongData.CongregationName;
                ViewBag.CongAddress = CongData.Address;
                ViewBag.CongTel = CongData.Phone;
                ViewBag.CongFax = CongData.Fax;
            }
            var Passed = dbcont.tbl_Passed.ToList().LastOrDefault(x => x.MemberID == MemberId);
            if (Passed != null)
            {
                ViewBag.Date = Passed.Date;
                ViewBag.LastPlaceRites = Passed.LastPlaceRites;
            }

            var SecretaryGeneral = dbcont.MeetingMinutes.ToList().LastOrDefault();
            if (SecretaryGeneral != null)
            {
                ViewBag.SecretaryGeneral = SecretaryGeneral.SecretaryGeneral;

            }
            var data2 = dbcont.tbl_Primarydetails.ToList().LastOrDefault(x => x.MemberId.ToString() == id);
            DateTime currentdate = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int age = 0;
            if (data2 != null)
            {
                DateTime dt = DateTime.ParseExact(data2.DOB, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                age = new DateTime((currentdate - dt).Ticks).Year;
            }
            ViewBag.Age = age;

            var datafor = dbcont.Tbl_formationsDetails.ToList().LastOrDefault(x => x.MemberId.ToString() == id && x.StageOfFormation == tempvow);
            var eternaldata = dbcont.tbl_Passed.ToList().LastOrDefault(x => x.MemberID.ToString() == id);
            DateTime currentdate1 = DateTime.ParseExact(System.DateTime.Now.Date.ToShortDateString(), "dd/MM/yyyy", CultureInfo.InvariantCulture);
            int Year = 0;
            var strlenght = eternaldata.Date;
            var strlen = strlenght.Length;
            var edata = "";
            if (strlen > 10)
            {
                edata = eternaldata.Date.Remove(10);
            }
            else
            {
                edata = eternaldata.Date;
            }


            if (datafor != null && eternaldata != null)
            {
                DateTime dt = DateTime.ParseExact(datafor.VowsDate, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                DateTime dateTime = DateTime.ParseExact(edata, "dd/MM/yyyy", CultureInfo.InvariantCulture);
                Year = new DateTime((dateTime - dt).Ticks).Year;
            }
            ViewBag.Year = Year;
            //var url = Request.UrlReferrer.AbsoluteUri;
            ////Uri myUri = new Uri(this.Request.UrlReferrer.AbsoluteUri);
            //string topid = HttpUtility.ParseQueryString(url).Get("id"); // current provinceid
            //ViewBag.Id = topid;

            //return new Rotativa.MVC.ViewAsPdf("PrintOrbitury")
            //{

            //};
            return View();
        }


        public void setcookies(string code)
        {
            HttpCookie cookie = new HttpCookie("iscode", code);
            Response.Cookies.Add(cookie);
        }

        public JsonResult GetDocType()
        {
            string lang = Session["CurrentLang"].ToString();
            if (lang == "FN")
            {
                var allRecords = dbcont.DataListItems.Where(x => x.DataListName == "Document Type")
                                .Select(x => new { x.Name_French, x.Id }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var allRecords = dbcont.DataListItems.Where(x => x.DataListName == "Document Type")
                                .Select(x => new { x.Name, x.Id }).ToList();
                return Json(allRecords, JsonRequestBehavior.AllowGet);
            }

        }

        public JsonResult GetInsDesignationType(string proId)
        {
            string lang = Convert.ToString(Session["CurrentLang"]);
            if (lang == "FN")
            {
                var allDesignation = dbcont.Tbl_InstitutionAppointmentDetails.OrderBy(x => x.Name_French).ToList();
                return Json(allDesignation, JsonRequestBehavior.AllowGet);
            }

            else
            {
                var allDesignation = dbcont.Tbl_InstitutionAppointmentDetails.OrderBy(x => x.Name).ToList();
                return Json(allDesignation, JsonRequestBehavior.AllowGet);
            }
        }

        public JsonResult GetInstitutionType()
        {
            var proId = Session["proId"].ToString();
            if (Session["username"].ToString() == "admin")
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                return Json(allInstitution, JsonRequestBehavior.AllowGet);

            }
            else
            {
                var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution" && x.ProvinceName == proId).OrderBy(x => x.Name).ToList();
                return Json(allInstitution, JsonRequestBehavior.AllowGet);

            }
        }

        public JsonResult GetInstitutionType1(string proId, string appointmentType, string appointmentTypeId, bool isPresentProvince = false)
        {

            if (appointmentType == "Diocese")
            {
                var dioId = appointmentTypeId == "0" ? "" : dbcont.tbl_Diocese.FirstOrDefault(x => x.Id.ToString() == appointmentTypeId).DioId;
                var allInstitution = dbcont.tbl_DioceseInst.Where(x => x.DioId == dioId).OrderBy(x => x.DioName).ToList();
                return Json(allInstitution, JsonRequestBehavior.AllowGet);
            }
            else if (appointmentType == "OS")
            {
                var objmyId = dbcont.ComOutSide.FirstOrDefault(x => x.Id.ToString() == appointmentTypeId);
                var myId = objmyId != null ? objmyId.MyId : "";

                var allInstitution = dbcont.tbl_ComOSInstitute.Where(x => x.ComOsId == myId).OrderBy(x => x.ComOsName).ToList();
                return Json(allInstitution, JsonRequestBehavior.AllowGet);
            }
            else if (appointmentType == "OS")
            {
                if (Session["username"].ToString() == "admin")
                {
                    var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").OrderBy(x => x.Name).ToList();
                    if (proId != "")
                        allInstitution = allInstitution.Where(x => x.ProvinceName == proId && x.EnterbyId == appointmentTypeId.ToString()).OrderBy(x => x.Name).ToList();
                    return Json(allInstitution, JsonRequestBehavior.AllowGet);

                }
                else
                {
                    var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.ActiveCkeck == "Active" && x.Type == "Institution").OrderBy(x => x.Name).ToList();
                    if (proId != "")
                        allInstitution = allInstitution.Where(x => x.ProvinceName == proId && x.EnterbyId == appointmentTypeId.ToString()).OrderBy(x => x.Name).ToList();
                    return Json(allInstitution, JsonRequestBehavior.AllowGet);

                }
            }
            else
            {
                if (Session["username"].ToString() == "admin")
                {
                    var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                    if (proId != "" && proId != "0")
                    {
                        //var prop = proId.Split('|')[1];--old code
                        var prop = proId.Split('|')[0];
                        var prop2 = "";
                        if (proId.Contains("|"))
                        {
                            prop2 = proId.Split('|')[1];
                        }
                        var provinceId = isPresentProvince ? prop : dbcont.tbl_Province.Where(p => p.MyId.ToString() == prop).Select(p => p.Id).FirstOrDefault().ToString();
                        var provinceName = isPresentProvince ? prop : dbcont.tbl_Province.Where(p => p.MyId.ToString() == prop).Select(p => p.ProvinceName).FirstOrDefault().ToString();
                        if (!string.IsNullOrEmpty(provinceId))
                            allInstitution = allInstitution.Where(x => x.ProvinceName == provinceId || x.ProvinceName == prop2 || x.ProvinceName == provinceName).OrderBy(x => x.Name).ToList();
                    }

                    return Json(allInstitution, JsonRequestBehavior.AllowGet);

                }
                else
                {
                    var allInstitution = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.Type == "Institution").OrderBy(x => x.Name).ToList();
                    if (proId != "" && proId != "")
                    {
                        var provinceId = isPresentProvince ? proId : dbcont.tbl_Province.Where(p => p.MyId == proId).Select(p => p.Id).FirstOrDefault().ToString();
                        var tbl_Province = dbcont.tbl_Province.FirstOrDefault(x => x.Id.ToString() == provinceId);
                        if (!string.IsNullOrEmpty(provinceId))
                            allInstitution = allInstitution.Where(x => x.ProvinceName == (tbl_Province == null ? "" : tbl_Province.ProvinceName) || x.ProvinceName == provinceId).OrderBy(x => x.Name).ToList();
                    }

                    return Json(allInstitution, JsonRequestBehavior.AllowGet);

                }
            }
        }

        [HttpPost]
        public JsonResult AddOfficialDoc1(tbl_OfficialDocument tbl_OfficialDocument)
        {
            var url1 = Request.UrlReferrer.AbsoluteUri;
            Uri myUri = new Uri(url1);
            string memberId = HttpUtility.ParseQueryString(myUri.Query).Get("memberId");
            var memdata = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == memberId);

            List<tbl_OfficialDocument> tbl_OfficialDocument1 = new List<tbl_OfficialDocument>();

            foreach (var item in tbl_OfficialDocument1)
            {
                var profile = Request.Files;

                string imgname = string.Empty;
                string Document1 = string.Empty;

                //Following code will check that image is there 
                //If it will Upload or else it will use Default Image

                if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
                {
                    var img = System.Web.HttpContext.Current.Request.Files["Document1"];
                    if (img.ContentLength > 0)
                    {
                        var profileName = Path.GetFileName(img.FileName);
                        var ext = Path.GetExtension(img.FileName);

                        Document1 = profileName;
                        var comPath = Server.MapPath("~/Image/OfficialDoc/") + Document1;

                        img.SaveAs(comPath);
                        item.Document1 = comPath;
                    }

                }
                //string Document1 = string.Empty;
                //if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
                //{
                //    var doc = System.Web.HttpContext.Current.Request.Files["Document1"];
                //    HttpPostedFileBase filebase = new HttpPostedFileWrapper(doc);
                //    var fileName = Path.GetFileName(filebase.FileName);
                //    item.Document1 = fileName;
                //    var path = Path.Combine(Server.MapPath("~/Image/OfficialDoc/"), fileName);
                //    filebase.SaveAs(path);
                //}

                item.CreatedBy = Convert.ToString(Session["loginuserid"]);
                item.MemberId = memdata.MemberID.ToString();
                dbcont.tbl_OfficialDocument.Add(item);
                dbcont.SaveChanges();
            }

            setcookies("200");
            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url1 + "')</script>");

        }

        //[HttpPost]
        //public JsonResult AddOfficialDoc(data1 dataVal)
        [HttpPost]
        public JsonResult AddOfficialDoc(data1 dataVal)
        {
            try
            {
                var url1 = Request.UrlReferrer.AbsoluteUri;
                Uri myUri = new Uri(url1);
                string memberId = HttpUtility.ParseQueryString(myUri.Query).Get("memberId");
                // var memdata = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == memberId);
                if (dataVal.EditDocId <= 0)
                {
                    HttpFileCollectionBase files = Request.Files;
                    string docType = Request["Doctype1"];
                    string docNo = Request["NameAndNo1"];
                    string docName = string.Empty;
                    if (files.Count > 0)
                    {
                        HttpPostedFileBase file = files[0];
                        docName = file.FileName;
                        var fileName = Path.GetFileName(file.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/OfficialDoc/"), fileName);
                        file.SaveAs(path);
                    }
                    tbl_OfficialDocument tbl_OfficialDocument = new tbl_OfficialDocument()
                    {
                        DocType1 = dataVal.DocType1,
                        NameAndNo1 = dataVal.NameAndNo1,
                        Document1 = docName
                    };
                    tbl_OfficialDocument.CreatedBy = Convert.ToString(Session["loginuserid"]);
                    tbl_OfficialDocument.MemberId = memberId;
                    dbcont.tbl_OfficialDocument.Add(tbl_OfficialDocument);
                    dbcont.SaveChanges();
                    setcookies("200");
                }
                else if (dataVal.EditDocId > 0)
                {
                    HttpFileCollectionBase files = Request.Files;
                    string docType = Request["Doctype1"];
                    string docNo = Request["NameAndNo1"];
                    string docName = string.Empty;
                    if (files.Count > 0)
                    {
                        HttpPostedFileBase file = files[0];
                        docName = file.FileName;
                        var fileName = Path.GetFileName(file.FileName);
                        var path = Path.Combine(Server.MapPath("~/Image/OfficialDoc/"), fileName);
                        file.SaveAs(path);
                    }
                    var data = dbcont.tbl_OfficialDocument.FirstOrDefault(x => x.Id == dataVal.EditDocId);
                    if (data != null)
                    {
                        data.DocType1 = dataVal.DocType1;
                        data.NameAndNo1 = dataVal.NameAndNo1;
                        if (!string.IsNullOrEmpty(docName))
                        {
                            data.Document1 = docName;
                        }
                        dbcont.SaveChanges();
                    }
                    setcookies("200");
                }
                return Json("200");
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return Json("200");
            }
        }
        //[HttpPost]
        //public JsonResult AddOfficialDoc(data1 data)
        //{
        //    var url1 = Request.UrlReferrer.AbsoluteUri;
        //    Uri myUri = new Uri(url1);
        //    string memberId = HttpUtility.ParseQueryString(myUri.Query).Get("memberId");
        //    var memdata = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == memberId);

        //    string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + data.MemberId;
        //    if (data != null)
        //    {
        //        string Document1 = string.Empty;
        //        try
        //        {
        //            if (System.Web.HttpContext.Current.Request.Files.AllKeys.Any())
        //            {
        //                var doc = System.Web.HttpContext.Current.Request.Files["Document1"];
        //                HttpPostedFileBase filebase = new HttpPostedFileWrapper(doc);
        //                var fileName = Path.GetFileName(filebase.FileName);
        //                data.Document1 = fileName;
        //                var path = Path.Combine(Server.MapPath("~/Image/OfficialDoc/"), fileName);
        //                filebase.SaveAs(path);
        //            }

        //            tbl_OfficialDocument tbl_OfficialDocument = new tbl_OfficialDocument()
        //            {
        //                DocType1 = data.DocType1,
        //                NameAndNo1 = data.NameAndNo1,
        //                Document1 = data.Document1
        //            };
        //            tbl_OfficialDocument.CreatedBy = Convert.ToString(Session["loginuserid"]);
        //            tbl_OfficialDocument.MemberId = memdata.MemberID;
        //            dbcont.tbl_OfficialDocument.Add(tbl_OfficialDocument);
        //            dbcont.SaveChanges();

        //            setcookies("200");
        //            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        //        }
        //        catch (Exception)
        //        {
        //            setcookies("204");
        //            return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        //            throw;
        //        }
        //    }
        //    return null;
        //}

        //[HttpPost]
        //public JsonResult AddOfficialDoc(List<tbl_OfficialDocument> tbl_OfficialDocument, HttpPostedFileBase Document1)
        //{
        //    var url1 = Request.UrlReferrer.AbsoluteUri;
        //    Uri myUri = new Uri(url1);
        //    string memberId = HttpUtility.ParseQueryString(myUri.Query).Get("memberId");
        //    var memdata = dbcont.tbl_PersonalDetails.FirstOrDefault(x => x.MemberID == memberId);

        //    string url = this.Request.UrlReferrer.AbsolutePath + "?memberId=" + memdata.MemberID;
        //    foreach (var item in tbl_OfficialDocument)
        //    {
        //        if (Document1 != null)
        //        {
        //            if (Document1.ContentLength > 0)
        //            {
        //                var fileName = Path.GetFileName(Document1.FileName);
        //                var path = Path.Combine(Server.MapPath("~/Image/OfficialDoc"), fileName);
        //                Document1.SaveAs(path);
        //                item.Document1 = fileName;   //pan document file1 for the name
        //            }
        //        }

        //        item.CreatedBy = Convert.ToString(Session["loginuserid"]);
        //        dbcont.tbl_OfficialDocument.Add(item);
        //        dbcont.SaveChanges();
        //    }
        //    setcookies("200");
        //    return Json("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");
        //}
        public ActionResult Member2()
        {
            return View();
        }

        public ActionResult Candidates2()
        {
            return View();
        }

        public ActionResult Candidates2New()
        {
            return PartialView("_Candidates2New");
        }
        public ActionResult Postulancy2()
        {
            return View();
        }

        public ActionResult Novititate2()
        {
            return View();
        }
        public ActionResult PreNovitiate()
        {
            return View();
        }

        public ActionResult Profession2(string page)
        {
            ViewBag.Page = page;
            return View();
        }

        public ActionResult Death2()
        {
            return View();
        }

        public ActionResult Departed2()
        {
            return View();
        }

        public ActionResult VowsRenewal2()
        {
            return View();
        }

        public ActionResult GeneralateFileNo()
        {
            string loginuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var GenFileNo = dbcont.GeneralateFileNo.Distinct().ToList();
                ViewBag.GenFileNoData = GenFileNo;
            }
            else
            {
                var GenFileNo = dbcont.GeneralateFileNo.Where(x => x.CreatedBy == loginuserid).Distinct().ToList();
                ViewBag.GenFileNoData = GenFileNo;
            }
            return View();
        }
        public ActionResult ArchiveNo()
        {
            string loginuserid = Convert.ToString(Session["loginuserid"]);
            if (Session["username"].ToString() == "admin")
            {
                var ArchiveFileNo = dbcont.tbl_Archive.Distinct().ToList();
                ViewBag.ArchiveFileNoData = ArchiveFileNo;
                ViewBag.DeathArchiveCount = (from m in dbcont.tbl_Archive
                                             where dbcont.tbl_Passed.Any(x => x.MemberID == m.MemberId)
                                             select m.MemberId).Count();
                ViewBag.SeparationArchiveCount = (from m in dbcont.tbl_Archive
                                                  where dbcont.tbl_SeperationFromTheCongregation.Any(x => x.MemberID == m.MemberId)
                                                  select m.MemberId).Count();
            }
            else
            {
                var ArchiveFileNo = dbcont.tbl_Archive.Where(x => x.CreatedBy == loginuserid).Distinct().ToList();
                ViewBag.ArchiveFileNoData = ArchiveFileNo;
            }
            return View();
        }

        public JsonResult OutSideCongBasedLoadDD(string id, int action)
        {
            try
            {

                var myId = dbcont.ComOutSide.First(x => x.Id.ToString() == id).MyId; ;
                if (action == 1)
                {
                    var allCommOutsideProv = dbcont.ComOSProvince.Where(x => x.MyId == myId.ToString()).ToList();
                    var list1 = (from m in allCommOutsideProv
                                 select new
                                 {
                                     Text = m.ProvinceName,
                                     Value = m.id,
                                 }).ToList();
                    return Json(list1);
                }
                else if (action == 3)
                {
                    var tbl_ComOSCommunity = dbcont.tbl_ComOSCommunity.Where(x => x.MyId == myId.ToString()).ToList();
                    var list2 = (from m in tbl_ComOSCommunity
                                 select new
                                 {
                                     // ProvinceName = m.ProvinceName,
                                     Text = m.ComName,
                                     Value = m.id,
                                 }).ToList();
                    return Json(list2);
                }
                else if (action == 2)
                {
                    var allCommOutsideInst = dbcont.tbl_ComOSInstitute.Where(x => x.ComOsId == myId.ToString()).ToList();
                    var list3 = (from m in allCommOutsideInst
                                 select new
                                 {
                                     //ProvinceName = m.ProvinceName,
                                     Text = m.InstName,
                                     Value = m.id,
                                 }).ToList();
                    return Json(list3);
                }

                // return Json(list1 + "$" + list2 + "$" + list3);

            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return Json("");
            }
            return Json("");
        }

        public JsonResult DioceseBasedLoadDD(string id, int action)
        {
            try
            {

                var dioId = dbcont.tbl_Diocese.First(x => x.Id.ToString() == id).DioId; ;
                if (action == 1)
                {
                    var allCommOutsideProv = dbcont.tbl_DioceseParish.Where(x => x.DioId == dioId.ToString()).ToList();
                    var list1 = (from m in allCommOutsideProv
                                 select new
                                 {
                                     Text = m.Id,
                                     Value = m.DioName,
                                 }).ToList();
                    return Json(list1);
                }
                else if (action == 2)
                {
                    var tbl_ComOSCommunity = dbcont.tbl_DioceseCom.Where(x => x.DioId == dioId.ToString()).ToList();
                    var list2 = (from m in tbl_ComOSCommunity
                                 select new
                                 {
                                     Text = m.ComName,
                                     Value = m.id,
                                 }).ToList();
                    return Json(list2);
                }
                else if (action == 3)
                {
                    var allCommOutsideInst = dbcont.tbl_DioceseInst.Where(x => x.DioId == dioId.ToString()).ToList();
                    var list3 = (from m in allCommOutsideInst
                                 select new
                                 {
                                     Text = m.InstName,
                                     Value = m.id,
                                 }).ToList();
                    return Json(list3);
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return Json("");
            }
            return Json("");
        }


        public JsonResult SGBasedLoadDD(string id, int action)
        {
            try
            {
                if (action == 1)
                {
                    var allCommOutsideProv = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.EnterbyId == id).ToList();
                    var list1 = (from m in allCommOutsideProv
                                 select new
                                 {
                                     Text = m.Name,
                                     Value = m.Id,
                                 }).ToList();
                    return Json(list1);
                }
                else if (action == 2)
                {
                    var tbl_ComOSCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId == id).ToList();
                    var list2 = (from m in tbl_ComOSCommunity
                                 select new
                                 {
                                     Text = m.CongregationName,
                                     Value = m.Id,
                                 }).ToList();
                    return Json(list2);
                }

            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return Json("");
            }
            return Json("");
        }

        public JsonResult OutSideProBasedLoadDD(string id, int action)
        {
            try
            {
                if (action == 1)
                {
                    var allCommOutsideProv = dbcont.Tbl_ParisInstitutionDetails.Where(x => x.EnterbyId == id).ToList();
                    var list1 = (from m in allCommOutsideProv
                                 select new
                                 {
                                     Text = m.Name,
                                     Value = m.Id,
                                 }).ToList();
                    return Json(list1);
                }
                else if (action == 2)
                {
                    string currentUser = Convert.ToString(Session["username"]);
                    var tbl_ComOSCommunity = dbcont.Tbl_Cong.Where(x => x.EnterbyId == id).ToList();
                    var list2 = (from m in tbl_ComOSCommunity
                                 select new DDModel
                                 {
                                     Text = m.CongregationName,
                                     Value = m.Id.ToString(),
                                 }).ToList();
                    if (Session["username"].ToString() == "admin")
                    {
                        var list3 = (from m in dbcont.ComHouse
                                     select new DDModel
                                     {
                                         Text = m.CommunityName,
                                         Value = m.CommunityName,
                                     }).ToList();
                        var list4 = (from m in dbcont.ComOutSide
                                     select new DDModel
                                     {
                                         Text = m.CommunityName,
                                         Value = m.CommunityName,
                                     }).ToList();
                        var list5 = list2.Union(list3).Union(list4); ;
                        return Json(list5);
                    }
                    else
                    {
                        var list3 = (from m in dbcont.ComHouse
                                     where m.ProvinceName == currentUser
                                     select new DDModel
                                     {
                                         Text = m.CommunityName,
                                         Value = m.CommunityName,
                                     }).ToList();
                        var list4 = (from m in dbcont.ComOutSide
                                     where m.ProvinceName == currentUser
                                     select new DDModel
                                     {
                                         Text = m.CommunityName,
                                         Value = m.CommunityName,
                                     }).ToList();
                        var list5 = list2.Union(list3).Union(list4); ;
                        return Json(list5);
                    }

                }

            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return Json("");
            }
            return Json("");
        }
#pragma warning disable CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        public async Task<ActionResult> GetGrid_Member2View()
#pragma warning restore CS1998 // This async method lacks 'await' operators and will run synchronously. Consider using the 'await' operator to await non-blocking API calls, or 'await Task.Run(...)' to do CPU-bound work on a background thread.
        {
            //if (Session["username"].ToString() == "admin")
            {
                string currentloginid = Convert.ToString(Session["loginuserid"]);
                string currentUser = Convert.ToString(Session["username"]);
                GeneralDBContext db = new GeneralDBContext();

                var allStageOfFormation = dbcont.DataListItems.Where(x => x.DataListName == "Stage of Formation" || x.DataListName == "StageOfFormation").OrderBy(x => x.Name).ToList();
                ViewBag.FilterStageOfVows = dbcont.Tbl_ProfessionDetails.ToList();
                ViewBag.FilterStageOfFormation = allStageOfFormation.Except(allStageOfFormation.Where(x => x.Name.Contains("Vows")).ToList()).ToList();

                string SearchKeyList = "";
                //SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                //con.Open();
                //SqlCommand cmd = new SqlCommand("sp_GetKeysForMemberSearch", con);
                //cmd.CommandType = CommandType.StoredProcedure;
                //cmd.Parameters.AddWithValue("@strLanguage", "ENG");

                //SqlDataAdapter da = new SqlDataAdapter();
                //da.SelectCommand = cmd;
                //DataTable dt = new DataTable();
                //da.Fill(dt);
                //con.Close();
                //cmd.Dispose();
                //foreach (DataRow dataRow in dt.Rows)
                //{
                //    SearchKeyList = SearchKeyList + ",-" + Convert.ToString(dataRow["Keys"]);
                //}
                ViewBag.SearchKeyList = SearchKeyList;
                var allProvince = dbcont.tbl_Province.ToList();
                string currentloginuserid = Convert.ToString(Session["loginuserid"]);

                if (Session["username"].ToString() == "admin")
                {
                    //var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" /*&& x.CurrentStatus != null*/ && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                    //var viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
                    //var dataPrimary = viewAllPrimaryDetails.ToList();
                    //var provinceName = db.tbl_Province.ToList();
                    //var getAllData = (from m in allPersionalDetails
                    //                  from n in provinceName
                    //                  where m.ProvinceName == n.Id.ToString()
                    //                  // from o in dataPrimary
                    //                  //where m.MemberID == o.MemberId
                    //                  select new GetAllPrileView
                    //                  {
                    //                      ProvinceName = n.ProvinceName,
                    //                      Name = m.Name,
                    //                      FileNo = m.FileNo,
                    //                      Sirname = m.SirName,
                    //                      MemberId = (m.MemberID != null) ? m.MemberID : null
                    //                  });
                    //var personalDetails = dbcont.tbl_SeperationFromTheCongregation.Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                    //int intsepCount = 0;
                    //if (personalDetails != null)
                    //{
                    //    intsepCount = personalDetails.Count();
                    //}
                    //ViewBag.totalCount = getAllData.Count()- intsepCount;
                    ViewBag.totalCount = 0;
                }
                else
                {
                    var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" && x.ProvinceName == currentUser /*&& x.CurrentStatus != null*/ && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
                    var viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();
                    var data = new List<GetAllPrileView>();
                    foreach (var item in allPersionalDetails)
                    {
                        var name = item.Name;
                        var fileno = item.FileNo;
                        var dataPrimary = viewAllPrimaryDetails.FirstOrDefault(x => x.MemberId == item.MemberID);
                        data.Add(new GetAllPrileView()
                        {
                            Name = name,
                            FileNo = fileno,
                            Sirname = item.SirName,
                            MemberId = dataPrimary == null ? null : dataPrimary.MemberId
                        });
                    }
                    var personalDetails = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.ProvinceName == currentUser)
                            .Select(x => new { x.Name, x.MemberID, x.ProvinceName }).Distinct().ToList();
                    int intsepCount = 0;
                    if (personalDetails != null)
                    {
                        intsepCount = personalDetails.Count();
                    }
                    ViewBag.totalCount = data.Count() - intsepCount;
                }
            }
            return View();
        }
        [HttpPost]
        public ActionResult GetGrid_Member2(string name2, int? firstItem, int? lastItem, string SearchTxt, string grp, string FilterType, string FilterData, string[] Keys, string column, string SepSearchtxt, string EterSearchtxt, string ForSearchtxt)
        {
            try
            {
                if (Session["username"].ToString() == null)
                {
                    return RedirectToAction("Login");
                }

                if (Convert.ToString(Session["loginuserid"]) != null)
                {

                    if (!string.IsNullOrWhiteSpace(SearchTxt) && string.IsNullOrWhiteSpace(column))
                    {
                        List<TempPersonelDataViewmodel> data = (List<TempPersonelDataViewmodel>)Session["AllInstitution"];
                        //List<GetAllPrileView> data = (List<GetAllPrileView>)Session["AllInstitution"];
                        if (data != null && data.Count > 0)
                            return SearchMemberGrid(data, name2, firstItem, lastItem, SearchTxt, grp, FilterType, FilterData, Keys, column);
                    }

#pragma warning disable CS0219 // The variable 'Html' is assigned but its value is never used
                    string Html = "";
#pragma warning restore CS0219 // The variable 'Html' is assigned but its value is never used
                    string currentloginid = Convert.ToString(Session["loginuserid"]);
                    string currentUser = Convert.ToString(Session["username"]);
                    GeneralDBContext db = new GeneralDBContext();
                    ViewBag.StartValue = firstItem;
                    var allProvince = dbcont.tbl_Province.ToList();
                    string currentloginuserid = Convert.ToString(Session["loginuserid"]);
                    DataTable MenberIdListTable = new DataTable();
                    List<string> IdKeyList = new List<string>();
                    var tblappointments = dbcont.Appointments.ToList();
                    MenberIdListTable.Columns.Add("Ids");
                    var tbluserdynamicconfiguration = dbcont.tblUserDynamicConfiguration.ToList();
                    var tblprovince = dbcont.tbl_Province.ToList();
#pragma warning disable CS0219 // The variable 'KeyApplied' is assigned but its value is never used
                    int KeyApplied = 0;
#pragma warning restore CS0219 // The variable 'KeyApplied' is assigned but its value is never used
                    if (Keys != null)
                    {
                        KeyApplied = 1;
                        DataTable dataTable = new DataTable();
                        dataTable.Columns.Add("Keys");
                        foreach (string dta in Keys)
                        {
                            dataTable.Rows.Add(dta);
                        }
                        SqlConnection con2 = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                        con2.Open();
                        SqlCommand cmd2 = new SqlCommand("Sp_AllKeysDetails", con2);
                        cmd2.CommandType = CommandType.StoredProcedure;
                        cmd2.Parameters.AddWithValue("@Keys", dataTable);
                        SqlDataAdapter da2 = new SqlDataAdapter();
                        da2.SelectCommand = cmd2;
                        DataTable dt2 = new DataTable();
                        da2.Fill(dt2);
                        con2.Close();
                        cmd2.Dispose();

                        if (dt2 != null && dt2.Rows.Count > 0)
                        {
                            con2.Open();
                            foreach (DataRow dtrw in dt2.Rows)
                            {
                                SqlCommand cmd3 = new SqlCommand("sp_GetMemberIdsByKeys", con2);
                                cmd3.CommandType = CommandType.StoredProcedure;
                                cmd3.Parameters.AddWithValue("@Keys", dtrw["Keys"]);
                                cmd3.Parameters.AddWithValue("@ColName", dtrw["ColName"]);
                                cmd3.Parameters.AddWithValue("@KeyTable", dtrw["KeyTable"]);
                                SqlDataAdapter da3 = new SqlDataAdapter();
                                da3.SelectCommand = cmd3;
                                DataTable dt3 = new DataTable();
                                da3.Fill(dt3);
                                cmd3.Dispose();
                                if (dt3 != null && dt3.Rows.Count > 0)
                                {
                                    foreach (DataRow dtrow in dt3.Rows)
                                    {
                                        MenberIdListTable.Rows.Add(dtrow["MemberId"]);
                                        IdKeyList.Add(Convert.ToString(dtrow["MemberId"]));
                                    }
                                }
                            }
                            con2.Close();
                        }
                    }
                    if (Session["username"].ToString() == "admin")
                    {

                        if (FilterType == "1" && FilterData == "1")
                        {
                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "2").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

                            List<TempDeathviewmodel> response = new List<TempDeathviewmodel>();
                            var eternaldata = new HomeController().GetPersonelDetaisl();
                            List<TempDeathviewmodel> TempDeathviewmodel = new List<TempDeathviewmodel>();
                            foreach (var item in eternaldata)
                            {
                                response = item.Deathdata;
                            }
                            switch (column)
                            {
                                case "eterprov":
                                    response = response.Where(x => x.ProvinceName.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etername":
                                    response = response.Where(x => x.Name.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etersirname":
                                    response = response.Where(x => x.SirName.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterdate":
                                    response = response.Where(x => x.Date.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterage":
                                    response = response.Where(x => x.age.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etertime":
                                    response = response.Where(x => x.time.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etercause":
                                    response = response.Where(x => x.Cause.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterlastnature":
                                    response = response.Where(x => x.LastNatureRites.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterlastplace":
                                    response = response.Where(x => x.LastPlaceRites.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterdescription":
                                    response = response.Where(x => x.Description.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                default:
                                    if (!string.IsNullOrEmpty(SearchTxt))
                                    {
                                        response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    }
                                    break;


                            }

                            //if (!string.IsNullOrEmpty(SearchTxt))
                            //{
                            //    response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                            //                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                            //                                  || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                            //}
                            ViewBag.DynamicTotalCount = response.Count();
                            if (firstItem != null && lastItem != null)
                            {
                                int from, to;

                                int.TryParse(Convert.ToString(firstItem), out from);
                                int.TryParse(Convert.ToString(lastItem), out to);

                                var filteredData = response.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                                response = filteredData.ToList();
                            }
                            //if (firstItem != null && lastItem != null)
                            //{
                            //    sbyte from = Convert.ToSByte(firstItem);
                            //    sbyte To = Convert.ToSByte(lastItem);
                            //    var filteredData = response.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                            //    response = filteredData.ToList();
                            //}
                            ViewBag.EternalRest = response;
                            //                        if (string.IsNullOrWhiteSpace(SearchTxt) && string.IsNullOrWhiteSpace(FilterType) &&
                            //string.IsNullOrWhiteSpace(FilterData) && string.IsNullOrWhiteSpace(grp))
                            //                        {
                            //                            string sessionKey = string.Format("{0}_UserDynamicConfig", "2");
                            //                            Session[sessionKey] = ColumnShow;
                            //                        }

                            return PartialView("_MemberDetails2_New_EternalRest");
                        }
                        else if (FilterType == "1" && FilterData == "2")
                        {
                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "3").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);
                            //var response = new List<PersonalDetailsViewModel>();
                            //var personalDetails = dbcont.tbl_SeperationFromTheCongregation
                            //.Select(x => new { x.Name, x.MemberID, x.ProvinceName, x.Title, x.SeperationAge, x.SeperationDate, x.Describtion }).Distinct().Where(x => (IdKeyList.Contains(x.MemberID)) || IdKeyList.Count == 0).ToList();
                            //var peroneldata = dbcont.tbl_PersonalDetails.ToList();
                            //var provincedata = dbcont.tbl_Province.ToList();
                            List<PersonalDetailsViewModel> response = new List<PersonalDetailsViewModel>();
                            var sepdata = new HomeController().GetPersonelDetaisl();
                            foreach (var item in sepdata)
                            {
                                response = item.personalDetailsViewModels;
                            }

                            switch (column)
                            {
                                case "memberid1":
                                    response = response.Where(x => x.MemberID.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "proname1":
                                    response = response.Where(x => x.ProvinceName.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "name1":
                                    response = response.Where(x => x.Name.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "sirname1":
                                    response = response.Where(x => x.SurName.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "title1":
                                    response = response.Where(x => x.Title.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "age1":
                                    response = response.Where(x => x.age.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "date1":
                                    response = response.Where(x => x.Date.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "description1":
                                    response = response.Where(x => x.Description.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                default:
                                    if (!string.IsNullOrEmpty(SearchTxt))
                                    {
                                        response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                                     || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    }
                                    break;

                            }

                            //if (!string.IsNullOrEmpty(SearchTxt))
                            //{
                            //    response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                            //                                 || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(SearchTxt.ToLower())
                            //                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                            //}
                            ViewBag.DynamicTotalCount = response.Count();
                            if (firstItem != null && lastItem != null)
                            {
                                int from, to;

                                int.TryParse(Convert.ToString(firstItem), out from);
                                int.TryParse(Convert.ToString(lastItem), out to);

                                var filteredData = response.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                                response = filteredData.ToList();
                            }
                            ViewBag.EternalRest = response;

                            return PartialView("_MemberDetails2_New_Separated");
                        }

                        else if (FilterType == "2" && FilterData != null)
                        {



                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "1").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);





                            DataTable MemberInCandiListTable = new DataTable();

                            MemberInCandiListTable.Columns.Add("Val");
                            List<string> Candidate = new List<string>();
                            List<string> NoviIst = new List<string>();
                            List<string> NovIInd = new List<string>();
                            List<PersonalDetailsViewModel> seperationdata = new List<PersonalDetailsViewModel>();
                            List<TempDeathviewmodel> Deathdata = new List<TempDeathviewmodel>();

                            var data = new HomeController().GetPersonelDetaisl();

                            foreach (var item in data)
                            {
                                Candidate = item.MemberInCandi;
                                NoviIst = item.MemberInNovIst;
                                NovIInd = item.MemberInNovIInd;
                                seperationdata = item.personalDetailsViewModels;
                                Deathdata = item.Deathdata;
                            }

                            if (Candidate != null)
                            {
                                MemberInCandiListTable.Rows.Add(Candidate);
                            }

                            if (NoviIst != null)
                            {
                                MemberInCandiListTable.Rows.Add(NoviIst);
                            }

                            if (NovIInd != null)
                            {
                                MemberInCandiListTable.Rows.Add(NovIInd);
                            }

                            if (seperationdata != null)
                            {
                                foreach (var item in seperationdata)
                                {
                                    MemberInCandiListTable.Rows.Add(item.MemberID);
                                }
                            }

                            if (Deathdata != null)
                            {
                                foreach (var item in Deathdata)
                                {
                                    MemberInCandiListTable.Rows.Add(item.MemberID);
                                }
                            }


                            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                            con.Open();
                            SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails_New", con);
                            cmd.CommandType = CommandType.StoredProcedure;
                            if (FilterType == "2" && FilterData != "")
                            {
                                cmd.Parameters.AddWithValue("@FormationFilterId", FilterData);
                            }
                            cmd.Parameters.AddWithValue("@Keys", MenberIdListTable);
                            cmd.Parameters.AddWithValue("@MemberInCandi", MemberInCandiListTable);
                            SqlDataAdapter da = new SqlDataAdapter();
                            da.SelectCommand = cmd;
                            DataTable dt = new DataTable();
                            da.Fill(dt);
                            con.Close();
                            cmd.Dispose();

                            var getAllData = (from DataRow dr in dt.Rows
                                              select new GetAllPrileView
                                              {
                                                  ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                                  Name = Convert.ToString(dr["Name"]),
                                                  FileNo = Convert.ToString(dr["FileNo"]),
                                                  NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                                  DOB = Convert.ToString(dr["DOB"]),
                                                  Country = Convert.ToString(dr["Country"]),
                                                  Sirname = Convert.ToString(dr["SirName"]),
                                                  MemberId = Convert.ToString(dr["MemberID"]),
                                                  PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                                  Nationality = Convert.ToString(dr["Nationality"]),
                                                  MobileNo = Convert.ToString(dr["mobilenumber"]),
                                                  EmailId = Convert.ToString(dr["emailid"]),
                                                  MotherTounge = Convert.ToString(dr["mothertounge"]),
                                                  AppiontmentType = Convert.ToString(dr["AppointmentType"]),
                                                  Image = Convert.ToString(dr["Image"]),
                                                  ProvinceId = Convert.ToString(dr["ProvinceId"]),
                                                  Continent = Convert.ToString(dr["Continent"]),
                                                  MotherTongue = Convert.ToString(dr["MotherTongue"]),
                                                  District = Convert.ToString(dr["District"]),
                                                  City = Convert.ToString(dr["City"]),
                                                  State = Convert.ToString(dr["State"]),
                                                  GenFileNo = Convert.ToString(dr["GenFileNo"])

                                              }).ToList();
                            getAllData = getAllData.OrderBy(x => x.ProvinceName).ToList();

                            var getadata = getAllData;

                            switch (column)
                            {
                                case "name":
                                    getadata = getadata.Where(x => x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "surname":
                                    getadata = getadata.Where(x => x.Sirname.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "bapname":
                                    getadata = getadata.Where(x => x.NameBaptismial.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "dob":
                                    getadata = getadata.Where(x => x.DOB.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "country":
                                    getadata = getadata.Where(x => x.Country.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "province":
                                    getadata = getadata.Where(x => x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "fileno":
                                    getadata = getadata.Where(x => x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "placeofbirth":
                                    getadata = getadata.Where(x => x.PlaceOfBirth.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;

                                default:
                                    if (!string.IsNullOrEmpty(SearchTxt))
                                    {
                                        getadata = getadata.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.GenFileNo) && x.GenFileNo.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    }
                                    break;
                            }

                            ViewBag.DynamicTotalCount = getAllData.Count();
                            if (firstItem != null && lastItem != null)
                            {
                                int from, to;

                                int.TryParse(Convert.ToString(firstItem), out from);
                                int.TryParse(Convert.ToString(lastItem), out to);

                                var filteredData = getAllData.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                                getAllData = filteredData.ToList();
                            }
                            TempData["GetAllData"] = getAllData;




                            return PartialView("_MemberDetails2_New_Formation");


                        }

                        else
                        {
                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "1").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);
                        }

                        List<PersonelDetailscachetbl> personelDetailscachetbls = new List<PersonelDetailscachetbl>();
                        personelDetailscachetbls = new HomeController().GetPersonelDetaisl();
                        List<TempPersonelDataViewmodel> getAllPrileViews = new List<TempPersonelDataViewmodel>();
                        foreach (var data in personelDetailscachetbls)
                        {

                            getAllPrileViews = data.Personeldetails;
                        }



                        ViewBag.totalCount = getAllPrileViews.Count();
                        Session["MembersData"] = getAllPrileViews;

                        if (grp != "0" && grp != null)
                        {
                            getAllPrileViews = getAllPrileViews.Where(x => !string.IsNullOrEmpty(x.Provincename) && (x.Provincename.ToLower().Contains(grp.ToLower()) || x.ProvinceId == grp)).OrderBy(x => x.Name).ToList();
                        }
                        switch (column)
                        {
                            case "name":
                                getAllPrileViews = getAllPrileViews.Where(x => x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "surname":
                                getAllPrileViews = getAllPrileViews.Where(x => x.SirName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "bapname":
                                getAllPrileViews = getAllPrileViews.Where(x => x.NameBaptismial.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "dob":
                                getAllPrileViews = getAllPrileViews.Where(x => x.DOB.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "country":
                                getAllPrileViews = getAllPrileViews.Where(x => x.Country.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "province":
                                getAllPrileViews = getAllPrileViews.Where(x => x.Provincename.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "fileno":
                                getAllPrileViews = getAllPrileViews.Where(x => x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "placeofbirth":
                                getAllPrileViews = getAllPrileViews.Where(x => x.PlaceOfBirth.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;

                            default:
                                if (!string.IsNullOrEmpty(SearchTxt))
                                {
                                    getAllPrileViews = getAllPrileViews.Where(x => !string.IsNullOrEmpty(x.Provincename) && x.Provincename.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.GenFileNo) && x.GenFileNo.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                }
                                break;
                        }


                        //getAllData.Where(x => x.Name == SearchTxt).ToList();
                        //var allins = getAllData;
                        if (string.IsNullOrWhiteSpace(SearchTxt) && string.IsNullOrWhiteSpace(FilterType) &&
                            string.IsNullOrWhiteSpace(FilterData) && string.IsNullOrWhiteSpace(grp))
                            Session["AllInstitution"] = getAllPrileViews;

                        ViewBag.DynamicTotalCount = getAllPrileViews.Count();
                        if (firstItem != null && lastItem != null)
                        {
                            int from, to;

                            int.TryParse(Convert.ToString(firstItem), out from);
                            int.TryParse(Convert.ToString(lastItem), out to);

                            var filteredData = getAllPrileViews.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                            getAllPrileViews = filteredData.ToList();
                        }
                        TempData["allinstitution"] = getAllPrileViews;
                        //ViewBag.ProvinceGroup = provinceGrp;
                    }
                    else
                    {
                        var tblformationdetails = dbcont.Tbl_formationsDetails.ToList();
                        if (FilterType == "1" && FilterData == "1")
                        {
                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "2").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);


                            List<TempDeathviewmodel> response = new List<TempDeathviewmodel>();
                            var eternaldata = new HomeController().GetPersonelDetaisl();
                            List<TempDeathviewmodel> TempDeathviewmodel = new List<TempDeathviewmodel>();
                            foreach (var item in eternaldata)
                            {
                                response = item.Deathdata.Where(x => x.Provincename == currentUser).ToList();
                            }
                            switch (column)
                            {
                                case "eterprov":
                                    response = response.Where(x => x.ProvinceName.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etername":
                                    response = response.Where(x => x.Name.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etersirname":
                                    response = response.Where(x => x.SirName.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterdate":
                                    response = response.Where(x => x.Date.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterage":
                                    response = response.Where(x => x.age.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etertime":
                                    response = response.Where(x => x.time.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "etercause":
                                    response = response.Where(x => x.Cause.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterlastnature":
                                    response = response.Where(x => x.LastNatureRites.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterlastplace":
                                    response = response.Where(x => x.LastPlaceRites.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                case "eterdescription":
                                    response = response.Where(x => x.Description.ToLower().Contains(EterSearchtxt.ToLower())).ToList();
                                    break;
                                default:
                                    if (!string.IsNullOrEmpty(SearchTxt))
                                    {
                                        response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    }
                                    break;


                            }

                            ViewBag.DynamicTotalCount = response.Count();
                            if (firstItem != null && lastItem != null)
                            {
                                int from, to;

                                int.TryParse(Convert.ToString(firstItem), out from);
                                int.TryParse(Convert.ToString(lastItem), out to);

                                var filteredData = response.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                                response = filteredData.ToList();
                            }
                            ViewBag.EternalRest = response;



                            return PartialView("_MemberDetails2_New_EternalRest");
                        }
                        else if (FilterType == "1" && FilterData == "2")
                        {
                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "3").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

                            List<PersonalDetailsViewModel> response = new List<PersonalDetailsViewModel>();
                            var sepdata = new HomeController().GetPersonelDetaisl();
                            foreach (var item in sepdata)
                            {
                                response = item.personalDetailsViewModels.Where(x => x.ProvinceName == currentUser).ToList();
                            }

                            switch (column)
                            {
                                case "memberid1":
                                    response = response.Where(x => x.MemberID.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "proname1":
                                    response = response.Where(x => x.ProvinceName.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "name1":
                                    response = response.Where(x => x.Name.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "sirname1":
                                    response = response.Where(x => x.SurName.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "title1":
                                    response = response.Where(x => x.Title.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "age1":
                                    response = response.Where(x => x.age.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "date1":
                                    response = response.Where(x => x.Date.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                case "description1":
                                    response = response.Where(x => x.Description.ToLower().Contains(SepSearchtxt.ToLower())).ToList();
                                    break;
                                default:
                                    if (!string.IsNullOrEmpty(SearchTxt))
                                    {
                                        response = response.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                                     || !string.IsNullOrEmpty(x.SurName) && x.SurName.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    }
                                    break;

                            }

                            ViewBag.DynamicTotalCount = response.Count();
                            if (firstItem != null && lastItem != null)
                            {
                                int from, to;

                                int.TryParse(Convert.ToString(firstItem), out from);
                                int.TryParse(Convert.ToString(lastItem), out to);

                                var filteredData = response.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                                response = filteredData.ToList();
                            }
                            ViewBag.EternalRest = response;



                            return PartialView("_MemberDetails2_New_Separated");
                        }
                        else if (FilterType == "2" && FilterData != null)
                        {



                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "1").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);





                            DataTable MemberInCandiListTable = new DataTable();

                            MemberInCandiListTable.Columns.Add("Val");
                            List<string> Candidate = new List<string>();
                            List<string> NoviIst = new List<string>();
                            List<string> NovIInd = new List<string>();
                            List<PersonalDetailsViewModel> seperationdata = new List<PersonalDetailsViewModel>();
                            List<TempDeathviewmodel> Deathdata = new List<TempDeathviewmodel>();

                            var data = new HomeController().GetPersonelDetaisl();

                            foreach (var item in data)
                            {
                                Candidate = item.MemberInCandi;
                                NoviIst = item.MemberInNovIst;
                                NovIInd = item.MemberInNovIInd;
                                seperationdata = item.personalDetailsViewModels;
                                Deathdata = item.Deathdata;
                            }

                            if (Candidate != null)
                            {
                                MemberInCandiListTable.Rows.Add(Candidate);
                            }

                            if (NoviIst != null)
                            {
                                MemberInCandiListTable.Rows.Add(NoviIst);
                            }

                            if (NovIInd != null)
                            {
                                MemberInCandiListTable.Rows.Add(NovIInd);
                            }

                            if (seperationdata != null)
                            {
                                foreach (var item in seperationdata)
                                {
                                    MemberInCandiListTable.Rows.Add(item.MemberID);
                                }
                            }

                            if (Deathdata != null)
                            {
                                foreach (var item in Deathdata)
                                {
                                    MemberInCandiListTable.Rows.Add(item.MemberID);
                                }
                            }


                            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
                            con.Open();
                            SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails_New", con);
                            cmd.CommandType = CommandType.StoredProcedure;
                            cmd.Parameters.AddWithValue("@username", currentUser);
                            if (FilterType == "2" && FilterData != "")
                            {
                                cmd.Parameters.AddWithValue("@FormationFilterId", FilterData);
                            }
                            cmd.Parameters.AddWithValue("@Keys", MenberIdListTable);
                            cmd.Parameters.AddWithValue("@MemberInCandi", MemberInCandiListTable);
                            SqlDataAdapter da = new SqlDataAdapter();
                            da.SelectCommand = cmd;
                            DataTable dt = new DataTable();
                            da.Fill(dt);
                            con.Close();
                            cmd.Dispose();

                            var getAllData = (from DataRow dr in dt.Rows
                                              select new GetAllPrileView
                                              {
                                                  ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                                  Name = Convert.ToString(dr["Name"]),
                                                  FileNo = Convert.ToString(dr["FileNo"]),
                                                  NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                                  DOB = Convert.ToString(dr["DOB"]),
                                                  Country = Convert.ToString(dr["Country"]),
                                                  Sirname = Convert.ToString(dr["SirName"]),
                                                  MemberId = Convert.ToString(dr["MemberID"]),
                                                  PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                                  Nationality = Convert.ToString(dr["Nationality"]),
                                                  MobileNo = Convert.ToString(dr["mobilenumber"]),
                                                  EmailId = Convert.ToString(dr["emailid"]),
                                                  MotherTounge = Convert.ToString(dr["mothertounge"]),
                                                  AppiontmentType = Convert.ToString(dr["AppointmentType"]),
                                                  Image = Convert.ToString(dr["Image"]),
                                                  ProvinceId = Convert.ToString(dr["ProvinceId"]),
                                                  Continent = Convert.ToString(dr["Continent"]),
                                                  MotherTongue = Convert.ToString(dr["MotherTongue"]),
                                                  District = Convert.ToString(dr["District"]),
                                                  City = Convert.ToString(dr["City"]),
                                                  State = Convert.ToString(dr["State"]),
                                                  GenFileNo = Convert.ToString(dr["GenFileNo"])

                                              }).ToList();
                            getAllData = getAllData.OrderBy(x => x.ProvinceName).ToList();

                            var getadata = getAllData;

                            switch (column)
                            {
                                case "name":
                                    getadata = getadata.Where(x => x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "surname":
                                    getadata = getadata.Where(x => x.Sirname.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "bapname":
                                    getadata = getadata.Where(x => x.NameBaptismial.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "dob":
                                    getadata = getadata.Where(x => x.DOB.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "country":
                                    getadata = getadata.Where(x => x.Country.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "province":
                                    getadata = getadata.Where(x => x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "fileno":
                                    getadata = getadata.Where(x => x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;
                                case "placeofbirth":
                                    getadata = getadata.Where(x => x.PlaceOfBirth.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    break;

                                default:
                                    if (!string.IsNullOrEmpty(SearchTxt))
                                    {
                                        getadata = getadata.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.GenFileNo) && x.GenFileNo.ToLower().Contains(SearchTxt.ToLower())
                                                                      || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                    }
                                    break;
                            }

                            ViewBag.DynamicTotalCount = getAllData.Count();
                            if (firstItem != null && lastItem != null)
                            {
                                int from, to;

                                int.TryParse(Convert.ToString(firstItem), out from);
                                int.TryParse(Convert.ToString(lastItem), out to);

                                var filteredData = getAllData.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                                getAllData = filteredData.ToList();
                            }
                            TempData["GetAllData"] = getAllData;




                            return PartialView("_MemberDetails2_New_Formation");


                        }

                        else
                        {
                            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "1").FirstOrDefault();
                            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);
                        }

                        List<PersonelDetailscachetbl> personelDetailscachetbls = new List<PersonelDetailscachetbl>();
                        personelDetailscachetbls = new HomeController().GetPersonelDetaisl();
                        List<TempPersonelDataViewmodel> getAllPrileViews = new List<TempPersonelDataViewmodel>();
                        foreach (var data in personelDetailscachetbls)
                        {
                            //foreach(var item in data.Personeldetails)
                            //{
                            //    item.AppiontmentType = GetAppointtype(item.MemberID);
                            //}
                            getAllPrileViews = data.Personeldetails.Where(x => x.Provincename == currentUser).ToList();
                        }
                        ViewBag.totalCount = getAllPrileViews.Count();
                        Session["MembersData"] = getAllPrileViews;

                        if (grp != "0" && grp != null)
                        {
                            getAllPrileViews = getAllPrileViews.Where(x => !string.IsNullOrEmpty(x.Provincename) && (x.Provincename.ToLower().Contains(grp.ToLower()) || x.ProvinceId == grp)).OrderBy(x => x.Name).ToList();
                        }
                        switch (column)
                        {
                            case "name":
                                getAllPrileViews = getAllPrileViews.Where(x => x.Name.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "surname":
                                getAllPrileViews = getAllPrileViews.Where(x => x.SirName.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "bapname":
                                getAllPrileViews = getAllPrileViews.Where(x => x.NameBaptismial.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "dob":
                                getAllPrileViews = getAllPrileViews.Where(x => x.DOB.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "country":
                                getAllPrileViews = getAllPrileViews.Where(x => x.Country.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "province":
                                getAllPrileViews = getAllPrileViews.Where(x => x.Provincename.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "fileno":
                                getAllPrileViews = getAllPrileViews.Where(x => x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;
                            case "placeofbirth":
                                getAllPrileViews = getAllPrileViews.Where(x => x.PlaceOfBirth.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                break;

                            default:
                                if (!string.IsNullOrEmpty(SearchTxt))
                                {
                                    getAllPrileViews = getAllPrileViews.Where(x => !string.IsNullOrEmpty(x.Provincename) && x.Provincename.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.GenFileNo) && x.GenFileNo.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
                                }
                                break;
                        }

                        if (string.IsNullOrWhiteSpace(SearchTxt) && string.IsNullOrWhiteSpace(FilterType) &&
                           string.IsNullOrWhiteSpace(FilterData) && string.IsNullOrWhiteSpace(grp))
                            Session["AllInstitution"] = getAllPrileViews;

                        ViewBag.DynamicTotalCount = getAllPrileViews.Count();
                        if (firstItem != null && lastItem != null)
                        {
                            int from, to;

                            int.TryParse(Convert.ToString(firstItem), out from);
                            int.TryParse(Convert.ToString(lastItem), out to);

                            var filteredData = getAllPrileViews.Skip(Math.Max(0, from - 1)).Take(to - (from - 1));
                            getAllPrileViews = filteredData.ToList();
                        }
                        TempData["allinstitution"] = getAllPrileViews;



                        //ViewBag.allinstitution = allins;
                        //TempData["allinstitution"] = allins;
                        //Session["AllInstitution"] = allins;
                    }
                    return PartialView("_MemberDetails2_New");
                }
                else
                {
                    return RedirectToAction("Login");
                }
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return RedirectToAction("Login");
            }

            //return Json(new { Url = Url.Action("_InstitutionCreatedList", ViewBag.allinstitution) });
        }

        public ActionResult SearchMemberGrid(List<TempPersonelDataViewmodel> data, string name2, int? firstItem, int? lastItem, string SearchTxt, string grp, string FilterType, string FilterData, string[] Keys, string column)
        {
            data = data.Where(x => !string.IsNullOrEmpty(x.Provincename) && x.Provincename.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.SirName) && x.SirName.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.GenFileNo) && x.GenFileNo.ToLower().Contains(SearchTxt.ToLower())
                                                                  || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();

            ViewBag.StartValue = firstItem;
            ViewBag.DynamicTotalCount = data.Count();
            if (firstItem != null && lastItem != null)
            {
                sbyte from = Convert.ToSByte(firstItem);
                sbyte To = Convert.ToSByte(lastItem);
                var filteredData = data.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                data = filteredData.ToList();
            }

            TempData["allinstitution"] = data;
            string currentUser = Convert.ToString(Session["username"]);
            var tbluserdynamicconfiguration = dbcont.tblUserDynamicConfiguration.ToList();
            //string sessionKey = string.Format("{0}_UserDynamicConfig", "1");
            //tblUserDynamicConfiguration config = (tblUserDynamicConfiguration)Session[sessionKey];
            //ViewBag.ColumnShow = config == null ? "" : Convert.ToString(config.ListData);

            var ColumnShow = tbluserdynamicconfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "1").FirstOrDefault();
            ViewBag.ColumnShow = ColumnShow == null ? "" : Convert.ToString(ColumnShow.ListData);

            return PartialView("_MemberDetails2_New");
        }

        public string GetAppointtype(string Memberid)
        {
            var appointmenttype = "";
            var appoinementdata = dbcont.Appointments.Where(x => x.MemberId == Memberid && x.Status == "Active").ToList();
            if (appoinementdata != null)
            {
                foreach (var obj in appoinementdata)
                {
                    if (obj.DesignationType != "" || obj.DesignationType != null)
                    {
                        appointmenttype = string.Join(",", appointmenttype, obj.DesignationType);
                    }
                }
                appointmenttype = appointmenttype.TrimStart(',');
            }
            else
            {
                appointmenttype = "";
            }
            return appointmenttype;
        }

        [HttpPost]
        public ActionResult SetDynamicColumn(string ListType, string ListData)
        {
            if (ListType != "" && ListData != "")
            {
                string currentUser = Convert.ToString(Session["username"]);
                tblUserDynamicConfiguration tblUserDynamicConfiguration = new tblUserDynamicConfiguration();
                tblUserDynamicConfiguration.ListType = ListType;
                tblUserDynamicConfiguration.ListData = ListData;
                tblUserDynamicConfiguration.CurrentUser = currentUser;
                string sessionKey = string.Format("{0}_UserDynamicConfig", ListType);
                var data = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == ListType).FirstOrDefault();
                if (data != null)
                {
                    data.ListData = ListData;
                    data.UpdateBy = currentUser;
                    data.UpdateDate = Convert.ToString(DateTime.Now);
                    dbcont.Entry(data).CurrentValues.SetValues(data);
                    dbcont.SaveChanges();

                    Session[sessionKey] = data;
                }
                else
                {
                    dbcont.tblUserDynamicConfiguration.Add(tblUserDynamicConfiguration);
                    dbcont.SaveChanges();
                    Session[sessionKey] = tblUserDynamicConfiguration;
                }
            }
            return null;
        }
        [HttpPost]
        public ActionResult GetMemebersWithAge(string fromAge, string toAge, string stageOfFormation, string GroupByData)
        {
            List<GetAllPrileView> alldata = new List<GetAllPrileView>();
            if (System.Web.HttpContext.Current.Session["MembersData"] != null)
            {
                var configuration = new MapperConfiguration(cfg => cfg.CreateMap<TempPersonelDataViewmodel, GetAllPrileView>()
                                    .ForMember(dest => dest.ProvinceName, opt => opt.MapFrom(src => src.Provincename))
                                    .ForMember(dest => dest.ProvinceId, opt => opt.MapFrom(src => src.ProvinceId))
                                    .ForMember(dest => dest.NameBaptismial, opt => opt.MapFrom(src => src.NameBaptismial))
                                    .ForMember(dest => dest.PreNoviDate, opt => opt.MapFrom(src => src.PreNoviDate)));
                var mapper = configuration.CreateMapper();
                var allTempPersonalDataViewModel = System.Web.HttpContext.Current.Session["MembersData"] as List<TempPersonelDataViewmodel>;
                List<GetAllPrileView> getAllPrileViews = mapper.Map<List<TempPersonelDataViewmodel>, List<GetAllPrileView>>(allTempPersonalDataViewModel);
                alldata = getAllPrileViews;
            }
            else
            {
                alldata = GetDetails();
            }
            if (!string.IsNullOrEmpty(stageOfFormation))
            {
                List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
                var allformationname = dbcont.DataListItems.ToList();
                var allFormationData = dbcont.Tbl_formationsDetails.ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "4" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate,
                        ProvinceName = item.ProvinceName
                    });
                }
                var provinceGrp1 = alldata.GroupBy(u => u.ProvinceName).Select(g => g.ToList()).ToList();
                var allformation = dbcont.DataListItems.Where(x => (x.DataListName == "Stage of Formation" || x.DataListName == "StageOfFormation") && !(x.Name.Contains("Vows")) && x.FormationId != null).ToList();
                var profMemberIds = allFormationData.Select(x => x.MemberId).ToList();
                var userGrp = allFormationData.GroupBy(x => x.MemberId).Select(g => g.ToList().OrderBy(x => System.Convert.ToInt32(x.StageOfFormation)).LastOrDefault()).ToList();
                var profDetails = dbcont.Tbl_ProfessionDetails.ToList();

                if (provinceGrp1 != null)
                {
                    string[,] MainList = new string[provinceGrp1.Count + 1, allformation.Count + profDetails.Count];
                    int i = 0;
                    foreach (var item in allformation)
                    {
                        MainList[0, i] = item.FormationId;
                        i++;
                    }
                    foreach (var item in profDetails)
                    {
                        MainList[0, i] = Convert.ToString(item.Id);
                        i++;
                    }
                    int k = 1;
                    foreach (var item in provinceGrp1)
                    {
#pragma warning disable CS0219 // The variable 'j' is assigned but its value is never used
                        int j = 0;
#pragma warning restore CS0219 // The variable 'j' is assigned but its value is never used
                        foreach (var item2 in item)
                        {
                            var FormationMemberWise = allFormationData.Where(x => x.MemberId == item2.MemberId).Select(x => x.StageOfFormation).ToList();
                            var ProfessionMemberWise = allProfesionalFormationData.Where(x => x.MemberId == item2.MemberId).Select(x => x.StageOfFormation).ToList();
                            var FormationMemberWiseMax = allformation.Where(x => FormationMemberWise.Contains(x.FormationId)).OrderBy(x => System.Convert.ToInt32(x.intRank)).LastOrDefault();
                            var ProfessionMemberWiseMax = profDetails.Where(x => ProfessionMemberWise.Contains(x.Id.ToString())).OrderBy(x => System.Convert.ToInt32(x.intRank)).LastOrDefault();
                            if ((FormationMemberWise != null && FormationMemberWise.Count != 0 && FormationMemberWiseMax != null) || ((ProfessionMemberWise != null && ProfessionMemberWise.Count != 0 && ProfessionMemberWiseMax != null)))
                            {
                                for (int l = 0; l < (allformation.Count + profDetails.Count); l++)
                                {
                                    if (Convert.ToInt32(FormationMemberWiseMax == null ? 0 : FormationMemberWiseMax.intRank) > Convert.ToInt32(ProfessionMemberWiseMax == null ? 0 : ProfessionMemberWiseMax.intRank))
                                    {
                                        if (MainList[0, l] == FormationMemberWiseMax.FormationId)
                                        {
                                            MainList[k, l] = Convert.ToString(Convert.ToInt32(MainList[k, l]) + 1);
                                        }
                                    }
                                    else
                                    {
                                        if (ProfessionMemberWiseMax != null)
                                        {
                                            if (MainList[0, l] == ProfessionMemberWiseMax.Id.ToString())
                                            {
                                                MainList[k, l] = Convert.ToString(Convert.ToInt32(MainList[k, l]) + 1);
                                            }
                                        }
                                    }

                                }
                            }
                            //if (ProfessionMemberWise != null && ProfessionMemberWise.Count != 0 && ProfessionMemberWiseMax != null)
                            //{
                            //    for (int l = 0; l < (allformation.Count + profDetails.Count); l++)
                            //    {
                            //        if (FormationMemberWiseMax.intRank > ProfessionMemberWiseMax.intRank)
                            //        {
                            //            if (MainList[0, l] == FormationMemberWiseMax.FormationId)
                            //            {
                            //                MainList[k, l] = Convert.ToString(Convert.ToInt32(MainList[k, l]) + 1);
                            //            }
                            //        }
                            //        else
                            //        {
                            //            if (MainList[0, l] == ProfessionMemberWiseMax.Id.ToString())
                            //            {
                            //                MainList[k, l] = Convert.ToString(Convert.ToInt32(MainList[k, l]) + 1);
                            //            }
                            //        }
                            //    }
                            //}

                        }
                        k++;
                    }
                    ViewBag.FinalList = MainList;

                }

                ViewBag.ProfessionDetail = allProfesionalFormationData;
                ViewBag.ProfDetails = profDetails;
                ViewBag.Formation = allformation;
                ViewBag.AllFormation = allformation;
                ViewBag.ProvinceGroup = provinceGrp1;
                ViewBag.usergrp = userGrp;
                return PartialView("_AgeStasticsViewNew");
            }

            int frmAge = !string.IsNullOrEmpty(fromAge) ? System.Convert.ToInt32(fromAge) : 0;
            int age = !string.IsNullOrEmpty(toAge) ? System.Convert.ToInt32(toAge) : 0;


            if (string.IsNullOrEmpty(fromAge))
            {
                if (alldata != null && alldata.Any())
                {
                    if (GroupByData == "")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.ProvinceName).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                    else if (GroupByData == "Country")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.Country).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                    else if (GroupByData == "State")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.State).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                    else if (GroupByData == "Continent")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.Continent).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                    else if (GroupByData == "City")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.City).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                    else if (GroupByData == "District")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.District).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                    else if (GroupByData == "Language")
                    {
                        var provinceGrp = alldata.GroupBy(u => u.MotherTongue).Select(g => g.ToList()).ToList();
                        ViewBag.ProvinceGroup = provinceGrp;
                        ViewBag.GroupByData = GroupByData;
                    }
                }

            }
            else
            {

                if (alldata != null && alldata.Any())
                {
                    ViewBag.GroupByData = GroupByData;
                    ViewBag.totalCount = alldata.Count;
                    List<GetAllPrileView> ageFilteredData = new List<GetAllPrileView>();
                    if (string.IsNullOrEmpty(toAge))
                    {
                        ageFilteredData = alldata.Where(x => GetAge(x.DOB) == frmAge).OrderBy(i => i.DOB).ToList();
                    }
                    else
                    {
                        ageFilteredData = alldata.Where(x => GetAge(x.DOB) <= age && GetAge(x.DOB) >= frmAge).OrderBy(i => i.DOB).ToList();
                    }
                    var provinceGrp = ageFilteredData.GroupBy(u => u.ProvinceName).Select(g => g.ToList()).ToList();
                    if (GroupByData == "Country")
                    {
                        provinceGrp = ageFilteredData.GroupBy(u => u.Country).Select(g => g.ToList()).ToList();
                    }
                    if (GroupByData == "State")
                    {
                        provinceGrp = ageFilteredData.GroupBy(u => u.State).Select(g => g.ToList()).ToList();
                    }
                    if (GroupByData == "City")
                    {
                        provinceGrp = ageFilteredData.GroupBy(u => u.City).Select(g => g.ToList()).ToList();
                    }
                    if (GroupByData == "Continent")
                    {
                        provinceGrp = ageFilteredData.GroupBy(u => u.Continent).Select(g => g.ToList()).ToList();
                    }
                    if (GroupByData == "District")
                    {
                        provinceGrp = ageFilteredData.GroupBy(u => u.District).Select(g => g.ToList()).ToList();
                    }
                    if (GroupByData == "Language")
                    {
                        provinceGrp = ageFilteredData.GroupBy(u => u.MotherTongue).Select(g => g.ToList()).ToList();
                    }
                    int count = 0;
                    List<FilterAge> filterAge = new List<FilterAge>();
                    foreach (var provinceGroup in provinceGrp)
                    {
                        FilterAge filter = new FilterAge();
                        filter.Name = provinceGroup[0].ProvinceName;
                        if (GroupByData == "Country")
                        {
                            filter.Name = provinceGroup[0].Country;
                        }
                        if (GroupByData == "State")
                        {
                            filter.Name = provinceGroup[0].State;
                        }
                        if (GroupByData == "City")
                        {
                            filter.Name = provinceGroup[0].City;
                        }
                        if (GroupByData == "Continent")
                        {
                            filter.Name = provinceGroup[0].Continent;
                        }
                        if (GroupByData == "District")
                        {
                            filter.Name = provinceGroup[0].District;
                        }
                        if (GroupByData == "Language")
                        {
                            filter.Name = provinceGroup[0].MotherTongue;
                        }

                        filter.Count = provinceGroup.Count;
                        for (int ageValue = frmAge; ageValue <= age; ageValue++)
                        {
                            AgeCount ageCount = new AgeCount();
                            ageCount.Age = ageValue;

                            var ijo = provinceGroup.Where(y => GetAge(y.DOB) == ageValue).ToList();
                            ageCount.Count = ijo.Count;
                            filter.AgeCounts.Add(ageCount);
                            count++;
                        }
                        filterAge.Add(filter);
                    }

                    //ViewBag.ProvinceGroup = provinceGrp;
                    ViewBag.FilteredDate = filterAge;
                }
            }

            ViewBag.FromAge = fromAge;
            ViewBag.ToAge = toAge;

            return PartialView("_AgeStasticsView");


        }
        [HttpPost]
        public ActionResult MembersList(string provinceName, string age, string fromAge, string toAge, string GroupByFilter)
        {
            string currentUser = Convert.ToString(Session["username"]);
            var data = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "3").FirstOrDefault();
            ViewBag.ColumnShowExp = data == null ? "" : Convert.ToString(data.ListData);
            var alldata = GetFilteredMemberData(provinceName, age, fromAge, toAge, GroupByFilter);
            ViewBag.MembersList = alldata.OrderByDescending(x => x.DOB).ToList();
            //ViewBag.MembersList = alldata.OrderByDescending(x => x.DOB.Split('/')[2]).ToList();
            ViewBag.ProvinceName = provinceName;
            ViewBag.Age = age;
            return PartialView("_MembersList");
        }
        [HttpPost]
        public ActionResult MembersViewList(string SearchTxt, string first, string last)
        {

            List<GetAllPrileView> alldata = new List<GetAllPrileView>();
            if (System.Web.HttpContext.Current.Session["MembersData"] != null)
            {
                var configuration = new MapperConfiguration(cfg => cfg.CreateMap<TempPersonelDataViewmodel, GetAllPrileView>()
                    .ForMember(dest => dest.ProvinceName, opt => opt.MapFrom(src => src.Provincename))
                    .ForMember(dest => dest.ProvinceId, opt => opt.MapFrom(src => src.ProvinceId))
                    .ForMember(dest => dest.NameBaptismial, opt => opt.MapFrom(src => src.NameBaptismial))
                    .ForMember(dest => dest.PreNoviDate, opt => opt.MapFrom(src => src.PreNoviDate)));
                var mapper = configuration.CreateMapper();
                var allTempPersonalDataViewModel = System.Web.HttpContext.Current.Session["MembersData"] as List<TempPersonelDataViewmodel>;
                List<GetAllPrileView> getAllPrileViews = mapper.Map<List<TempPersonelDataViewmodel>, List<GetAllPrileView>>(allTempPersonalDataViewModel);
                alldata = getAllPrileViews;
            }
            else
            {
                alldata = GetDetails();
            }
            if (!string.IsNullOrEmpty(SearchTxt))
            {
                alldata = alldata.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.Country) && x.Country.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.NameBaptismial) && x.NameBaptismial.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.DOB) && x.DOB.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.MemberId) && x.MemberId.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.PlaceOfBirth) && x.PlaceOfBirth.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.Nationality) && x.Nationality.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.MobileNo) && x.MobileNo.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.EmailId) && x.EmailId.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.MotherTounge) && x.MotherTounge.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.AppiontmentType) && x.AppiontmentType.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
            }


            if (first != null && last != null)
            {
                var from = Convert.ToInt32(first);
                var To = Convert.ToInt32(last);
                if (alldata != null && alldata.Any())
                {
                    var filteredData = alldata.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                    alldata = filteredData.ToList();
                    ViewBag.MembersList = alldata;
                }
            }

            return PartialView("_MembersViewList");
        }

        public List<GetAllPrileView> GetFilteredMemberData(string provinceName, string age, string fromAge, string toAge, string GroupByFilter)
        {

            List<GetAllPrileView> alldata = new List<GetAllPrileView>();
            if (System.Web.HttpContext.Current.Session["MembersData"] != null)
            {
                var configuration = new MapperConfiguration(cfg => cfg.CreateMap<TempPersonelDataViewmodel, GetAllPrileView>()
                    .ForMember(dest => dest.ProvinceName, opt => opt.MapFrom(src => src.Provincename))
                    .ForMember(dest => dest.ProvinceId, opt => opt.MapFrom(src => src.ProvinceId))
                    .ForMember(dest => dest.NameBaptismial, opt => opt.MapFrom(src => src.NameBaptismial))
                    .ForMember(dest => dest.PreNoviDate, opt => opt.MapFrom(src => src.PreNoviDate)));
                var mapper = configuration.CreateMapper();
                var allTempPersonalDataViewModel = System.Web.HttpContext.Current.Session["MembersData"] as List<TempPersonelDataViewmodel>;
                List<GetAllPrileView> getAllPrileViews = mapper.Map<List<TempPersonelDataViewmodel>, List<GetAllPrileView>>(allTempPersonalDataViewModel);
                alldata = getAllPrileViews;
            }
            else
            {
                alldata = GetDetails();
            }
            alldata = alldata.OrderBy(x => x.DOB).ToList();
            if (!string.IsNullOrEmpty(age) /*&& !string.IsNullOrEmpty(provinceName)*/)
            {
                if (GroupByFilter == "")
                {
                    alldata = alldata.Where(i => i.ProvinceName == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();
                }
                if (GroupByFilter == "Country")
                {
                    alldata = alldata.Where(i => i.Country == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();

                }
                if (GroupByFilter == "State")
                {
                    alldata = alldata.Where(i => i.State == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();

                }
                if (GroupByFilter == "City")
                {
                    alldata = alldata.Where(i => i.City == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();

                }
                if (GroupByFilter == "Continent")
                {
                    alldata = alldata.Where(i => i.Continent == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();

                }
                if (GroupByFilter == "Language")
                {
                    alldata = alldata.Where(i => i.MotherTongue == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();

                }
                if (GroupByFilter == "District")
                {
                    alldata = alldata.Where(i => i.District == provinceName && GetAge(i.DOB) == System.Convert.ToInt32(age)).ToList();

                }
            }
            if (string.IsNullOrEmpty(age) /*&& !string.IsNullOrEmpty(provinceName)*/)
            {

                if (GroupByFilter == "")
                {
                    alldata = alldata.Where(i => i.ProvinceName == provinceName).ToList();

                }
                if (GroupByFilter == "Country")
                {
                    alldata = alldata.Where(i => i.Country == provinceName).ToList();

                }
                if (GroupByFilter == "State")
                {
                    alldata = alldata.Where(i => i.State == provinceName).ToList();

                }
                if (GroupByFilter == "City")
                {
                    alldata = alldata.Where(i => i.City == provinceName).ToList();

                }
                if (GroupByFilter == "Continent")
                {
                    alldata = alldata.Where(i => i.Continent == provinceName).ToList();

                }
                if (GroupByFilter == "Language")
                {
                    alldata = alldata.Where(i => i.MotherTongue == provinceName).ToList();

                }
                if (GroupByFilter == "District")
                {
                    alldata = alldata.Where(i => i.District == provinceName).ToList();

                }
            }
            if (string.IsNullOrEmpty(age) && !string.IsNullOrEmpty(fromAge) && !string.IsNullOrEmpty(toAge))
            {
                alldata = alldata.Where(i => GetAge(i.DOB) >= System.Convert.ToInt32(fromAge) && GetAge(i.DOB) <= System.Convert.ToInt32(toAge)).ToList();
            }
            if (string.IsNullOrEmpty(age) && !string.IsNullOrEmpty(fromAge) && string.IsNullOrEmpty(toAge))
            {
                alldata = alldata.Where(i => GetAge(i.DOB) >= System.Convert.ToInt32(fromAge)).ToList();
            }
            return alldata;

        }
        public List<GetAllPrileView> GetDetails()
        {
            string currentUser = Convert.ToString(Session["username"]);
            GeneralDBContext db = new GeneralDBContext();
            var allPersionalDetails = db.tbl_PersonalDetails.Where(x => x.IsDeleted == false && x.Diedcheck == null && x.Sapcheck == null && x.IsTransfer != "yes" && x.Archivecheck != "yes" /*&& x.CurrentStatus != null*/ && x.CurrentStatus != "11" && x.CurrentStatus != "12").ToList();
            List<tbl_Primarydetails> viewAllPrimaryDetails = new List<tbl_Primarydetails>();
            if (Session["username"].ToString() == "admin")
            {
                viewAllPrimaryDetails = db.tbl_Primarydetails.ToList();
            }
            else
            {
                viewAllPrimaryDetails = db.tbl_Primarydetails.Where(x => x.ProvinceName == currentUser).ToList();

            }
            var dataPrimary = viewAllPrimaryDetails.ToList();
            var provinceName = db.tbl_Province.ToList();
            var getAllData_old = (from m in allPersionalDetails
                                  from n in provinceName
                                      //from o in dataPrimary
                                  where (m.ProvinceName == n.Id.ToString())/* && (o.MemberId == m.MemberID.ToString())*/
                                                                           // from o in dataPrimary
                                                                           //where m.MemberID == o.MemberId
                                  select new GetAllPrileView
                                  {
                                      ProvinceName = n.ProvinceName,
                                      Name = m.Name,
                                      FileNo = m.FileNo,
                                      NameBaptismial = m.NameBaptismial,
                                      DOB = m.DOB,
                                      Country = m.Country,
                                      Sirname = m.SirName,
                                      MemberId = (m.MemberID != null) ? m.MemberID : null
                                  });
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
            con.Open();
            SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails", con);
            cmd.CommandType = CommandType.StoredProcedure;
            if (Session["username"].ToString() != "admin")
            {
                cmd.Parameters.AddWithValue("@username", currentUser);
            }

            SqlDataAdapter da = new SqlDataAdapter();
            da.SelectCommand = cmd;
            DataTable dt = new DataTable();
            da.Fill(dt);
            con.Close();
            cmd.Dispose();

            var getAllData = (from DataRow dr in dt.Rows
                              select new GetAllPrileView
                              {
                                  ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                  Name = Convert.ToString(dr["Name"]),
                                  FileNo = Convert.ToString(dr["FileNo"]),
                                  NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                  DOB = Convert.ToString(dr["DOB"]),
                                  Country = Convert.ToString(dr["Country"]),
                                  Sirname = Convert.ToString(dr["SirName"]),
                                  MemberId = Convert.ToString(dr["MemberID"]),
                                  PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                  Nationality = Convert.ToString(dr["Nationality"]),
                                  MobileNo = Convert.ToString(dr["mobilenumber"]),
                                  EmailId = Convert.ToString(dr["emailid"]),
                                  MotherTounge = Convert.ToString(dr["mothertounge"]),
                                  AppiontmentType = Convert.ToString(dr["AppointmentType"]),
                                  Image = Convert.ToString(dr["Image"]),
                                  ProvinceId = Convert.ToString(dr["ProvinceId"]),
                                  Continent = Convert.ToString(dr["Continent"]),
                                  MotherTongue = Convert.ToString(dr["MotherTongue"]),
                                  District = Convert.ToString(dr["District"]),
                                  City = Convert.ToString(dr["City"]),
                                  State = Convert.ToString(dr["State"])
                              }).ToList();
            return getAllData;
        }

        public static int GetAge(string DOB)
        {
            if (string.IsNullOrEmpty(DOB))
            {
                return 0;
            }
            var currentDate = System.DateTime.Now;
            var dateOfBorth = DateTime.Parse(DOB);
            var year = currentDate.Year - dateOfBorth.Year;

            return currentDate.Year - dateOfBorth.Year;
        }

        public static int GetAge1(string DOB)
        {
            if (string.IsNullOrEmpty(DOB))
            {
                return 0;
            }
            var currentDate = System.DateTime.Now;
            var dateOfBorth = DateTime.Parse(DOB);
            var year = currentDate.Year - dateOfBorth.Year;

            return year;
        }



        [HttpGet]
        public FileResult ExportToExcel(string name2, sbyte? firstItem, sbyte? lastItem, string SearchTxt, Tbl_Cong tbl_ParisInstitutionDetails, string grp)
        {

            string currentUser = Convert.ToString(Session["username"]);
            SqlConnection con = new SqlConnection(ConfigurationManager.ConnectionStrings["Generalate"].ConnectionString);
            con.Open();
            SqlCommand cmd = new SqlCommand("Sp_AllCombinedMemberDetails", con);
            cmd.CommandType = CommandType.StoredProcedure;

            SqlDataAdapter da = new SqlDataAdapter();
            da.SelectCommand = cmd;
            DataTable dt = new DataTable();
            da.Fill(dt);
            con.Close();
            cmd.Dispose();

            var getAllData = (from DataRow dr in dt.Rows
                              select new GetAllPrileView
                              {
                                  ProvinceName = Convert.ToString(dr["ProvinceName"]),
                                  Name = Convert.ToString(dr["Name"]),
                                  FileNo = Convert.ToString(dr["FileNo"]),
                                  NameBaptismial = Convert.ToString(dr["Baptismialname"]),
                                  DOB = Convert.ToString(dr["DOB"]),
                                  Country = Convert.ToString(dr["Country"]),
                                  Sirname = Convert.ToString(dr["SirName"]),
                                  MemberId = Convert.ToString(dr["MemberID"]),
                                  PlaceOfBirth = Convert.ToString(dr["placeofbirth"]),
                                  Nationality = Convert.ToString(dr["Nationality"]),
                                  MobileNo = Convert.ToString(dr["mobilenumber"]),
                                  EmailId = Convert.ToString(dr["emailid"]),
                                  MotherTounge = Convert.ToString(dr["mothertounge"]),
                                  AppiontmentType = Convert.ToString(dr["AppointmentType"]),
                                  Image = Convert.ToString(dr["Image"]),
                                  ProvinceId = Convert.ToString(dr["ProvinceId"]),
                                  Continent = Convert.ToString(dr["Continent"]),
                                  MotherTongue = Convert.ToString(dr["MotherTongue"]),
                                  District = Convert.ToString(dr["District"]),
                                  City = Convert.ToString(dr["City"]),
                                  State = Convert.ToString(dr["State"])

                              }).ToList();
            getAllData = getAllData.OrderBy(x => x.ProvinceName).ToList();
            ViewBag.totalCount = getAllData.Count();
            if (grp != "0" && grp != null)
            {
                getAllData = getAllData.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && (x.ProvinceName.ToLower().Contains(grp.ToLower()) || x.ProvinceId == grp)).OrderBy(x => x.Name).ToList();
            }
            if (!string.IsNullOrEmpty(SearchTxt))
            {
                getAllData = getAllData.Where(x => !string.IsNullOrEmpty(x.ProvinceName) && x.ProvinceName.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.Sirname) && x.Sirname.ToLower().Contains(SearchTxt.ToLower())
                                              || !string.IsNullOrEmpty(x.FileNo) && x.FileNo.ToLower().Contains(SearchTxt.ToLower())).ToList();
            }

            var allins = getAllData;
            if (firstItem != 0 && lastItem != 0)
            {
                sbyte from = Convert.ToSByte(firstItem);
                sbyte To = Convert.ToSByte(lastItem);
                var filteredData = allins.Skip(Math.Max(0, from - 1)).Take(To - (from - 1));
                allins = filteredData.ToList();
            }
            DataTable dt2 = new DataTable("Grid");
            //dt2.Columns.AddRange(new DataColumn[19] { new DataColumn("ProvinceName"),
            //                                         new DataColumn("Name"),
            //                                         new DataColumn("FileNo"),
            //                                         new DataColumn("NameBaptismial"),
            //                                         new DataColumn("DOB"),
            //                                         new DataColumn("Country"),
            //                                         new DataColumn("Sirname"),
            //                                         new DataColumn("MemberId"),
            //                                         new DataColumn("PlaceOfBirth"),
            //                                         new DataColumn("Nationality"),
            //                                         new DataColumn("MobileNo"),
            //                                         new DataColumn("EmailId"),
            //                                         new DataColumn("MotherTounge"),
            //                                         new DataColumn("AppiontmentType"),
            //                                         new DataColumn("Continent"),
            //                                         new DataColumn("MotherTongue"),
            //                                         new DataColumn("District"),
            //                                         new DataColumn("City"),
            //                                         new DataColumn("State")});

            ////var insuranceCertificate = from InsuranceCertificate in db.InsuranceCertificates select InsuranceCertificate;

            //foreach (var insurance in allins)
            //{
            //    dt2.Rows.Add(insurance.ProvinceName, insurance.Name, insurance.FileNo, insurance.NameBaptismial,
            //        insurance.DOB, insurance.Country, insurance.Sirname, insurance.MemberId,
            //        insurance.PlaceOfBirth, insurance.Nationality, insurance.MobileNo,insurance.EmailId,insurance.MotherTongue,insurance.AppiontmentType
            //        ,insurance.Continent,insurance.MotherTounge,insurance.District,insurance.City,insurance.State);
            //}
            DataTable dt1 = new DataTable();
            int count = 1;
            var dynamicdata = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "1").FirstOrDefault();
            string validcols = dynamicdata == null ? "" : Convert.ToString(dynamicdata.ListData);
            string[] ColumnsArr = validcols.Split(',');
            foreach (string col in ColumnsArr)
            {
                if (col == "1")
                {
                    dt1.Columns.Add("S_No", typeof(System.String));
                }
                if (col == "2")
                {
                    dt1.Columns.Add("Name", typeof(System.String));
                }
                if (col == "3")
                {
                    dt1.Columns.Add("Surname", typeof(System.String));
                }
                if (col == "4")
                {
                    dt1.Columns.Add("Baptismal_Name", typeof(System.String));
                }
                if (col == "5")
                {
                    dt1.Columns.Add("DOB", typeof(System.String));
                }
                if (col == "6")
                {
                    dt1.Columns.Add("Country", typeof(System.String));
                }
                if (col == "7")
                {
                    dt1.Columns.Add("Province_Name", typeof(System.String));
                }
                if (col == "8")
                {
                    dt1.Columns.Add("File_No", typeof(System.String));
                }
                if (col == "9")
                {
                    dt1.Columns.Add("Place_Of_Birth", typeof(System.String));
                }
                if (col == "10")
                {
                    dt1.Columns.Add("Nationality", typeof(System.String));
                }
                if (col == "11")
                {
                    dt1.Columns.Add("MobileNo", typeof(System.String));
                }
                if (col == "12")
                {
                    dt1.Columns.Add("Email", typeof(System.String));
                }
                if (col == "13")
                {
                    dt1.Columns.Add("Mother_Tongue", typeof(System.String));
                }
                if (col == "14")
                {
                    dt1.Columns.Add("Designations", typeof(System.String));
                }

            }

            foreach (var item in allins)
            {
                DataRow dataRow = dt1.NewRow();

                if (ColumnsArr.Contains("1"))
                {
                    dataRow["S_No"] = count;
                }
                if (ColumnsArr.Contains("2"))
                {
                    dataRow["Name"] = item.Name;
                }
                if (ColumnsArr.Contains("3"))
                {
                    dataRow["Surname"] = item.Sirname;
                }
                if (ColumnsArr.Contains("4"))
                {
                    dataRow["Baptismal_Name"] = item.NameBaptismial;
                }
                if (ColumnsArr.Contains("5"))
                {
                    dataRow["DOB"] = item.DOB;
                }
                if (ColumnsArr.Contains("6"))
                {
                    dataRow["Country"] = item.Country;
                }
                if (ColumnsArr.Contains("7"))
                {
                    dataRow["Province_Name"] = item.ProvinceName;
                }
                if (ColumnsArr.Contains("8"))
                {
                    dataRow["File_No"] = item.FileNo;
                }
                if (ColumnsArr.Contains("9"))
                {
                    dataRow["Place_Of_Birth"] = item.PlaceOfBirth;
                }
                if (ColumnsArr.Contains("10"))
                {
                    dataRow["Nationality"] = item.Nationality;
                }
                if (ColumnsArr.Contains("11"))
                {
                    dataRow["MobileNo"] = item.MobileNo;
                }
                if (ColumnsArr.Contains("12"))
                {
                    dataRow["Email"] = item.EmailId;
                }
                if (ColumnsArr.Contains("13"))
                {
                    dataRow["Mother_Tongue"] = item.MotherTongue;
                }
                if (ColumnsArr.Contains("14"))
                {
                    dataRow["Designations"] = item.AppiontmentType;
                }
                dt1.Rows.Add(dataRow);
                count++;

            }

            using (XLWorkbook wb = new XLWorkbook()) //Install ClosedXml from Nuget for XLWorkbook
            {

                wb.Worksheets.Add(dt1, "sheet1");
                using (MemoryStream stream = new MemoryStream()) //using System.IO;  
                {
                    wb.SaveAs(stream);
                    return File(stream.ToArray(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ExcelFile.xlsx");
                }
            }
        }

        //Appointment Excel Download
        [HttpGet]
        public FileResult ExportAppointment()
        {
            string currentUser = Convert.ToString(Session["username"]);

            var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
            List<Appointments> allAppointments = new List<Appointments>();
            if (Session["username"].ToString() == "admin")
            {
                allAppointments = dbcont.Appointments.ToList();
            }
            else
            {
                allAppointments = dbcont.Appointments.ToList().Where(x => x.ProvinceName.Contains(currentUser)).ToList();

            }
            var allAppointmentsFinal = allAppointments.ToList();

            allAppointmentsFinal.RemoveAll(x => x.MemberId != "");
            foreach (var item in allAppointments)
            {
                item.Place = item.Place == "" || item.Place == null || item.Place == "0" ? "" : Convert.ToString(allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault() == null ? "" : allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault());
                item.CommunityType = item.CommunityType == "--Select --" || item.CommunityType == null || item.CommunityType == "0" ? "" : item.CommunityType;
                allAppointmentsFinal.Add(item);
            }

            var totalRecords = allAppointmentsFinal.Count();
            ViewBag.AppCommCount = totalRecords;
            DataTable dt = new DataTable();
            dt.Columns.Add("S_No", typeof(System.String));
            dt.Columns.Add("FromDate", typeof(System.String));
            dt.Columns.Add("ToDate", typeof(System.String));
            dt.Columns.Add("Name", typeof(System.String));
            dt.Columns.Add("Community", typeof(System.String));
            dt.Columns.Add("Designation", typeof(System.String));
            dt.Columns.Add("Place", typeof(System.String));
            dt.Columns.Add("Status", typeof(System.String));
            int count = 1;

            foreach (var item in allAppointmentsFinal)
            {
                DataRow dataRow = dt.NewRow();
                dataRow["S.No"] = count;
                dataRow["FromDate"] = item.FromDate;
                dataRow["FromDate"] = item.ToDate;
                dataRow["FromDate"] = item.Name;
                dataRow["FromDate"] = item.CommunityType;
                dataRow["FromDate"] = item.DesignationType;
                dataRow["FromDate"] = item.Place;
                dataRow["FromDate"] = item.Status;
                dt.Rows.Add(dataRow);
                count++;
            }

            using (XLWorkbook wb = new XLWorkbook())
            {
                wb.Worksheets.Add(dt, "sheet1");
                using (MemoryStream stream = new MemoryStream())
                {
                    wb.SaveAs(stream);
                    return File(stream.ToArray(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "AppointmentExcelsheet.xlsx");
                }
            }


        }

        public ActionResult GetPrimaryDetails(string id, string name, string SearchTxt)
        {
            string currentUser = Convert.ToString(Session["username"]);

           // id = id == null ? "AutoGen" : id;


            if (name.Contains("document"))
            {
                var allOfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == id).ToList();

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allOfficialDocument = allOfficialDocument.Where(x => x.DocType1.ToLower().Contains(SearchTxt)
                                           || x.NameAndNo1.ToLower().Contains(SearchTxt)).ToList();
                }
                ViewBag.allOfficialDocument = allOfficialDocument != null && !id.Equals("AutoGen") ? allOfficialDocument.ToList() : null;
                string[] tableHeading = { "Document", "Name_/_Number", "Upload_Document", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();
            }
            if (name.Contains("family"))
            {
                var FamilyDetails = dbcont.FamilyDetails.Where(x => x.MemberId.ToString() == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    FamilyDetails = FamilyDetails.Where(x => x.MemberName.ToLower().Contains(SearchTxt)
                                           || x.Relationship.ToLower().Contains(SearchTxt)).ToList();
                }
                ViewBag.FamilyDetails = FamilyDetails != null && !id.Equals("AutoGen") ? FamilyDetails.ToList() : null;
                string[] tableHeading = { "Name", "Relationship", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("sacrament"))
            {
                var scrament = dbcont.Sacraments.Where(x => x.MemberId == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    scrament = scrament.Where(x => x.Sacrament.ToLower().Contains(SearchTxt)
                                           || x.Remarks.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = scrament != null && !id.Equals("AutoGen") ? scrament.ToList() : null;
                //ViewBag.sacrament = data.OrderBy(x => x.Date).ToList();
                ViewBag.sacrament = scrament != null && !id.Equals("AutoGen") ? scrament.ToList() : null;

                string[] tableHeading = { "Sacrament", "Date", "Place", "Document", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("health"))
            {
                var health = dbcont.tbl_Health.Where(x => x.MemberID == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    health = health.Where(x => x.Doctor.ToLower().Contains(SearchTxt)
                                           || x.Diagnosis.ToLower().Contains(SearchTxt)
                                           || x.Hospital.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = health != null && !id.Equals("AutoGen") ? health.ToList() : null;
                ViewBag.health = health != null && !id.Equals("AutoGen") ? health.ToList() : null;

                //ViewBag.health = data.OrderBy(x => x.FromDate).ToList();
                string[] tableHeading = { "Doctor", "Diagnosis", "Hospital", "File", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("formation"))
            {
                List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
                var allformationname = dbcont.DataListItems.ToList();
                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "3" || x.StageOfFormation == "5" || x.StageOfFormation == "6").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
#pragma warning disable CS0219 // The variable 'status' is assigned but its value is never used
                var status = "";
#pragma warning restore CS0219 // The variable 'status' is assigned but its value is never used
                foreach (var item in allFormationData)
                {

                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    if (formationnames != null)
                    {
                        allFormationD.Add(new Tbl_formationsDetails
                        {
                            FromDate = item.FromDate,
                            ToDate = item.ToDate,
                            StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                            Title = item.Title,
                            Community = item.Community,
                            Description = item.Description,
                            Id = item.Id,
                            FileName = item.FileName,
                            VowsDate = item.VowsDate,
                            Status = item.Status
                        });
                    }

                }
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allFormationD = allFormationD.Where(x => x.StageOfFormation.ToLower().Contains(SearchTxt)
                                           || x.Community.ToLower().Contains(SearchTxt)).ToList();
                }
                string[] tableHeading = { "Stage_formation", "FromDate", "ToDate", "Document", "Community", "Status", "Update", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();
                //var data = allFormationD != null && !id.Equals("AutoGen") ? allFormationD.ToList() : null;
                //ViewBag.allFormationD = data.OrderBy(x => x.FromDate).ToList();
                ViewBag.allFormationD = allFormationD != null && !id.Equals("AutoGen") ? allFormationD.ToList() : null;

            }

            if (name.Contains("academy"))
            {
                var allAcedemy = dbcont.tbl_Academy.Where(x => x.MemberId == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allAcedemy = allAcedemy.Where(x => x.course.ToLower().Contains(SearchTxt)
                                           || x.university.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = allAcedemy != null && !id.Equals("AutoGen") ? allAcedemy.ToList() : null;
                //ViewBag.allAcedemy = data.OrderBy(x=> x.fromdate).ToList();
                ViewBag.allAcedemy = allAcedemy != null && !id.Equals("AutoGen") ? allAcedemy.ToList() : null;

                string[] tableHeading = { "Course", "University", "FromDate", "ToDate", "Document", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("claustration"))
            {
                var allComplains = dbcont.Claustrations.Where(x => x.MemberId == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allComplains = allComplains.Where(x => x.ClaustrationPurpose.ToLower().Contains(SearchTxt)
                                           || x.ClaustrationPlace.ToLower().Contains(SearchTxt)
                                           || x.ClaustrationCommunity.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = allComplains != null && !id.Equals("AutoGen") ? allComplains.ToList() : null;
                //ViewBag.allComplains = data.OrderBy(x => x.ClaustrationFromDate).ToList();
                ViewBag.allComplains = allComplains != null && !id.Equals("AutoGen") ? allComplains.ToList() : null;

                string[] tableHeading = { "Purpose", "FromDate", "ToDate", "Place", "Community", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("retirement"))
            {
                var alltbl_Retirement = dbcont.tbl_Retirement.Where(x => x.MemberID == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    alltbl_Retirement = alltbl_Retirement.Where(x => x.Reason.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = alltbl_Retirement != null && !id.Equals("AutoGen") ? alltbl_Retirement.ToList() : null;
                //ViewBag.allRetire = data.OrderBy(x => x.DOR).ToList();
                ViewBag.allRetire = alltbl_Retirement != null && !id.Equals("AutoGen") ? alltbl_Retirement.ToList() : null;

                string[] tableHeading = { "Retirement_Date", "Age", "Reason", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("seperation"))
            {
                var Sepration = dbcont.tbl_SeperationFromTheCongregation.Where(x => x.MemberID == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    Sepration = Sepration.Where(x => x.Title.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = Sepration != null && !id.Equals("AutoGen") ? Sepration.ToList() : null;
                //ViewBag.Sepration = data.OrderBy(x => x.SeperationDate).ToList();
                ViewBag.Sepration = Sepration != null && !id.Equals("AutoGen") ? Sepration.ToList() : null;

                string[] tableHeading = { "Title", "Date", "Documents", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("eternal"))
            {
                var allpassed = dbcont.tbl_Passed.Where(x => x.MemberID == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allpassed = allpassed.Where(x => x.DeathCertificate.ToLower().Contains(SearchTxt)).ToList();
                }
                //var data = allpassed != null && !id.Equals("AutoGen") ? allpassed.ToList() : null;
                //ViewBag.allpassed = data.OrderBy(x => x.Date).ToList();
                ViewBag.allpassed = allpassed != null && !id.Equals("AutoGen") ? allpassed.ToList() : null;

                string[] tableHeading = { "Date", "Death_Certificate", "View_Documents", "Obitury_Notice", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }
            if (name.Contains("archive"))
            {
                var Archive = dbcont.tbl_Archive.Where(x => x.MemberId == id).ToList();
                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    Archive = Archive.Where(x => x.FileNo.ToLower().Contains(SearchTxt)
                                            || x.ArchiveNo.ToLower().Contains(SearchTxt)
                                            || x.Description.ToLower().Contains(SearchTxt)
                                            || x.MemberId.ToLower().Contains(SearchTxt)).ToList();
                }
                ViewBag.Archive = Archive != null && !id.Equals("AutoGen") ? Archive.ToList() : null;
                string[] tableHeading = { "Registration_No", "File_No", "Archive_No", "Description", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();
            }

            if (name.Contains("profession"))
            {
                var allFormation = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id && x.IsDeleted == false).ToList();
                var allformationname = dbcont.DataListItems.ToList();
                var allformationnameProfession = dbcont.Tbl_ProfessionDetails.ToList();
                List<Tbl_formationsDetails> allFormationD = new List<Tbl_formationsDetails>();
                List<Tbl_formationsDetails> allFormationDProfession = new List<Tbl_formationsDetails>();
                List<Tbl_formationsDetails> allVows = new List<Tbl_formationsDetails>();
                var allformations = dbcont.Tbl_formationsDetails.Where(x => x.IsDeleted == false).ToList();

                var allFormationData = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == id).ToList();
                var allProfesionalFormationData = allFormationData.Where(x => x.StageOfFormation == "1" || x.StageOfFormation == "5" || x.StageOfFormation == "4" || x.StageOfFormation == "6" || x.StageOfFormation == "3").ToList();
                allFormationData = allFormationData.Except(allProfesionalFormationData).ToList();
                foreach (var item in allFormationData)
                {
                    var formationnames = allformationname.FirstOrDefault(x => x.FormationId == item.StageOfFormation);
                    allFormationD.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate,
                        Status = item.Status,


                    });
                    //  allFormationD.Add(item);
                }
                foreach (var item in allProfesionalFormationData)
                {
                    var formationnames = allformationnameProfession.FirstOrDefault(x => x.Id.ToString() == item.StageOfFormation);
                    allFormationDProfession.Add(new Tbl_formationsDetails
                    {
                        FromDate = item.FromDate,
                        ToDate = item.ToDate,
                        StageOfFormation = formationnames == null ? string.Empty : formationnames.Name,
                        Title = item.Title,
                        Community = item.Community,
                        Description = item.Description,
                        Id = item.Id,
                        FileName = item.FileName,
                        VowsDate = item.VowsDate,
                        Place = item.Place,
                        Status = item.Status
                    });
                    //  allFormationD.Add(item);
                }

                // allFormationD = dbcont.Tbl_formationsDetails.Where(x => x.MemberId == MemberId && x.IsDeleted==false).ToList();
                allVows = allFormationDProfession.ToList();

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allVows = allVows.Where(x => x.StageOfFormation.ToLower().Contains(SearchTxt)
                                            || x.Community.ToLower().Contains(SearchTxt)
                                            || x.Place.ToLower().Contains(SearchTxt)).ToList();
                }
                var pro = dbcont.Tbl_ProfessionDetails.ToList();
                List<Tbl_formationsDetails> test = new List<Tbl_formationsDetails>();
                string lang = Convert.ToString(Session["CurrentLang"]);
                foreach (var i in allVows)
                {
                    var item = i;
                    var langu = pro.Where(j => j.Name.Equals(i.StageOfFormation)).FirstOrDefault();
                    if (langu != null)
                    {
                        item.StageOfFormation = lang == "FN" ? langu.Name_French : langu.Name;
                    }
                    test.Add(item);
                }
                //var data = test != null && !id.Equals("AutoGen") ? test.ToList() : null;
                //ViewBag.allVows = data.OrderBy(x => x.VowsDate).ToList();
                ViewBag.allVows = test != null && !id.Equals("AutoGen") ? test.ToList() : null;

                string[] tableHeading = { "Stage_formation", "Date", "Community", "Place", "Duration", "Witness", "Document", "Status", "Update", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();

            }

            if (name == "")
            {
                //var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
                //List<Appointments> allAppointments = new List<Appointments>();
                //if (Session["username"].ToString() == "admin")
                //{
                //    allAppointments = dbcont.Appointments.ToList();
                //}
                //else
                //{
                //    allAppointments = dbcont.Appointments.ToList().Where(x => x.ProvinceName.Contains(currentUser)).ToList();

                //}
                //var allAppointmentsFinal = allAppointments.ToList();

                //allAppointmentsFinal.RemoveAll(x => x.MemberId != "");
                //foreach (var item in allAppointments)
                //{
                //    item.Place = item.Place == "" || item.Place == null || item.Place == "0" ? "" : Convert.ToString(allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault() == null ? "" : allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault());
                //    item.CommunityType = item.CommunityType == "--Select --" || item.CommunityType == null || item.CommunityType == "0" ? "" : item.CommunityType;
                //    allAppointmentsFinal.Add(item);
                //}

                //var totalRecords = allAppointmentsFinal.Count();
                //ViewBag.AppCommCount = totalRecords;
                string[] tableHeading = { "FromDate", "ToDate", "Name", "Community", "Designation", "Place", "Status", "Update", "Action" };
                ViewBag.TableHeading = tableHeading.ToList();
            }

            return View("~/Views/Member/_MemberPrimaryDetailsDataTable.cshtml");
        }

        public JsonResult Updateappstatus(int countid, string newstatus)
        {
            try
            {
                var data = dbcont.Appointments.FirstOrDefault(x => x.Id == countid);
                if (data != null)
                {
                    if (data.Status == newstatus)
                    {
                        return Json("Same", JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        data.Status = newstatus;
                        dbcont.SaveChanges();
                        return Json("Success", JsonRequestBehavior.AllowGet);
                    }

                }
                else
                {
                    return Json("Fail", JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                throw ex;
            }
        }

        public ActionResult GetPrimaryAppCommDetails(string memberid, string provincename, string SearchTxt, int firstItem = 1, int lastItem = 10)
        {
            string currentUser = Convert.ToString(Session["username"]);
            try
            {
                if (provincename == "null")
                {
                    provincename = null;
                }
                if (memberid == "null")
                {
                    memberid = null;
                }
                var allPlace = dbcont.Tbl_ProfessionPlace.OrderBy(x => x.Name).ToList();
                List<Appointments> allAppointments = new List<Appointments>();
                if (Session["username"].ToString() == "admin")
                {
                    allAppointments = dbcont.Appointments.ToList();
                }
                else
                {
                    allAppointments = dbcont.Appointments.ToList().Where(x => x.ProvinceName.Contains(currentUser)).ToList();

                }


                //return Json(data, JsonRequestBehavior.AllowGet);
                if (!string.IsNullOrEmpty(provincename) && !string.IsNullOrEmpty(memberid) && memberid != "0")
                {
                    allAppointments = allAppointments.Where(x => x.ProvinceName == provincename && x.MemberId == memberid).ToList();
                }
                else if (!string.IsNullOrEmpty(provincename))
                {
                    allAppointments = allAppointments.Where(x => x.ProvinceName == provincename).ToList();
                }
                else if (!string.IsNullOrEmpty(memberid))
                {
                    allAppointments = allAppointments.Where(x => x.MemberId == memberid).ToList();
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allAppointments = allAppointments.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                  || !string.IsNullOrEmpty(x.CommunityType) && x.CommunityType.ToLowerInvariant().Contains(SearchTxt.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.DesignationType) && x.DesignationType.ToLowerInvariant().Contains(SearchTxt.ToLowerInvariant())
                                                  ).ToList();
                }
                var allAppointmentsFinal = allAppointments.ToList();

                allAppointmentsFinal.RemoveAll(x => x.MemberId != "");
                foreach (var item in allAppointments)
                {
                    item.Place = item.Place == "" || item.Place == null || item.Place == "0" ? "" : Convert.ToString(allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault() == null ? "" : allPlace.Where(x => x.Id.ToString() == item.Place).Select(x => x.Name).LastOrDefault());
                    item.CommunityType = item.CommunityType == "--Select --" || item.CommunityType == null || item.CommunityType == "0" ? "" : item.CommunityType;
                    allAppointmentsFinal.Add(item);
                }
                lastItem = lastItem - (firstItem - 1);
                var data = allAppointmentsFinal.Skip(/*param.iDisplayStart*/firstItem - 1).Take(/*param.iDisplayLength*/lastItem).ToList();
                ViewBag.CommAppData = data;
                var totalRecords = allAppointmentsFinal.Count();
                ViewBag.AppCommCount = totalRecords;
                //return Json(new
                //{
                //    param.sEcho,
                //    iTotalRecords = totalRecords,
                //    iTotalDisplayRecords = totalRecords,
                //    aaData = data
                //}, JsonRequestBehavior.AllowGet);
            }
#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                //throw;
            }
            //if (name.Contains(""))
            //{
            //    var allOfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == id).ToList();

            //    if (!string.IsNullOrEmpty(SearchTxt))
            //    {
            //        allOfficialDocument = allOfficialDocument.Where(x => x.DocType1.ToLower().Contains(SearchTxt)
            //                               || x.NameAndNo1.ToLower().Contains(SearchTxt)).ToList();
            //    }
            //    ViewBag.allOfficialDocument = allOfficialDocument != null && !id.Equals("AutoGen") ? allOfficialDocument.ToList() : null;
            string[] tableHeading = { "FromDate", "ToDate", "Name", "Community", "Designation", "Place", "Status", "Update", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            ViewBag.PageCountSR = firstItem;
            //}

            return View("~/Views/Member/_MemberPrimaryDetailsDataTable.cshtml");
        }

        public ActionResult GetPrimaryInstCommDetails(string memberid, string provincename, string SearchTxt, int firstItem = 1, int lastItem = 10)
        {
            string currentUser = Convert.ToString(Session["username"]);
            try
            {
                if (provincename == "null")
                {
                    provincename = null;
                }
                if (memberid == "null")
                {
                    memberid = null;
                }

                var allInsAppointments = new List<InstutionAppointments>();
                if (Session["username"].ToString() == "admin")
                {
                    allInsAppointments = dbcont.InstutionAppointments.ToList();
                }
                else
                {
                    allInsAppointments = dbcont.InstutionAppointments.ToList().Where(x => x.ProvinceName.Contains(currentUser)).ToList();

                }


                if (!string.IsNullOrEmpty(provincename) && !string.IsNullOrEmpty(memberid) && memberid != "0")
                {
                    allInsAppointments = allInsAppointments.Where(x => x.ProvinceName == provincename && x.MemberId == memberid).ToList();
                }
                else if (!string.IsNullOrEmpty(provincename))
                {
                    allInsAppointments = allInsAppointments.Where(x => x.ProvinceName == provincename).ToList();
                }
                else if (!string.IsNullOrEmpty(memberid))
                {
                    allInsAppointments = allInsAppointments.Where(x => x.MemberId == memberid).ToList();
                }

                if (!string.IsNullOrEmpty(SearchTxt))
                {
                    allInsAppointments = allInsAppointments.Where(x => !string.IsNullOrEmpty(x.Name) && x.Name.ToLower().Contains(SearchTxt.ToLower())
                                                  || !string.IsNullOrEmpty(x.InsDesignationType) && x.InsDesignationType.ToLowerInvariant().Contains(SearchTxt.ToLowerInvariant())
                                                  || !string.IsNullOrEmpty(x.InstitutionType) && x.InstitutionType.ToLowerInvariant().Contains(SearchTxt.ToLowerInvariant())
                                                  ).ToList();
                }
                lastItem = lastItem - (firstItem - 1);
                var data = allInsAppointments.Skip(/*param.iDisplayStart*/firstItem - 1).Take(/*param.iDisplayLength*/lastItem).ToList();
                //return Json(data, JsonRequestBehavior.AllowGet);
                ViewBag.InstAppData = data;
                var totalRecords = allInsAppointments.Count();
                ViewBag.AppInstCount = totalRecords;
                //return Json(new
                //{
                //    param.sEcho,
                //    iTotalRecords = totalRecords,
                //    iTotalDisplayRecords = totalRecords,
                //    aaData = data
                //}, JsonRequestBehavior.AllowGet);
            }

#pragma warning disable CS0168 // The variable 'ex' is declared but never used
            catch (Exception ex)
#pragma warning restore CS0168 // The variable 'ex' is declared but never used
            {
                return null;
                //throw;
            }
            //if (name.Contains(""))
            //{
            //    var allOfficialDocument = dbcont.tbl_OfficialDocument.Where(x => x.MemberId == id).ToList();

            //    if (!string.IsNullOrEmpty(SearchTxt))
            //    {
            //        allOfficialDocument = allOfficialDocument.Where(x => x.DocType1.ToLower().Contains(SearchTxt)
            //                               || x.NameAndNo1.ToLower().Contains(SearchTxt)).ToList();
            //    }
            //    ViewBag.allOfficialDocument = allOfficialDocument != null && !id.Equals("AutoGen") ? allOfficialDocument.ToList() : null;
            string[] tableHeading = { "FromDate", "ToDate", "Name", "Designation", "Institution", "Action" };
            ViewBag.TableHeading = tableHeading.ToList();
            ViewBag.PageCountSR2 = firstItem;
            //}

            return View("~/Views/Member/_MemberPrimaryDetailsDataTable.cshtml");
        }



        [HttpGet]
        public FileResult ExportFilteredDataToExcel(string provinceName, string age, string fromAge, string toAge, string GroupBy)
        {
            string currentUser = Convert.ToString(Session["username"]);
            var alldata = GetFilteredMemberData(provinceName, age, fromAge, toAge, GroupBy);
            //alldata = alldata.OrderByDescending(x => x.DOB.Split('/')[2]).ToList();
            alldata = alldata.OrderByDescending(x => x.DOB).ToList();
            DataTable dt = new DataTable();
            int count = 1;
            var data = dbcont.tblUserDynamicConfiguration.Where(x => x.CurrentUser == currentUser && x.ListType == "3").FirstOrDefault();
            string ValidCols = data == null ? "" : Convert.ToString(data.ListData);
            string[] ColumnsArr = ValidCols.Split(',');
            foreach (string col in ColumnsArr)
            {
                if (col == "1")
                {
                    dt.Columns.Add("SrNO", typeof(System.String));
                }
                if (col == "2")
                {
                    dt.Columns.Add("Name", typeof(System.String));
                }
                if (col == "3")
                {
                    dt.Columns.Add("Surname", typeof(System.String));
                }
                if (col == "4")
                {
                    dt.Columns.Add("Baptismal Name", typeof(System.String));
                }
                if (col == "5")
                {
                    dt.Columns.Add("DOB", typeof(System.String));
                }
                if (col == "6")
                {
                    dt.Columns.Add("Country", typeof(System.String));
                }
                if (col == "7")
                {
                    dt.Columns.Add("Province Name", typeof(System.String));
                }
                if (col == "8")
                {
                    dt.Columns.Add("File No", typeof(System.String));
                }
                if (col == "9")
                {
                    dt.Columns.Add("Place Of Birth", typeof(System.String));
                }
                if (col == "10")
                {
                    dt.Columns.Add("Nationality", typeof(System.String));
                }
                if (col == "11")
                {
                    dt.Columns.Add("Mobile No", typeof(System.String));
                }
                if (col == "12")
                {
                    dt.Columns.Add("Email Id", typeof(System.String));
                }
                if (col == "13")
                {
                    dt.Columns.Add("MotherTounge", typeof(System.String));
                }
                if (col == "14")
                {
                    dt.Columns.Add("Designations", typeof(System.String));
                }
            }

            foreach (var item in alldata)
            {
                DataRow row = dt.NewRow();
                if (ColumnsArr.Contains("1"))
                {
                    row["SrNO"] = count;

                }
                if (ColumnsArr.Contains("2"))
                {
                    row["Name"] = item.Name;

                }
                if (ColumnsArr.Contains("3"))
                {
                    row["Surname"] = item.Sirname;

                }
                if (ColumnsArr.Contains("4"))
                {
                    row["Baptismal Name"] = item.NameBaptismial;

                }
                if (ColumnsArr.Contains("5"))
                {
                    row["DOB"] = item.DOB;

                }
                if (ColumnsArr.Contains("6"))
                {
                    row["Country"] = item.Country;

                }
                if (ColumnsArr.Contains("7"))
                {
                    row["Province Name"] = item.ProvinceName;

                }
                if (ColumnsArr.Contains("8"))
                {
                    row["File No"] = item.FileNo;

                }
                if (ColumnsArr.Contains("9"))
                {
                    row["Place Of Birth"] = item.PlaceOfBirth;

                }
                if (ColumnsArr.Contains("10"))
                {
                    row["Nationality"] = item.Nationality;

                }
                if (ColumnsArr.Contains("11"))
                {
                    row["Mobile No"] = item.MobileNo;

                }
                if (ColumnsArr.Contains("12"))
                {
                    row["Email Id"] = item.EmailId;

                }
                if (ColumnsArr.Contains("13"))
                {
                    row["MotherTounge"] = item.MotherTongue;

                }
                if (ColumnsArr.Contains("14"))
                {
                    row["Designations"] = item.AppiontmentType;

                }
                dt.Rows.Add(row);
                count++;
            }
            //dt.Columns.AddRange(new DataColumn[3] { new DataColumn("SrNo"),
            //                                         new DataColumn("Namr"),
            //                                         new DataColumn("DOB")});


            //foreach (var item in alldata)
            //{
            //    dt.Rows.Add(count, item.Name, GetAge(item.DOB));
            //    count++;
            //}

            using (XLWorkbook wb = new XLWorkbook()) //Install ClosedXml from Nuget for XLWorkbook
            {

                wb.Worksheets.Add(dt, "sheet1");
                using (MemoryStream stream = new MemoryStream()) //using System.IO;  
                {
                    wb.SaveAs(stream);
                    return File(stream.ToArray(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ExcelFile.xlsx");
                }
            }
        }



        public ActionResult AgeView()
        {

            var agelist = dbcont.Tbl_AverageAge.ToList();
            ViewBag.AgeLIst = agelist;

            return View();
        }

        public JsonResult AverageAgeView()
        {
            List<GetAllPrileView> alldata = new List<GetAllPrileView>();
            List<GetAllPrileView> Totalcount = new List<GetAllPrileView>();
            if (System.Web.HttpContext.Current.Session["MembersData"] != null)
            {
                var configuration = new MapperConfiguration(cfg => cfg.CreateMap<TempPersonelDataViewmodel, GetAllPrileView>()
                    .ForMember(dest => dest.ProvinceName, opt => opt.MapFrom(src => src.Provincename))
                    .ForMember(dest => dest.ProvinceId, opt => opt.MapFrom(src => src.ProvinceId))
                    .ForMember(dest => dest.NameBaptismial, opt => opt.MapFrom(src => src.NameBaptismial))
                    .ForMember(dest => dest.PreNoviDate, opt => opt.MapFrom(src => src.PreNoviDate)));
                var mapper = configuration.CreateMapper();
                var allTempPersonalDataViewModel = System.Web.HttpContext.Current.Session["MembersData"] as List<TempPersonelDataViewmodel>;
                List<GetAllPrileView> getAllPrileViews = mapper.Map<List<TempPersonelDataViewmodel>, List<GetAllPrileView>>(allTempPersonalDataViewModel);
                alldata = getAllPrileViews;
            }
            else
            {
                alldata = GetDetails();
            }
            var provincedetails = dbcont.tbl_Province.ToList();
            var AverageAge = dbcont.Tbl_AverageAge.ToList();

            string html = "";
            int TotalProvinceCount = 0;
            decimal TotalAverageCount = 0;
            decimal Ttlavecount = 0;
            List<GetAllPrileView> ageFilteredData = new List<GetAllPrileView>();
            List<GetAllPrileView> provinceGroup = new List<GetAllPrileView>();
            List<FilterAge> filterAge = new List<FilterAge>();
            AgeCount ageCount = new AgeCount();
            AverageCount averageCount = new AverageCount();
#pragma warning disable CS0219 // The variable 'IstCnt' is assigned but its value is never used
            var IstCnt = "";
#pragma warning restore CS0219 // The variable 'IstCnt' is assigned but its value is never used
            for (int i = 0; i < provincedetails.Count(); i++)
            {
                decimal count = 0;
                decimal AverageCount = 0;
                html += "<tr>";
                html += "<th>" + provincedetails[i].ProvinceName + "</th>";
                var provinceid = provincedetails[i].Id.ToString();
                for (int j = 0; j < AverageAge.Count(); j++)
                {
                    var fromAge = AverageAge[j].Average_Age.Split('-');
                    int frmAge = Convert.ToInt32(fromAge[0]);
                    int toAge = Convert.ToInt32(fromAge[1]);
                    int age = Convert.ToInt32(fromAge[1]);
                    //var provinceGroup = dbcont.tbl_Primarydetails.Where(x => x.ProvinceName == provinceid).ToList();
                    provinceGroup = alldata.Where(x => x.ProvinceId == provinceid).ToList();
                    Totalcount = alldata.Where(x => GetAge(x.DOB) <= age && GetAge(x.DOB) >= frmAge).OrderBy(k => k.DOB).ToList();

                    averageCount.FirstCnt = averageCount.FirstCnt + Totalcount.Count();

                    //ageFilteredData = alldata.Where(x => GetAge(x.DOB) <= age && GetAge(x.DOB) >= frmAge).ToList();
                    var AgeFilterDate = provinceGroup.Where(x => GetAge(x.DOB) <= age && GetAge(x.DOB) >= frmAge).OrderBy(k => k.DOB).ToList();
                    count = count + AgeFilterDate.Count();

                    //for (int ageValue = frmAge; ageValue <= age; ageValue++)
                    //{
                    //    ageCount.Age = ageValue;
                    //    var ijo = provinceGroup.Where(y => GetAge(y.DOB) == ageValue).ToList();
                    //    ageCount.Count = ijo.Count;
                    //}
                    //count = AgeFilterDate.Count();
                    html += "<td>" + AgeFilterDate.Count() + "</td>";

                    //ageFilteredData = alldata.Where(x => GetAge(x.DOB) == frmAge).ToList();

                }
                for (int k = 0; k < provinceGroup.Count(); k++)
                {
                    var AverageAgeFilter = GetAge1(provinceGroup[k].DOB);
                    AverageCount = AverageCount + AverageAgeFilter;
                }
                html += "<td>" + count + "</td>";

                if (count > 0)
                {
                    decimal totalavecount = AverageCount / count;
                    html += "<td>" + decimal.Round(totalavecount, 2) + "</td>";

                }
                else
                {
                    html += "<td>" + decimal.Round(AverageCount, 2) + "</td>";

                }



                html += "</tr>";
            }




            html += "<tr>";
            html += "<td>Total :</td>";
            for (int k = 0; k < AverageAge.Count(); k++)
            {
                int TotalAgeCount = 0;
                var fromAge = AverageAge[k].Average_Age.Split('-');
                int frmAge = Convert.ToInt32(fromAge[0]);
                int toAge = Convert.ToInt32(fromAge[1]);
                int age = Convert.ToInt32(fromAge[1]);
                Totalcount = alldata.Where(x => GetAge(x.DOB) <= age && GetAge(x.DOB) >= frmAge).OrderBy(j => j.DOB).ToList();
                TotalAgeCount = TotalAgeCount + Totalcount.Count();

                html += "<td>" + TotalAgeCount + "</td>";

            }

            for (int x = 0; x < provincedetails.Count(); x++)
            {
                var provinceid1 = provincedetails[x].Id.ToString();
                var data = alldata.Where(e => e.ProvinceId == provinceid1).ToList();

                TotalProvinceCount = TotalProvinceCount + data.Count();

                for (int p = 0; p < data.Count(); p++)
                {
                    var AverageAgeFilter = GetAge1(data[p].DOB);
                    TotalAverageCount = TotalAverageCount + AverageAgeFilter;
                }

            }
            html += "<td>" + alldata.Count() + "</td>";

            Ttlavecount = TotalAverageCount / alldata.Count();

            html += "<td>" + decimal.Round(Ttlavecount, 2) + "</td>";
            html += "</tr>";



            return Json(html, JsonRequestBehavior.AllowGet);
        }

        //public ActionResult UpdateSapcheck()
        //{
        //    var tblsepration = dbcont.tbl_SeperationFromTheCongregation.ToList();
        //    var tblformation = dbcont.Tbl_formationsDetails.ToList();
        //    var url = Request.UrlReferrer.AbsoluteUri;
        //    try
        //    {
        //        foreach (var item in tblsepration)
        //        {
        //            var formationdata = tblformation.Where(x => x.MemberId == item.MemberID).ToList();
        //            if (formationdata.Count > 0)
        //            {
        //                foreach (var obj in formationdata)
        //                {

        //                    var formation = formationdata.FirstOrDefault(x => x.MemberId == obj.MemberId);
        //                    if (formation.Sapcheck != "Active")
        //                    {
        //                        formation.Sapcheck = "Active";
        //                        dbcont.SaveChanges();
        //                    }
        //                }
        //            }
        //        }
        //        return View();
        //        //return Content("<script language='javascript' type='text/javascript'>location.replace('" + url + "')</script>");

        //    }
        //    catch (Exception ex)
        //    {
        //        throw;
        //    }



        //}



    }

    internal class BasedOnDesignationDataViewModel
    {
        public string Name { get; set; }
        public string SurName { get; set; }
        public string FromDate { get; set; }
        public string ToDate { get; set; }
        public string Institutions { get; set; }
        public string Designations { get; set; }
    }
    public class FilterAge
    {
        public FilterAge()
        {
            AgeCounts = new List<AgeCount>();
        }
        public string Name { get; set; }
        public int Count { get; set; }
        public List<AgeCount> AgeCounts { get; set; }
    }
    public class AgeCount
    {
        public int Age { get; set; }
        public int Count { get; set; }
    }
    public class DDModel
    {
        public string Value { get; set; }
        public string Text { get; set; }

    }
    public class getAllInstitution
    {
        public string Name { get; set; }
        public string SirName { get; set; }
        public string Designation { get; set; }
    }
    public class GetAllPrileView
    {
        public string ProvinceName { get; set; }
        public string Name { get; set; }
        public string MemberId { get; set; }
        public string Sirname { get; set; }
        public string FileNo { get; set; }
        public string NameBaptismial { get; set; }
        public string DOB { get; set; }
        public string Country { get; set; }
        public string PlaceOfBirth { get; set; }
        public string Nationality { get; set; }
        public string MobileNo { get; set; }
        public string EmailId { get; set; }
        public string MotherTounge { get; set; }
        public string AppiontmentType { get; set; }
        public string FromDate { get; set; }
        public string ToDate { get; set; }
        public string Image { get; set; }
        public string ProvinceId { get; set; }
        public string Continent { get; set; }
        public string MotherTongue { get; set; }
        public string District { get; set; }
        public string City { get; set; }
        public string State { get; set; }
        public string Age { get; set; }
        public string FirstNoviDate { get; set; }
        public string SecondNoviDate { get; set; }
        public string PreNoviDate { get; set; }
        public string JubilyType { get; set; }
        public string ArcheveNO { get; set; }
        public string Course { get; set; }
        public string GenFileNo { get; set; }
    }
    public class Novitiate
    {
        public string Name { get; set; }
        public string MemberId { get; set; }
        public string ProvinceName { get; set; }
    }

    public class PersonalDetails
    {
        public PersonalDetails()
        {
            PersonPrimaryDetails = new tbl_Primarydetails();
            PrsnDetails = new tbl_PersonalDetails();
        }
        public tbl_Primarydetails PersonPrimaryDetails { get; set; }
        public tbl_PersonalDetails PrsnDetails { get; set; }
        public string ProfessionDay { get; set; }
    }

    public class AverageCount
    {
        public string FirstCnt;
        public string SecondCnt;
        public string ThirdCnt;
        public string FourthCnt;
        public string FifthCnt;
        public string SixthCnt;
        public string SeventhCnt;
        public string EightCnt;
        public string NinthCnt;
        public string TenthCnt;
        public string EleventhCnt;
        public string TwelthCnt;
        public string ThirteenthCnt;
        public string FourtenthCnt;
        public string fifteenthCnt;
        public string SixteenthCnt;
        public string SevententhCnt;

    }


    public class FormationDetails
    {
        public string FormationId { get; set; }

    }

}
















